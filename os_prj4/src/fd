devices/block.h:/* Higher-level interface for file systems, etc. */
devices/block.h:    BLOCK_FOREIGN,               /* Owned by non-Pintos operating system. */
devices/block.h:/* Lower-level interface to block device drivers. */
devices/block.c:/* Returns a human-readable name for the given block device
devices/block.c:  return list_elem_to_block (list_next (&block->list_elem));
devices/block.c:      if (!strcmp (name, block->name))
devices/block.c:  if (sector >= block->size)
devices/block.c:             "size=%"PRDSNu")\n", block_name (block), sector, block->size);
devices/block.c:   per-block device locking is unneeded. */
devices/block.c:  block->ops->read (block->aux, sector, buffer);
devices/block.c:  block->read_cnt++;
devices/block.c:   per-block device locking is unneeded. */
devices/block.c:  ASSERT (block->type != BLOCK_FOREIGN);
devices/block.c:  block->ops->write (block->aux, sector, buffer);
devices/block.c:  block->write_cnt++;
devices/block.c:  return block->size;
devices/block.c:  return block->name;
devices/block.c:  return block->type;
devices/block.c:                  block->name, block_type_name (block->type),
devices/block.c:                  block->read_cnt, block->write_cnt);
devices/block.c:   EXTRA_INFO is non-null, it is printed as part of a user
devices/block.c:  list_push_back (&all_blocks, &block->list_elem);
devices/block.c:  strlcpy (block->name, name, sizeof block->name);
devices/block.c:  block->type = type;
devices/block.c:  block->size = size;
devices/block.c:  block->ops = ops;
devices/block.c:  block->aux = aux;
devices/block.c:  block->read_cnt = 0;
devices/block.c:  block->write_cnt = 0;
devices/block.c:  printf ("%s: %'"PRDSNu" sectors (", block->name, block->size);
devices/block.c:  print_human_readable_size ((uint64_t) block->size * BLOCK_SECTOR_SIZE);
devices/ide.c:   controller.  It attempts to comply to [ATA-3]. */
devices/ide.c:#define reg_data(CHANNEL) ((CHANNEL)->reg_base + 0)     /* Data. */
devices/ide.c:#define reg_error(CHANNEL) ((CHANNEL)->reg_base + 1)    /* Error. */
devices/ide.c:#define reg_nsect(CHANNEL) ((CHANNEL)->reg_base + 2)    /* Sector Count. */
devices/ide.c:#define reg_lbal(CHANNEL) ((CHANNEL)->reg_base + 3)     /* LBA 0:7. */
devices/ide.c:#define reg_lbam(CHANNEL) ((CHANNEL)->reg_base + 4)     /* LBA 15:8. */
devices/ide.c:#define reg_lbah(CHANNEL) ((CHANNEL)->reg_base + 5)     /* LBA 23:16. */
devices/ide.c:#define reg_device(CHANNEL) ((CHANNEL)->reg_base + 6)   /* Device/LBA 27:24. */
devices/ide.c:#define reg_status(CHANNEL) ((CHANNEL)->reg_base + 7)   /* Status (r/o). */
devices/ide.c:   (If we supported non-legacy ATA controllers this would not be
devices/ide.c:#define reg_ctl(CHANNEL) ((CHANNEL)->reg_base + 0x206)  /* Control (w/o). */
devices/ide.c:      snprintf (c->name, sizeof c->name, "ide%zu", chan_no);
devices/ide.c:          c->reg_base = 0x1f0;
devices/ide.c:          c->irq = 14 + 0x20;
devices/ide.c:          c->reg_base = 0x170;
devices/ide.c:          c->irq = 15 + 0x20;
devices/ide.c:      lock_init (&c->lock);
devices/ide.c:      c->expecting_interrupt = false;
devices/ide.c:      sema_init (&c->completion_wait, 0);
devices/ide.c:          struct ata_disk *d = &c->devices[dev_no];
devices/ide.c:          snprintf (d->name, sizeof d->name,
devices/ide.c:          d->channel = c;
devices/ide.c:          d->dev_no = dev_no;
devices/ide.c:          d->is_ata = false;
devices/ide.c:      intr_register_ext (c->irq, interrupt_handler, c->name);
devices/ide.c:      if (check_device_type (&c->devices[0]))
devices/ide.c:        check_device_type (&c->devices[1]);
devices/ide.c:        if (c->devices[dev_no].is_ata)
devices/ide.c:          identify_ata_device (&c->devices[dev_no]);
devices/ide.c:      struct ata_disk *d = &c->devices[dev_no];
devices/ide.c:      select_device (&c->devices[0]);
devices/ide.c:      wait_while_busy (&c->devices[0]); 
devices/ide.c:      select_device (&c->devices[1]);
devices/ide.c:      wait_while_busy (&c->devices[1]);
devices/ide.c:  struct channel *c = d->channel;
devices/ide.c:  if ((error != 1 && (error != 0x81 || d->dev_no == 1))
devices/ide.c:      d->is_ata = false;
devices/ide.c:      d->is_ata = (lbam == 0 && lbah == 0) || (lbam == 0x3c && lbah == 0xc3);
devices/ide.c:  struct channel *c = d->channel;
devices/ide.c:  ASSERT (d->is_ata);
devices/ide.c:  sema_down (&c->completion_wait);
devices/ide.c:      d->is_ata = false;
devices/ide.c:      printf ("%s: ignoring ", d->name);
devices/ide.c:      d->is_ata = false;
devices/ide.c:  block = block_register (d->name, BLOCK_RAW, extra_info, capacity,
devices/ide.c:   format, into a null-terminated string in-place.  Drops
devices/ide.c:  /* Find the last non-white, non-null character. */
devices/ide.c:  for (size--; size > 0; size--)
devices/ide.c:      int c = string[size - 1];
devices/ide.c:   per-disk locking is unneeded. */
devices/ide.c:  struct channel *c = d->channel;
devices/ide.c:  lock_acquire (&c->lock);
devices/ide.c:  sema_down (&c->completion_wait);
devices/ide.c:    PANIC ("%s: disk read failed, sector=%"PRDSNu, d->name, sec_no);
devices/ide.c:  lock_release (&c->lock);
devices/ide.c:   per-disk locking is unneeded. */
devices/ide.c:  struct channel *c = d->channel;
devices/ide.c:  lock_acquire (&c->lock);
devices/ide.c:    PANIC ("%s: disk write failed, sector=%"PRDSNu, d->name, sec_no);
devices/ide.c:  sema_down (&c->completion_wait);
devices/ide.c:  lock_release (&c->lock);
devices/ide.c:  struct channel *c = d->channel;
devices/ide.c:        DEV_MBS | DEV_LBA | (d->dev_no == 1 ? DEV_DEV : 0) | (sec_no >> 24));
devices/ide.c:  c->expecting_interrupt = true;
devices/ide.c:/* Low-level ATA primitives. */
devices/ide.c:      if ((inb (reg_status (d->channel)) & (STA_BSY | STA_DRQ)) == 0)
devices/ide.c:  printf ("%s: idle timeout\n", d->name);
devices/ide.c:  struct channel *c = d->channel;
devices/ide.c:        printf ("%s: busy, waiting...", d->name);
devices/ide.c:  struct channel *c = d->channel;
devices/ide.c:  if (d->dev_no == 1)
devices/ide.c:    if (f->vec_no == c->irq)
devices/ide.c:        if (c->expecting_interrupt) 
devices/ide.c:            sema_up (&c->completion_wait);      /* Wake up waiter. */
devices/ide.c:          printf ("%s: unexpected interrupt\n", c->name);
devices/intq.c:  lock_init (&q->lock);
devices/intq.c:  q->not_full = q->not_empty = NULL;
devices/intq.c:  q->head = q->tail = 0;
devices/intq.c:  return q->head == q->tail;
devices/intq.c:  return next (q->head) == q->tail;
devices/intq.c:      lock_acquire (&q->lock);
devices/intq.c:      wait (q, &q->not_empty);
devices/intq.c:      lock_release (&q->lock);
devices/intq.c:  byte = q->buf[q->tail];
devices/intq.c:  q->tail = next (q->tail);
devices/intq.c:  signal (q, &q->not_full);
devices/intq.c:      lock_acquire (&q->lock);
devices/intq.c:      wait (q, &q->not_full);
devices/intq.c:      lock_release (&q->lock);
devices/intq.c:  q->buf[q->head] = byte;
devices/intq.c:  q->head = next (q->head);
devices/intq.c:  signal (q, &q->not_empty);
devices/intq.c:  ASSERT ((waiter == &q->not_empty && intq_empty (q))
devices/intq.c:          || (waiter == &q->not_full && intq_full (q)));
devices/intq.c:  ASSERT ((waiter == &q->not_empty && !intq_empty (q))
devices/intq.c:          || (waiter == &q->not_full && !intq_full (q)));
devices/intq.h:    struct thread *not_full;    /* Thread waiting for not-full condition. */
devices/intq.h:    struct thread *not_empty;   /* Thread waiting for not-empty condition. */
devices/kbd.c:    {0x02, "1234567890-="},
devices/kbd.c:              c -= 0x40; 
devices/kbd.c:      for (key = shift_keys; key->scancode != 0; key++) 
devices/kbd.c:        if (key->scancode == code)
devices/kbd.c:            *key->state_var = !release;
devices/kbd.c:  for (; k->first_scancode != 0; k++)
devices/kbd.c:    if (scancode >= k->first_scancode
devices/kbd.c:        && scancode < k->first_scancode + strlen (k->chars)) 
devices/kbd.c:        *c = k->chars[scancode - k->first_scancode];
devices/partition.c:   If SECTOR is 0, so that this is the top-level partition table
devices/partition.c:   otherwise, it should designate the sector of the top-level
devices/partition.c:   PART_NR points to the number of non-empty primary or logical
devices/partition.c:      uint8_t loader[446];      /* Loader, in top-level partition table. */
devices/partition.c:  if (pt->signature != 0xaa55)
devices/partition.c:  for (i = 0; i < sizeof pt->partitions / sizeof *pt->partitions; i++)
devices/partition.c:      struct partition_table_entry *e = &pt->partitions[i];
devices/partition.c:      if (e->size == 0 || e->type == 0)
devices/partition.c:      else if (e->type == 0x05       /* Extended partition. */
devices/partition.c:               || e->type == 0x0f    /* Windows 98 extended partition. */
devices/partition.c:               || e->type == 0x85    /* Linux extended partition. */
devices/partition.c:               || e->type == 0xc5)   /* DR-DOS extended partition. */
devices/partition.c:            read_partition_table (block, e->offset, e->offset, part_nr);
devices/partition.c:            read_partition_table (block, e->offset + primary_extended_sector,
devices/partition.c:          found_partition (block, e->type, e->offset + sector,
devices/partition.c:                           e->size, *part_nr);
devices/partition.c:      p->block = block;
devices/partition.c:      p->start = start;
devices/partition.c:/* Returns a human-readable name for the given partition TYPE. */
devices/partition.c:     From util-linux-2.12r/fdisk/i386_sys_types.c.
devices/partition.c:      [0x55] = "EZ-Drive",
devices/partition.c:      [0x70] = "DiskSecure Multi-Boot",
devices/partition.c:      [0xc1] = "DRDOS/sec (FAT-12)",
devices/partition.c:      [0xc4] = "DRDOS/sec (FAT-16 < 32M)",
devices/partition.c:      [0xc6] = "DRDOS/sec (FAT-16)",
devices/partition.c:      [0xda] = "Non-FS data",
devices/partition.c:      [0xef] = "EFI (FAT-12/16/32)",
devices/partition.c:      [0xf0] = "Linux/PA-RISC boot",
devices/partition.c:  block_read (p->block, p->start + sector, buffer);
devices/partition.c:  block_write (p->block, p->start + sector, buffer);
devices/pit.c:     - Channel 0 is connected to interrupt line 0, so that it can
devices/pit.c:     - Channel 1 is used for dynamic RAM refresh (in older PCs).
devices/pit.c:     - Channel 2 is connected to the PC speaker, so that it can
devices/pit.c:     - Mode 2 is a periodic pulse: the channel's output is 1 for
devices/pit.c:     - Mode 3 is a square wave: for the first half of the period
devices/pit.c:     - Other modes are less useful.
devices/pit.c:         16-bit counter.  Force it to 0, which the PIT treats as
devices/rtc.c:/* This code is an interface to the MC146818A-compatible real
devices/rtc.c:/* Indexes of CMOS registers with real-time clock functions.
devices/rtc.c:#define RTC_REG_A	0x0a    /* Register A: update-in-progress. */
devices/rtc.c:#define RTCSB_24HR	0x02    /* 0 = 12-hour format, 1 = 24-hour format. */
devices/rtc.c:     except on obscure non-PC platforms, so we don't bother
devices/rtc.c:  /* Translate years-since-1900 into years-since-1970.
devices/rtc.c:     This will break at 2070, but that's long after our 31-bit
devices/rtc.c:  year -= 70;
devices/rtc.c:  time = (year * 365 + (year - 1) / 4) * 24 * 60 * 60;
devices/rtc.c:    time += days_per_month[i - 1] * 24 * 60 * 60;
devices/rtc.c:  time += (mday - 1) * 24 * 60 * 60;
devices/serial.c:#define RBR_REG (IO_BASE + 0)   /* Receiver Buffer Reg. (read-only). */
devices/serial.c:#define THR_REG (IO_BASE + 0)   /* Transmitter Holding Reg. (write-only). */
devices/serial.c:/* DLAB-insensitive registers. */
devices/serial.c:#define IIR_REG (IO_BASE + 2)   /* Interrupt Identification Reg. (read-only) */
devices/serial.c:#define FCR_REG (IO_BASE + 2)   /* FIFO Control Reg. (write-only). */
devices/serial.c:#define LSR_REG (IO_BASE + 5)   /* Line Status Register (read-only). */
devices/serial.c:   Polling mode busy-waits for the serial port to become free
devices/serial.c:  set_serial (9600);                    /* 9.6 kbps, N-8-1. */
devices/serial.c:/* Initializes the serial port device for queued interrupt-driven
devices/serial.c:   I/O.  With interrupt-driven I/O we don't waste CPU time
devices/serial.c:      /* If we're not set up for interrupt-driven I/O yet,
devices/shutdown.c:  /* ACPI power-off */
devices/shutdown.c:  /* This is a special power-off sequence supported by Bochs and
devices/shutdown.c:  /* For newer versions of qemu, you must run with -device
devices/shutdown.c:   * isa-debug-exit, which exits on any write to an IO port (by
devices/timer.c:  /* Approximate loops_per_tick as the largest power-of-two
devices/timer.c:  return timer_ticks () - then;
devices/timer.c:/* Busy-waits for approximately MS milliseconds.  Interrupts need
devices/timer.c:  while (loops-- > 0)
devices/timer.c:     ---------------------- = NUM * TIMER_FREQ / DENOM ticks. 
devices/timer.c:      /* Otherwise, use a busy-wait loop for more accurate
devices/timer.c:         sub-tick timing. */
devices/timer.c:/* Busy-wait for approximately NUM/DENOM seconds. */
devices/vga.c:        cx--;
devices/vga.c:      cy = ROW_CNT - 1;
devices/vga.c:      memmove (&fb[0], &fb[1], sizeof fb[0] * (ROW_CNT - 1));
devices/vga.c:      clear_row (ROW_CNT - 1);
devices/vga.c:  /* See [FREEVGA] under "Manipulating the Text-mode Cursor". */
devices/vga.c:  /* See [FREEVGA] under "Manipulating the Text-mode Cursor". */
examples/.gitignore:hex-dump
examples/bubsort.c:    array[i] = SORT_SIZE - i - 1;
examples/bubsort.c:  for (i = 0; i < SORT_SIZE - 1; i++)
examples/bubsort.c:    for (j = 0; j < SORT_SIZE - 1 - i; j++)
examples/lineup.c:   Converts a file to uppercase in-place.
examples/lineup.c:      seek (handle, tell (handle) - n);
examples/hex-dump.c:/* hex-dump.c
examples/ls.c:   By default, only the name of each file is printed.  If "-l" is
examples/ls.c:  if (dir_fd == -1) 
examples/ls.c:              if (entry_fd != -1)
examples/ls.c:                    printf ("%d-byte file", filesize (entry_fd));
examples/ls.c:  if (argc > 1 && !strcmp (argv[1], "-l")) 
examples/ls.c:      argc--;
examples/Makefile:PROGS = cat cmp cp echo halt hex-dump ls mcat mcp mkdir pwd rm shell \
examples/Makefile:hex-dump_SRC = hex-dump.c
examples/matmult.c: ------     --------
examples/matmult.c:  exit (C[DIM - 1][DIM - 1]);
examples/pwd.c:   bytes of the DST_SIZE-byte buffer that starts at DST.
examples/pwd.c:      memcpy ((dst + dst_size) - *dst_len, prefix, prefix_len);
examples/pwd.c:/* Stores the current working directory, as a null-terminated
examples/pwd.c:      if ((namep - name) > MAX_LEVEL * 3)
examples/pwd.c:      if (!prepend (namep - 1, cwd, &cwd_len, cwd_size))
examples/pwd.c:         and null-terminate it. */
examples/pwd.c:      memmove (cwd, (cwd + cwd_size) - cwd_len, cwd_len);
examples/recursor.c:                "recursor %s %d %s", argv[1], atoi (argv[2]) - 1, argv[3]);
examples/shell.c:      printf ("--");
examples/shell.c:   null-terminated and will not end in a new-line character. */
examples/shell.c:        case ('U' - 'A') + 1:       /* Ctrl+U. */
examples/shell.c:          if (pos < line + size - 1) 
examples/shell.c:      (*pos)--;
Binary file examples/lib/user/entry.o matches
Binary file examples/lib/user/debug.o matches
examples/lib/user/syscall.d: ../lib/stdbool.h ../lib/debug.h ../lib/user/../syscall-nr.h
Binary file examples/lib/user/syscall.o matches
examples/lib/user/console.d: ../lib/syscall-nr.h
Binary file examples/lib/user/console.o matches
Binary file examples/lib/debug.o matches
Binary file examples/lib/random.o matches
Binary file examples/lib/stdio.o matches
Binary file examples/lib/stdlib.o matches
Binary file examples/lib/string.o matches
Binary file examples/lib/arithmetic.o matches
Binary file examples/lib/ustar.o matches
Binary file examples/cat.o matches
Binary file examples/libc.a matches
Binary file examples/cat matches
Binary file examples/cmp.o matches
Binary file examples/cmp matches
Binary file examples/cp.o matches
Binary file examples/cp matches
Binary file examples/echo.o matches
Binary file examples/echo matches
Binary file examples/halt.o matches
Binary file examples/halt matches
examples/hex-dump.d:hex-dump.o: hex-dump.c ../lib/stdio.h ../lib/debug.h ../lib/stdarg.h \
Binary file examples/hex-dump.o matches
Binary file examples/hex-dump matches
Binary file examples/ls.o matches
Binary file examples/ls matches
Binary file examples/mcat.o matches
Binary file examples/mcat matches
Binary file examples/mcp.o matches
Binary file examples/mcp matches
Binary file examples/mkdir.o matches
Binary file examples/mkdir matches
Binary file examples/pwd.o matches
Binary file examples/pwd matches
Binary file examples/rm.o matches
Binary file examples/rm matches
Binary file examples/shell.o matches
Binary file examples/shell matches
Binary file examples/bubsort.o matches
Binary file examples/bubsort matches
Binary file examples/lineup.o matches
Binary file examples/lineup matches
Binary file examples/matmult.o matches
Binary file examples/matmult matches
Binary file examples/recursor.o matches
Binary file examples/recursor matches
Binary file examples/additional.o matches
Binary file examples/additional matches
filesys/directory.c:      dir->inode = inode;
filesys/directory.c:      dir->pos = 0;
filesys/directory.c:  return dir_open (inode_reopen (dir->inode));
filesys/directory.c:      inode_close (dir->inode);
filesys/directory.c:  return dir->inode;
filesys/directory.c:   if EP is non-null, and sets *OFSP to the byte offset of the
filesys/directory.c:   directory entry if OFSP is non-null.
filesys/directory.c:  for (ofs = 0; inode_read_at (dir->inode, &e, sizeof e, ofs) == sizeof e;
filesys/directory.c:     current end-of-file.
filesys/directory.c:  for (ofs = 0; inode_read_at (dir->inode, &e, sizeof e, ofs) == sizeof e;
filesys/directory.c:  success = inode_write_at (dir->inode, &e, sizeof e, ofs) == sizeof e;
filesys/directory.c:  if (inode_write_at (dir->inode, &e, sizeof e, ofs) != sizeof e) 
filesys/directory.c:  while (inode_read_at (dir->inode, &e, sizeof e, dir->pos) == sizeof e) 
filesys/directory.c:      dir->pos += sizeof e;
filesys/filesys.c:#include "filesys/free-map.h"
filesys/free-map.c:#include "filesys/free-map.h"
filesys/free-map.c:    PANIC ("bitmap creation failed--file system device is too large");
filesys/free-map.h:#endif /* filesys/free-map.h */
filesys/fsutil.c:/* Extracts a ustar-format tar archive from the scratch block
filesys/fsutil.c:        PANIC ("bad ustar header in sector %"PRDSNu" (%s)", sector - 1, error);
filesys/fsutil.c:              size -= chunk_size;
filesys/fsutil.c:     end-of-archive marker. */
filesys/fsutil.c:      memset (buffer + chunk_size, 0, BLOCK_SECTOR_SIZE - chunk_size);
filesys/fsutil.c:      size -= chunk_size;
filesys/fsutil.c:  /* Write ustar end-of-archive marker, which is two consecutive
filesys/inode.c:#include "filesys/free-map.h"
filesys/inode.c:/* On-disk inode.
filesys/inode.c:/* In-memory inode. */
filesys/inode.c:   Returns -1 if INODE does not contain data for a byte at offset
filesys/inode.c:  if (pos < inode->data.length)
filesys/inode.c:    return inode->data.start + pos / BLOCK_SECTOR_SIZE;
filesys/inode.c:    return -1;
filesys/inode.c:      disk_inode->length = length;
filesys/inode.c:      disk_inode->magic = INODE_MAGIC;
filesys/inode.c:      if (free_map_allocate (sectors, &disk_inode->start)) 
filesys/inode.c:                block_write (fs_device, disk_inode->start + i, zeros);
filesys/inode.c:      if (inode->sector == sector) 
filesys/inode.c:  list_push_front (&open_inodes, &inode->elem);
filesys/inode.c:  inode->sector = sector;
filesys/inode.c:  inode->open_cnt = 1;
filesys/inode.c:  inode->deny_write_cnt = 0;
filesys/inode.c:  inode->removed = false;
filesys/inode.c:  block_read (fs_device, inode->sector, &inode->data);
filesys/inode.c:    inode->open_cnt++;
filesys/inode.c:  return inode->sector;
filesys/inode.c:  if (--inode->open_cnt == 0)
filesys/inode.c:      list_remove (&inode->elem);
filesys/inode.c:      if (inode->removed) 
filesys/inode.c:          free_map_release (inode->sector, 1);
filesys/inode.c:          free_map_release (inode->data.start,
filesys/inode.c:                            bytes_to_sectors (inode->data.length)); 
filesys/inode.c:  inode->removed = true;
filesys/inode.c:      off_t inode_left = inode_length (inode) - offset;
filesys/inode.c:      int sector_left = BLOCK_SECTOR_SIZE - sector_ofs;
filesys/inode.c:      size -= chunk_size;
filesys/inode.c:  if (inode->deny_write_cnt)
filesys/inode.c:      off_t inode_left = inode_length (inode) - offset;
filesys/inode.c:      int sector_left = BLOCK_SECTOR_SIZE - sector_ofs;
filesys/inode.c:      size -= chunk_size;
filesys/inode.c:  inode->deny_write_cnt++;
filesys/inode.c:  ASSERT (inode->deny_write_cnt <= inode->open_cnt);
filesys/inode.c:/* Re-enables writes to INODE.
filesys/inode.c:  ASSERT (inode->deny_write_cnt > 0);
filesys/inode.c:  ASSERT (inode->deny_write_cnt <= inode->open_cnt);
filesys/inode.c:  inode->deny_write_cnt--;
filesys/inode.c:  return inode->data.length;
filesys/Make.vars:# -*- makefile -*-
filesys/Make.vars:kernel.bin: DEFINES = -DUSERPROG -DFILESYS
filesys/Make.vars:GRADING_FILE = $(SRCDIR)/tests/filesys/Grading.no-vm
filesys/Make.vars:SIMULATOR = --qemu
filesys/Make.vars:#kernel.bin: DEFINES += -DVM
filesys/Make.vars:#GRADING_FILE = $(SRCDIR)/tests/filesys/Grading.with-vm
filesys/build/Makefile:# -*- makefile -*-
filesys/build/Makefile:kernel.bin: CPPFLAGS += -I$(SRCDIR)/lib/kernel
filesys/build/Makefile:threads_SRC += threads/intr-stubs.S	# Interrupt stubs.
filesys/build/Makefile:devices_SRC += devices/rtc.c		# Real-time clock.
filesys/build/Makefile:lib_SRC += lib/random.c			# Pseudo-random numbers.
filesys/build/Makefile:lib_SRC += lib/arithmetic.c		# 64-bit arithmetic for GCC.
filesys/build/Makefile:# Kernel-specific library code.
filesys/build/Makefile:lib/kernel_SRC += lib/kernel/list.c	# Doubly-linked lists.
filesys/build/Makefile:filesys_SRC += filesys/free-map.c	# Free sector bitmap.
filesys/build/Makefile:threads/kernel.lds.s: CPPFLAGS += -P
filesys/build/Makefile:	$(LD) -T $< -o $@ $(OBJECTS)
filesys/build/Makefile:	$(OBJCOPY) -R .note -R .comment -S $< $@
filesys/build/Makefile:	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES)
filesys/build/Makefile:	$(LD) -N -e 0 -Ttext 0x7c00 --oformat binary -o $@ $<
filesys/build/Makefile:	rm -f $(OBJECTS) $(DEPENDS) 
filesys/build/Makefile:	rm -f threads/loader.o threads/kernel.lds.s threads/loader.d
filesys/build/Makefile:	rm -f kernel.bin.tmp
filesys/build/Makefile:	rm -f kernel.o kernel.lds.s
filesys/build/Makefile:	rm -f kernel.bin loader.bin
filesys/build/Makefile:	rm -f bochsout.txt bochsrc.txt
filesys/build/Makefile:	rm -f results grade
filesys/build/Makefile:-include $(DEPENDS)
Binary file filesys/build/devices/block.o matches
Binary file filesys/build/devices/ide.o matches
Binary file filesys/build/devices/input.o matches
Binary file filesys/build/devices/intq.o matches
Binary file filesys/build/devices/kbd.o matches
Binary file filesys/build/devices/partition.o matches
Binary file filesys/build/devices/pit.o matches
Binary file filesys/build/devices/rtc.o matches
Binary file filesys/build/devices/serial.o matches
Binary file filesys/build/devices/shutdown.o matches
Binary file filesys/build/devices/speaker.o matches
Binary file filesys/build/devices/timer.o matches
Binary file filesys/build/devices/vga.o matches
Binary file filesys/build/filesys/directory.o matches
filesys/build/filesys/filesys.d: ../../filesys/file.h ../../filesys/free-map.h ../../devices/block.h \
filesys/build/filesys/free-map.d:filesys/free-map.o: ../../filesys/free-map.c ../../filesys/free-map.h \
filesys/build/filesys/inode.d: ../../lib/string.h ../../filesys/filesys.h ../../filesys/free-map.h \
Binary file filesys/build/filesys/inode.o matches
Binary file filesys/build/filesys/filesys.o matches
Binary file filesys/build/filesys/free-map.o matches
Binary file filesys/build/filesys/file.o matches
Binary file filesys/build/filesys/fsutil.o matches
Binary file filesys/build/lib/arithmetic.o matches
Binary file filesys/build/lib/debug.o matches
Binary file filesys/build/lib/random.o matches
Binary file filesys/build/lib/stdio.o matches
Binary file filesys/build/lib/stdlib.o matches
Binary file filesys/build/lib/string.o matches
Binary file filesys/build/lib/ustar.o matches
Binary file filesys/build/lib/kernel/console.o matches
Binary file filesys/build/lib/kernel/debug.o matches
Binary file filesys/build/lib/kernel/hash.o matches
Binary file filesys/build/lib/kernel/list.o matches
Binary file filesys/build/lib/kernel/bitmap.o matches
Binary file filesys/build/lib/user/console.o matches
filesys/build/lib/user/console.d: ../../lib/string.h ../../lib/user/syscall.h ../../lib/syscall-nr.h
Binary file filesys/build/lib/user/debug.o matches
Binary file filesys/build/lib/user/entry.o matches
filesys/build/lib/user/syscall.d: ../../lib/stdbool.h ../../lib/debug.h ../../lib/user/../syscall-nr.h
Binary file filesys/build/lib/user/syscall.o matches
Binary file filesys/build/tests/lib.o matches
Binary file filesys/build/tests/main.o matches
Binary file filesys/build/tests/filesys/seq-test.o matches
filesys/build/tests/filesys/seq-test.d:tests/filesys/seq-test.o: ../../tests/filesys/seq-test.c \
filesys/build/tests/filesys/seq-test.d: ../../tests/filesys/seq-test.h ../../lib/stddef.h ../../lib/random.h \
filesys/build/tests/filesys/base/child-syn-read.d:tests/filesys/base/child-syn-read.o: \
filesys/build/tests/filesys/base/child-syn-read.d: ../../tests/filesys/base/child-syn-read.c ../../lib/random.h \
filesys/build/tests/filesys/base/child-syn-read.d: ../../tests/lib.h ../../tests/filesys/base/syn-read.h
Binary file filesys/build/tests/filesys/base/child-syn-read.o matches
filesys/build/tests/filesys/base/child-syn-wrt.d:tests/filesys/base/child-syn-wrt.o: \
filesys/build/tests/filesys/base/child-syn-wrt.d: ../../tests/filesys/base/child-syn-wrt.c ../../lib/random.h \
filesys/build/tests/filesys/base/child-syn-wrt.d: ../../tests/filesys/base/syn-write.h
Binary file filesys/build/tests/filesys/base/child-syn-wrt.o matches
filesys/build/tests/filesys/base/lg-create.d:tests/filesys/base/lg-create.o: ../../tests/filesys/base/lg-create.c \
Binary file filesys/build/tests/filesys/base/lg-create.o matches
filesys/build/tests/filesys/base/lg-full.d:tests/filesys/base/lg-full.o: ../../tests/filesys/base/lg-full.c \
filesys/build/tests/filesys/base/lg-full.d: ../../tests/filesys/base/full.inc ../../tests/filesys/seq-test.h \
Binary file filesys/build/tests/filesys/base/lg-full.o matches
filesys/build/tests/filesys/base/lg-random.d:tests/filesys/base/lg-random.o: ../../tests/filesys/base/lg-random.c \
Binary file filesys/build/tests/filesys/base/lg-random.o matches
filesys/build/tests/filesys/base/lg-seq-block.d:tests/filesys/base/lg-seq-block.o: \
filesys/build/tests/filesys/base/lg-seq-block.d: ../../tests/filesys/base/lg-seq-block.c \
filesys/build/tests/filesys/base/lg-seq-block.d: ../../tests/filesys/base/seq-block.inc ../../tests/filesys/seq-test.h \
Binary file filesys/build/tests/filesys/base/lg-seq-block.o matches
filesys/build/tests/filesys/base/lg-seq-random.d:tests/filesys/base/lg-seq-random.o: \
filesys/build/tests/filesys/base/lg-seq-random.d: ../../tests/filesys/base/lg-seq-random.c \
filesys/build/tests/filesys/base/lg-seq-random.d: ../../tests/filesys/base/seq-random.inc ../../lib/random.h \
filesys/build/tests/filesys/base/lg-seq-random.d: ../../lib/stddef.h ../../tests/filesys/seq-test.h ../../tests/main.h
Binary file filesys/build/tests/filesys/base/lg-seq-random.o matches
filesys/build/tests/filesys/base/sm-create.d:tests/filesys/base/sm-create.o: ../../tests/filesys/base/sm-create.c \
Binary file filesys/build/tests/filesys/base/sm-create.o matches
filesys/build/tests/filesys/base/sm-full.d:tests/filesys/base/sm-full.o: ../../tests/filesys/base/sm-full.c \
filesys/build/tests/filesys/base/sm-full.d: ../../tests/filesys/base/full.inc ../../tests/filesys/seq-test.h \
Binary file filesys/build/tests/filesys/base/sm-full.o matches
filesys/build/tests/filesys/base/sm-random.d:tests/filesys/base/sm-random.o: ../../tests/filesys/base/sm-random.c \
Binary file filesys/build/tests/filesys/base/sm-random.o matches
filesys/build/tests/filesys/base/sm-seq-block.d:tests/filesys/base/sm-seq-block.o: \
filesys/build/tests/filesys/base/sm-seq-block.d: ../../tests/filesys/base/sm-seq-block.c \
filesys/build/tests/filesys/base/sm-seq-block.d: ../../tests/filesys/base/seq-block.inc ../../tests/filesys/seq-test.h \
Binary file filesys/build/tests/filesys/base/sm-seq-block.o matches
filesys/build/tests/filesys/base/sm-seq-random.d:tests/filesys/base/sm-seq-random.o: \
filesys/build/tests/filesys/base/sm-seq-random.d: ../../tests/filesys/base/sm-seq-random.c \
filesys/build/tests/filesys/base/sm-seq-random.d: ../../tests/filesys/base/seq-random.inc ../../lib/random.h \
filesys/build/tests/filesys/base/sm-seq-random.d: ../../lib/stddef.h ../../tests/filesys/seq-test.h ../../tests/main.h
Binary file filesys/build/tests/filesys/base/sm-seq-random.o matches
filesys/build/tests/filesys/base/syn-read.d:tests/filesys/base/syn-read.o: ../../tests/filesys/base/syn-read.c \
filesys/build/tests/filesys/base/syn-read.d: ../../tests/lib.h ../../tests/main.h ../../tests/filesys/base/syn-read.h
Binary file filesys/build/tests/filesys/base/syn-read.o matches
filesys/build/tests/filesys/base/syn-remove.d:tests/filesys/base/syn-remove.o: ../../tests/filesys/base/syn-remove.c \
Binary file filesys/build/tests/filesys/base/syn-remove.o matches
filesys/build/tests/filesys/base/syn-write.d:tests/filesys/base/syn-write.o: ../../tests/filesys/base/syn-write.c \
filesys/build/tests/filesys/base/syn-write.d: ../../lib/user/syscall.h ../../tests/filesys/base/syn-write.h \
Binary file filesys/build/tests/filesys/base/syn-write.o matches
Binary file filesys/build/tests/filesys/base/lg-create matches
Binary file filesys/build/tests/filesys/base/lg-full matches
Binary file filesys/build/tests/filesys/base/lg-random matches
Binary file filesys/build/tests/filesys/base/lg-seq-block matches
Binary file filesys/build/tests/filesys/base/lg-seq-random matches
Binary file filesys/build/tests/filesys/base/sm-create matches
Binary file filesys/build/tests/filesys/base/sm-full matches
Binary file filesys/build/tests/filesys/base/sm-random matches
Binary file filesys/build/tests/filesys/base/sm-seq-block matches
Binary file filesys/build/tests/filesys/base/sm-seq-random matches
Binary file filesys/build/tests/filesys/base/syn-read matches
Binary file filesys/build/tests/filesys/base/syn-remove matches
Binary file filesys/build/tests/filesys/base/syn-write matches
Binary file filesys/build/tests/filesys/base/child-syn-read matches
Binary file filesys/build/tests/filesys/base/child-syn-wrt matches
filesys/build/tests/filesys/extended/child-syn-rw.d:tests/filesys/extended/child-syn-rw.o: \
filesys/build/tests/filesys/extended/child-syn-rw.d: ../../tests/filesys/extended/child-syn-rw.c ../../lib/random.h \
filesys/build/tests/filesys/extended/child-syn-rw.d: ../../tests/filesys/extended/syn-rw.h ../../tests/lib.h
Binary file filesys/build/tests/filesys/extended/child-syn-rw.o matches
filesys/build/tests/filesys/extended/dir-empty-name.d:tests/filesys/extended/dir-empty-name.o: \
filesys/build/tests/filesys/extended/dir-empty-name.d: ../../tests/filesys/extended/dir-empty-name.c ../../lib/user/syscall.h \
Binary file filesys/build/tests/filesys/extended/dir-empty-name.o matches
filesys/build/tests/filesys/extended/dir-mk-tree.d:tests/filesys/extended/dir-mk-tree.o: \
filesys/build/tests/filesys/extended/dir-mk-tree.d: ../../tests/filesys/extended/dir-mk-tree.c \
filesys/build/tests/filesys/extended/dir-mk-tree.d: ../../tests/filesys/extended/mk-tree.h ../../tests/main.h
Binary file filesys/build/tests/filesys/extended/dir-mk-tree.o matches
filesys/build/tests/filesys/extended/dir-mkdir.d:tests/filesys/extended/dir-mkdir.o: \
filesys/build/tests/filesys/extended/dir-mkdir.d: ../../tests/filesys/extended/dir-mkdir.c ../../lib/user/syscall.h \
Binary file filesys/build/tests/filesys/extended/dir-mkdir.o matches
filesys/build/tests/filesys/extended/dir-open.d:tests/filesys/extended/dir-open.o: \
filesys/build/tests/filesys/extended/dir-open.d: ../../tests/filesys/extended/dir-open.c ../../lib/user/syscall.h \
Binary file filesys/build/tests/filesys/extended/dir-open.o matches
filesys/build/tests/filesys/extended/dir-over-file.d:tests/filesys/extended/dir-over-file.o: \
filesys/build/tests/filesys/extended/dir-over-file.d: ../../tests/filesys/extended/dir-over-file.c ../../lib/user/syscall.h \
Binary file filesys/build/tests/filesys/extended/dir-over-file.o matches
filesys/build/tests/filesys/extended/dir-rm-cwd.d:tests/filesys/extended/dir-rm-cwd.o: \
filesys/build/tests/filesys/extended/dir-rm-cwd.d: ../../tests/filesys/extended/dir-rm-cwd.c ../../lib/user/syscall.h \
Binary file filesys/build/tests/filesys/extended/dir-rm-cwd.o matches
filesys/build/tests/filesys/extended/dir-rm-parent.d:tests/filesys/extended/dir-rm-parent.o: \
filesys/build/tests/filesys/extended/dir-rm-parent.d: ../../tests/filesys/extended/dir-rm-parent.c ../../lib/user/syscall.h \
Binary file filesys/build/tests/filesys/extended/dir-rm-parent.o matches
filesys/build/tests/filesys/extended/dir-rm-root.d:tests/filesys/extended/dir-rm-root.o: \
filesys/build/tests/filesys/extended/dir-rm-root.d: ../../tests/filesys/extended/dir-rm-root.c ../../lib/user/syscall.h \
Binary file filesys/build/tests/filesys/extended/dir-rm-root.o matches
filesys/build/tests/filesys/extended/dir-rm-tree.d:tests/filesys/extended/dir-rm-tree.o: \
filesys/build/tests/filesys/extended/dir-rm-tree.d: ../../tests/filesys/extended/dir-rm-tree.c ../../lib/stdarg.h \
filesys/build/tests/filesys/extended/dir-rm-tree.d: ../../lib/user/syscall.h ../../tests/filesys/extended/mk-tree.h \
Binary file filesys/build/tests/filesys/extended/dir-rm-tree.o matches
filesys/build/tests/filesys/extended/dir-rmdir.d:tests/filesys/extended/dir-rmdir.o: \
filesys/build/tests/filesys/extended/dir-rmdir.d: ../../tests/filesys/extended/dir-rmdir.c ../../lib/user/syscall.h \
Binary file filesys/build/tests/filesys/extended/dir-rmdir.o matches
filesys/build/tests/filesys/extended/dir-under-file.d:tests/filesys/extended/dir-under-file.o: \
filesys/build/tests/filesys/extended/dir-under-file.d: ../../tests/filesys/extended/dir-under-file.c ../../lib/user/syscall.h \
Binary file filesys/build/tests/filesys/extended/dir-under-file.o matches
filesys/build/tests/filesys/extended/dir-vine.d:tests/filesys/extended/dir-vine.o: \
filesys/build/tests/filesys/extended/dir-vine.d: ../../tests/filesys/extended/dir-vine.c ../../lib/string.h \
Binary file filesys/build/tests/filesys/extended/dir-vine.o matches
filesys/build/tests/filesys/extended/grow-create.d:tests/filesys/extended/grow-create.o: \
filesys/build/tests/filesys/extended/grow-create.d: ../../tests/filesys/extended/grow-create.c \
Binary file filesys/build/tests/filesys/extended/grow-create.o matches
filesys/build/tests/filesys/extended/grow-dir-lg.d:tests/filesys/extended/grow-dir-lg.o: \
filesys/build/tests/filesys/extended/grow-dir-lg.d: ../../tests/filesys/extended/grow-dir-lg.c \
filesys/build/tests/filesys/extended/grow-dir-lg.d: ../../tests/filesys/extended/grow-dir.inc ../../lib/user/syscall.h \
filesys/build/tests/filesys/extended/grow-dir-lg.d: ../../lib/user/stdio.h ../../tests/filesys/seq-test.h ../../tests/lib.h \
Binary file filesys/build/tests/filesys/extended/grow-dir-lg.o matches
filesys/build/tests/filesys/extended/grow-file-size.d:tests/filesys/extended/grow-file-size.o: \
filesys/build/tests/filesys/extended/grow-file-size.d: ../../tests/filesys/extended/grow-file-size.c ../../lib/user/syscall.h \
filesys/build/tests/filesys/extended/grow-file-size.d: ../../lib/stdbool.h ../../lib/debug.h ../../tests/filesys/seq-test.h \
Binary file filesys/build/tests/filesys/extended/grow-file-size.o matches
filesys/build/tests/filesys/extended/grow-root-lg.d:tests/filesys/extended/grow-root-lg.o: \
filesys/build/tests/filesys/extended/grow-root-lg.d: ../../tests/filesys/extended/grow-root-lg.c \
filesys/build/tests/filesys/extended/grow-root-lg.d: ../../tests/filesys/extended/grow-dir.inc ../../lib/user/syscall.h \
filesys/build/tests/filesys/extended/grow-root-lg.d: ../../lib/user/stdio.h ../../tests/filesys/seq-test.h ../../tests/lib.h \
Binary file filesys/build/tests/filesys/extended/grow-root-lg.o matches
filesys/build/tests/filesys/extended/grow-root-sm.d:tests/filesys/extended/grow-root-sm.o: \
filesys/build/tests/filesys/extended/grow-root-sm.d: ../../tests/filesys/extended/grow-root-sm.c \
filesys/build/tests/filesys/extended/grow-root-sm.d: ../../tests/filesys/extended/grow-dir.inc ../../lib/user/syscall.h \
filesys/build/tests/filesys/extended/grow-root-sm.d: ../../lib/user/stdio.h ../../tests/filesys/seq-test.h ../../tests/lib.h \
Binary file filesys/build/tests/filesys/extended/grow-root-sm.o matches
filesys/build/tests/filesys/extended/grow-seq-lg.d:tests/filesys/extended/grow-seq-lg.o: \
filesys/build/tests/filesys/extended/grow-seq-lg.d: ../../tests/filesys/extended/grow-seq-lg.c \
filesys/build/tests/filesys/extended/grow-seq-lg.d: ../../tests/filesys/extended/grow-seq.inc ../../tests/filesys/seq-test.h \
Binary file filesys/build/tests/filesys/extended/grow-seq-lg.o matches
filesys/build/tests/filesys/extended/grow-seq-sm.d:tests/filesys/extended/grow-seq-sm.o: \
filesys/build/tests/filesys/extended/grow-seq-sm.d: ../../tests/filesys/extended/grow-seq-sm.c \
filesys/build/tests/filesys/extended/grow-seq-sm.d: ../../tests/filesys/extended/grow-seq.inc ../../tests/filesys/seq-test.h \
Binary file filesys/build/tests/filesys/extended/grow-seq-sm.o matches
filesys/build/tests/filesys/extended/grow-sparse.d:tests/filesys/extended/grow-sparse.o: \
filesys/build/tests/filesys/extended/grow-sparse.d: ../../tests/filesys/extended/grow-sparse.c ../../lib/user/syscall.h \
Binary file filesys/build/tests/filesys/extended/grow-sparse.o matches
filesys/build/tests/filesys/extended/grow-tell.d:tests/filesys/extended/grow-tell.o: \
filesys/build/tests/filesys/extended/grow-tell.d: ../../tests/filesys/extended/grow-tell.c ../../lib/user/syscall.h \
filesys/build/tests/filesys/extended/grow-tell.d: ../../lib/stdbool.h ../../lib/debug.h ../../tests/filesys/seq-test.h \
Binary file filesys/build/tests/filesys/extended/grow-tell.o matches
filesys/build/tests/filesys/extended/grow-two-files.d:tests/filesys/extended/grow-two-files.o: \
filesys/build/tests/filesys/extended/grow-two-files.d: ../../tests/filesys/extended/grow-two-files.c ../../lib/random.h \
Binary file filesys/build/tests/filesys/extended/grow-two-files.o matches
filesys/build/tests/filesys/extended/mk-tree.d:tests/filesys/extended/mk-tree.o: ../../tests/filesys/extended/mk-tree.c \
filesys/build/tests/filesys/extended/mk-tree.d: ../../tests/filesys/extended/mk-tree.h ../../tests/lib.h
Binary file filesys/build/tests/filesys/extended/mk-tree.o matches
filesys/build/tests/filesys/extended/syn-rw.d:tests/filesys/extended/syn-rw.o: ../../tests/filesys/extended/syn-rw.c \
filesys/build/tests/filesys/extended/syn-rw.d: ../../tests/filesys/extended/syn-rw.h ../../tests/lib.h \
Binary file filesys/build/tests/filesys/extended/syn-rw.o matches
Binary file filesys/build/tests/filesys/extended/tar.o matches
Binary file filesys/build/tests/filesys/extended/dir-empty-name matches
Binary file filesys/build/tests/filesys/extended/dir-mk-tree matches
Binary file filesys/build/tests/filesys/extended/dir-mkdir matches
Binary file filesys/build/tests/filesys/extended/dir-open matches
Binary file filesys/build/tests/filesys/extended/dir-over-file matches
Binary file filesys/build/tests/filesys/extended/dir-rm-cwd matches
Binary file filesys/build/tests/filesys/extended/dir-rm-parent matches
Binary file filesys/build/tests/filesys/extended/dir-rm-root matches
Binary file filesys/build/tests/filesys/extended/dir-rm-tree matches
Binary file filesys/build/tests/filesys/extended/dir-rmdir matches
Binary file filesys/build/tests/filesys/extended/dir-under-file matches
Binary file filesys/build/tests/filesys/extended/dir-vine matches
Binary file filesys/build/tests/filesys/extended/grow-create matches
Binary file filesys/build/tests/filesys/extended/grow-dir-lg matches
Binary file filesys/build/tests/filesys/extended/grow-file-size matches
Binary file filesys/build/tests/filesys/extended/grow-root-lg matches
Binary file filesys/build/tests/filesys/extended/grow-root-sm matches
Binary file filesys/build/tests/filesys/extended/grow-seq-lg matches
Binary file filesys/build/tests/filesys/extended/grow-seq-sm matches
Binary file filesys/build/tests/filesys/extended/grow-sparse matches
Binary file filesys/build/tests/filesys/extended/grow-tell matches
Binary file filesys/build/tests/filesys/extended/grow-two-files matches
Binary file filesys/build/tests/filesys/extended/syn-rw matches
Binary file filesys/build/tests/filesys/extended/child-syn-rw matches
Binary file filesys/build/tests/filesys/extended/tar matches
Binary file filesys/build/tests/userprog/args-many matches
Binary file filesys/build/tests/userprog/args-dbl-space matches
Binary file filesys/build/tests/userprog/args-multiple matches
Binary file filesys/build/tests/userprog/args-none matches
Binary file filesys/build/tests/userprog/args-single matches
Binary file filesys/build/tests/userprog/args.o matches
Binary file filesys/build/tests/userprog/bad-jump matches
filesys/build/tests/userprog/bad-jump.d:tests/userprog/bad-jump.o: ../../tests/userprog/bad-jump.c \
Binary file filesys/build/tests/userprog/bad-jump.o matches
Binary file filesys/build/tests/userprog/bad-jump2 matches
filesys/build/tests/userprog/bad-jump2.d:tests/userprog/bad-jump2.o: ../../tests/userprog/bad-jump2.c \
Binary file filesys/build/tests/userprog/bad-jump2.o matches
Binary file filesys/build/tests/userprog/bad-read matches
filesys/build/tests/userprog/bad-read.d:tests/userprog/bad-read.o: ../../tests/userprog/bad-read.c \
Binary file filesys/build/tests/userprog/bad-read.o matches
Binary file filesys/build/tests/userprog/bad-read2 matches
filesys/build/tests/userprog/bad-read2.d:tests/userprog/bad-read2.o: ../../tests/userprog/bad-read2.c \
Binary file filesys/build/tests/userprog/bad-read2.o matches
Binary file filesys/build/tests/userprog/bad-write matches
filesys/build/tests/userprog/bad-write.d:tests/userprog/bad-write.o: ../../tests/userprog/bad-write.c \
Binary file filesys/build/tests/userprog/bad-write.o matches
Binary file filesys/build/tests/userprog/bad-write2 matches
filesys/build/tests/userprog/bad-write2.d:tests/userprog/bad-write2.o: ../../tests/userprog/bad-write2.c \
Binary file filesys/build/tests/userprog/bad-write2.o matches
Binary file filesys/build/tests/userprog/boundary.o matches
Binary file filesys/build/tests/userprog/child-args matches
Binary file filesys/build/tests/userprog/child-bad matches
filesys/build/tests/userprog/child-bad.d:tests/userprog/child-bad.o: ../../tests/userprog/child-bad.c \
Binary file filesys/build/tests/userprog/child-bad.o matches
Binary file filesys/build/tests/userprog/child-close matches
filesys/build/tests/userprog/child-close.d:tests/userprog/child-close.o: ../../tests/userprog/child-close.c \
Binary file filesys/build/tests/userprog/child-close.o matches
Binary file filesys/build/tests/userprog/child-rox matches
filesys/build/tests/userprog/child-rox.d:tests/userprog/child-rox.o: ../../tests/userprog/child-rox.c \
Binary file filesys/build/tests/userprog/child-rox.o matches
Binary file filesys/build/tests/userprog/child-simple matches
filesys/build/tests/userprog/child-simple.d:tests/userprog/child-simple.o: ../../tests/userprog/child-simple.c \
Binary file filesys/build/tests/userprog/child-simple.o matches
Binary file filesys/build/tests/userprog/close-bad-fd matches
filesys/build/tests/userprog/close-bad-fd.d:tests/userprog/close-bad-fd.o: ../../tests/userprog/close-bad-fd.c \
Binary file filesys/build/tests/userprog/close-bad-fd.o matches
Binary file filesys/build/tests/userprog/close-normal matches
filesys/build/tests/userprog/close-normal.d:tests/userprog/close-normal.o: ../../tests/userprog/close-normal.c \
Binary file filesys/build/tests/userprog/close-normal.o matches
Binary file filesys/build/tests/userprog/close-stdin matches
filesys/build/tests/userprog/close-stdin.d:tests/userprog/close-stdin.o: ../../tests/userprog/close-stdin.c \
Binary file filesys/build/tests/userprog/close-stdin.o matches
Binary file filesys/build/tests/userprog/close-stdout matches
filesys/build/tests/userprog/close-stdout.d:tests/userprog/close-stdout.o: ../../tests/userprog/close-stdout.c \
Binary file filesys/build/tests/userprog/close-stdout.o matches
Binary file filesys/build/tests/userprog/close-twice matches
filesys/build/tests/userprog/close-twice.d:tests/userprog/close-twice.o: ../../tests/userprog/close-twice.c \
Binary file filesys/build/tests/userprog/close-twice.o matches
Binary file filesys/build/tests/userprog/create-bad-ptr matches
filesys/build/tests/userprog/create-bad-ptr.d:tests/userprog/create-bad-ptr.o: ../../tests/userprog/create-bad-ptr.c \
Binary file filesys/build/tests/userprog/create-bad-ptr.o matches
Binary file filesys/build/tests/userprog/create-bound matches
filesys/build/tests/userprog/create-bound.d:tests/userprog/create-bound.o: ../../tests/userprog/create-bound.c \
Binary file filesys/build/tests/userprog/create-bound.o matches
Binary file filesys/build/tests/userprog/create-empty matches
filesys/build/tests/userprog/create-empty.d:tests/userprog/create-empty.o: ../../tests/userprog/create-empty.c \
Binary file filesys/build/tests/userprog/create-empty.o matches
Binary file filesys/build/tests/userprog/create-exists matches
filesys/build/tests/userprog/create-exists.d:tests/userprog/create-exists.o: ../../tests/userprog/create-exists.c \
Binary file filesys/build/tests/userprog/create-exists.o matches
Binary file filesys/build/tests/userprog/create-long matches
filesys/build/tests/userprog/create-long.d:tests/userprog/create-long.o: ../../tests/userprog/create-long.c \
Binary file filesys/build/tests/userprog/create-long.o matches
Binary file filesys/build/tests/userprog/create-normal matches
filesys/build/tests/userprog/create-normal.d:tests/userprog/create-normal.o: ../../tests/userprog/create-normal.c \
Binary file filesys/build/tests/userprog/create-normal.o matches
Binary file filesys/build/tests/userprog/create-null matches
filesys/build/tests/userprog/create-null.d:tests/userprog/create-null.o: ../../tests/userprog/create-null.c \
Binary file filesys/build/tests/userprog/create-null.o matches
Binary file filesys/build/tests/userprog/exec-arg matches
filesys/build/tests/userprog/exec-arg.d:tests/userprog/exec-arg.o: ../../tests/userprog/exec-arg.c \
Binary file filesys/build/tests/userprog/exec-arg.o matches
Binary file filesys/build/tests/userprog/exec-bad-ptr matches
filesys/build/tests/userprog/exec-bad-ptr.d:tests/userprog/exec-bad-ptr.o: ../../tests/userprog/exec-bad-ptr.c \
Binary file filesys/build/tests/userprog/exec-bad-ptr.o matches
Binary file filesys/build/tests/userprog/exec-bound matches
Binary file filesys/build/tests/userprog/exec-bound-2 matches
filesys/build/tests/userprog/exec-bound-2.d:tests/userprog/exec-bound-2.o: ../../tests/userprog/exec-bound-2.c \
filesys/build/tests/userprog/exec-bound-2.d: ../../lib/syscall-nr.h ../../tests/userprog/boundary.h ../../tests/lib.h \
Binary file filesys/build/tests/userprog/exec-bound-2.o matches
Binary file filesys/build/tests/userprog/exec-bound-3 matches
filesys/build/tests/userprog/exec-bound-3.d:tests/userprog/exec-bound-3.o: ../../tests/userprog/exec-bound-3.c \
filesys/build/tests/userprog/exec-bound-3.d: ../../lib/syscall-nr.h ../../tests/userprog/boundary.h ../../tests/lib.h \
Binary file filesys/build/tests/userprog/exec-bound-3.o matches
filesys/build/tests/userprog/exec-bound.d:tests/userprog/exec-bound.o: ../../tests/userprog/exec-bound.c \
Binary file filesys/build/tests/userprog/exec-bound.o matches
Binary file filesys/build/tests/userprog/exec-missing matches
filesys/build/tests/userprog/exec-missing.d:tests/userprog/exec-missing.o: ../../tests/userprog/exec-missing.c \
Binary file filesys/build/tests/userprog/exec-missing.o matches
Binary file filesys/build/tests/userprog/exec-multiple matches
filesys/build/tests/userprog/exec-multiple.d:tests/userprog/exec-multiple.o: ../../tests/userprog/exec-multiple.c \
Binary file filesys/build/tests/userprog/exec-multiple.o matches
Binary file filesys/build/tests/userprog/exec-once matches
filesys/build/tests/userprog/exec-once.d:tests/userprog/exec-once.o: ../../tests/userprog/exec-once.c \
Binary file filesys/build/tests/userprog/exec-once.o matches
Binary file filesys/build/tests/userprog/exit matches
Binary file filesys/build/tests/userprog/exit.o matches
Binary file filesys/build/tests/userprog/halt matches
Binary file filesys/build/tests/userprog/halt.o matches
Binary file filesys/build/tests/userprog/multi-child-fd matches
filesys/build/tests/userprog/multi-child-fd.d:tests/userprog/multi-child-fd.o: ../../tests/userprog/multi-child-fd.c \
Binary file filesys/build/tests/userprog/multi-child-fd.o matches
Binary file filesys/build/tests/userprog/multi-recurse matches
filesys/build/tests/userprog/multi-recurse.d:tests/userprog/multi-recurse.o: ../../tests/userprog/multi-recurse.c \
Binary file filesys/build/tests/userprog/multi-recurse.o matches
Binary file filesys/build/tests/userprog/open-bad-ptr matches
filesys/build/tests/userprog/open-bad-ptr.d:tests/userprog/open-bad-ptr.o: ../../tests/userprog/open-bad-ptr.c \
Binary file filesys/build/tests/userprog/open-bad-ptr.o matches
Binary file filesys/build/tests/userprog/open-boundary matches
filesys/build/tests/userprog/open-boundary.d:tests/userprog/open-boundary.o: ../../tests/userprog/open-boundary.c \
Binary file filesys/build/tests/userprog/open-boundary.o matches
Binary file filesys/build/tests/userprog/open-empty matches
filesys/build/tests/userprog/open-empty.d:tests/userprog/open-empty.o: ../../tests/userprog/open-empty.c \
Binary file filesys/build/tests/userprog/open-empty.o matches
Binary file filesys/build/tests/userprog/open-missing matches
filesys/build/tests/userprog/open-missing.d:tests/userprog/open-missing.o: ../../tests/userprog/open-missing.c \
Binary file filesys/build/tests/userprog/open-missing.o matches
Binary file filesys/build/tests/userprog/open-normal matches
filesys/build/tests/userprog/open-normal.d:tests/userprog/open-normal.o: ../../tests/userprog/open-normal.c \
Binary file filesys/build/tests/userprog/open-normal.o matches
Binary file filesys/build/tests/userprog/open-null matches
filesys/build/tests/userprog/open-null.d:tests/userprog/open-null.o: ../../tests/userprog/open-null.c \
Binary file filesys/build/tests/userprog/open-null.o matches
Binary file filesys/build/tests/userprog/open-twice matches
filesys/build/tests/userprog/open-twice.d:tests/userprog/open-twice.o: ../../tests/userprog/open-twice.c \
Binary file filesys/build/tests/userprog/open-twice.o matches
Binary file filesys/build/tests/userprog/read-bad-fd matches
filesys/build/tests/userprog/read-bad-fd.d:tests/userprog/read-bad-fd.o: ../../tests/userprog/read-bad-fd.c \
Binary file filesys/build/tests/userprog/read-bad-fd.o matches
Binary file filesys/build/tests/userprog/read-bad-ptr matches
filesys/build/tests/userprog/read-bad-ptr.d:tests/userprog/read-bad-ptr.o: ../../tests/userprog/read-bad-ptr.c \
Binary file filesys/build/tests/userprog/read-bad-ptr.o matches
Binary file filesys/build/tests/userprog/read-boundary matches
filesys/build/tests/userprog/read-boundary.d:tests/userprog/read-boundary.o: ../../tests/userprog/read-boundary.c \
Binary file filesys/build/tests/userprog/read-boundary.o matches
Binary file filesys/build/tests/userprog/read-normal matches
filesys/build/tests/userprog/read-normal.d:tests/userprog/read-normal.o: ../../tests/userprog/read-normal.c \
Binary file filesys/build/tests/userprog/read-stdout matches
Binary file filesys/build/tests/userprog/read-normal.o matches
filesys/build/tests/userprog/read-stdout.d:tests/userprog/read-stdout.o: ../../tests/userprog/read-stdout.c \
Binary file filesys/build/tests/userprog/read-stdout.o matches
filesys/build/tests/userprog/read-zero.d:tests/userprog/read-zero.o: ../../tests/userprog/read-zero.c \
Binary file filesys/build/tests/userprog/read-zero.o matches
filesys/build/tests/userprog/rox-child.d:tests/userprog/rox-child.o: ../../tests/userprog/rox-child.c \
filesys/build/tests/userprog/rox-child.d: ../../tests/userprog/rox-child.inc ../../lib/user/syscall.h \
Binary file filesys/build/tests/userprog/rox-child.o matches
filesys/build/tests/userprog/rox-multichild.d:tests/userprog/rox-multichild.o: ../../tests/userprog/rox-multichild.c \
filesys/build/tests/userprog/rox-multichild.d: ../../tests/userprog/rox-child.inc ../../lib/user/syscall.h \
Binary file filesys/build/tests/userprog/rox-multichild.o matches
filesys/build/tests/userprog/rox-simple.d:tests/userprog/rox-simple.o: ../../tests/userprog/rox-simple.c \
Binary file filesys/build/tests/userprog/rox-simple.o matches
filesys/build/tests/userprog/sc-bad-arg.d:tests/userprog/sc-bad-arg.o: ../../tests/userprog/sc-bad-arg.c \
filesys/build/tests/userprog/sc-bad-arg.d: ../../lib/syscall-nr.h ../../tests/lib.h ../../lib/debug.h \
Binary file filesys/build/tests/userprog/sc-bad-arg.o matches
filesys/build/tests/userprog/sc-bad-sp.d:tests/userprog/sc-bad-sp.o: ../../tests/userprog/sc-bad-sp.c \
Binary file filesys/build/tests/userprog/sc-bad-sp.o matches
filesys/build/tests/userprog/sc-boundary-2.d:tests/userprog/sc-boundary-2.o: ../../tests/userprog/sc-boundary-2.c \
filesys/build/tests/userprog/sc-boundary-2.d: ../../lib/syscall-nr.h ../../tests/userprog/boundary.h ../../tests/lib.h \
Binary file filesys/build/tests/userprog/sc-boundary-2.o matches
filesys/build/tests/userprog/sc-boundary-3.d:tests/userprog/sc-boundary-3.o: ../../tests/userprog/sc-boundary-3.c \
filesys/build/tests/userprog/sc-boundary-3.d: ../../lib/syscall-nr.h ../../tests/userprog/boundary.h ../../tests/lib.h \
Binary file filesys/build/tests/userprog/sc-boundary-3.o matches
filesys/build/tests/userprog/sc-boundary.d:tests/userprog/sc-boundary.o: ../../tests/userprog/sc-boundary.c \
filesys/build/tests/userprog/sc-boundary.d: ../../lib/syscall-nr.h ../../tests/userprog/boundary.h ../../tests/lib.h \
Binary file filesys/build/tests/userprog/sc-boundary.o matches
filesys/build/tests/userprog/wait-bad-pid.d:tests/userprog/wait-bad-pid.o: ../../tests/userprog/wait-bad-pid.c \
Binary file filesys/build/tests/userprog/wait-bad-pid.o matches
filesys/build/tests/userprog/wait-killed.d:tests/userprog/wait-killed.o: ../../tests/userprog/wait-killed.c \
Binary file filesys/build/tests/userprog/wait-killed.o matches
filesys/build/tests/userprog/wait-simple.d:tests/userprog/wait-simple.o: ../../tests/userprog/wait-simple.c \
Binary file filesys/build/tests/userprog/wait-simple.o matches
filesys/build/tests/userprog/wait-twice.d:tests/userprog/wait-twice.o: ../../tests/userprog/wait-twice.c \
Binary file filesys/build/tests/userprog/wait-twice.o matches
filesys/build/tests/userprog/write-bad-fd.d:tests/userprog/write-bad-fd.o: ../../tests/userprog/write-bad-fd.c \
Binary file filesys/build/tests/userprog/write-bad-fd.o matches
filesys/build/tests/userprog/write-bad-ptr.d:tests/userprog/write-bad-ptr.o: ../../tests/userprog/write-bad-ptr.c \
Binary file filesys/build/tests/userprog/write-bad-ptr.o matches
filesys/build/tests/userprog/write-boundary.d:tests/userprog/write-boundary.o: ../../tests/userprog/write-boundary.c \
Binary file filesys/build/tests/userprog/write-boundary.o matches
filesys/build/tests/userprog/write-normal.d:tests/userprog/write-normal.o: ../../tests/userprog/write-normal.c \
Binary file filesys/build/tests/userprog/write-normal.o matches
filesys/build/tests/userprog/write-stdin.d:tests/userprog/write-stdin.o: ../../tests/userprog/write-stdin.c \
Binary file filesys/build/tests/userprog/write-stdin.o matches
filesys/build/tests/userprog/write-zero.d:tests/userprog/write-zero.o: ../../tests/userprog/write-zero.c \
Binary file filesys/build/tests/userprog/write-zero.o matches
Binary file filesys/build/tests/userprog/sc-bad-sp matches
Binary file filesys/build/tests/userprog/sc-bad-arg matches
Binary file filesys/build/tests/userprog/sc-boundary matches
Binary file filesys/build/tests/userprog/sc-boundary-2 matches
Binary file filesys/build/tests/userprog/sc-boundary-3 matches
Binary file filesys/build/tests/userprog/read-zero matches
Binary file filesys/build/tests/userprog/write-normal matches
Binary file filesys/build/tests/userprog/write-bad-ptr matches
Binary file filesys/build/tests/userprog/write-boundary matches
Binary file filesys/build/tests/userprog/write-zero matches
Binary file filesys/build/tests/userprog/write-stdin matches
Binary file filesys/build/tests/userprog/write-bad-fd matches
Binary file filesys/build/tests/userprog/wait-simple matches
Binary file filesys/build/tests/userprog/wait-twice matches
Binary file filesys/build/tests/userprog/wait-killed matches
Binary file filesys/build/tests/userprog/wait-bad-pid matches
Binary file filesys/build/tests/userprog/rox-simple matches
Binary file filesys/build/tests/userprog/rox-child matches
Binary file filesys/build/tests/userprog/rox-multichild matches
Binary file filesys/build/threads/init.o matches
filesys/build/threads/interrupt.d: ../../threads/intr-stubs.h ../../threads/io.h ../../threads/thread.h \
Binary file filesys/build/threads/interrupt.o matches
filesys/build/threads/intr-stubs.d:threads/intr-stubs.o: ../../threads/intr-stubs.S ../../threads/loader.h
Binary file filesys/build/threads/intr-stubs.o matches
filesys/build/threads/kernel.lds.s:OUTPUT_FORMAT("elf32-i386")
filesys/build/threads/kernel.lds.s:  ASSERT (_end - _start <= 512K, "Kernel image is too big.")
Binary file filesys/build/threads/loader.o matches
Binary file filesys/build/threads/malloc.o matches
Binary file filesys/build/threads/palloc.o matches
Binary file filesys/build/threads/start.o matches
Binary file filesys/build/threads/switch.o matches
Binary file filesys/build/threads/synch.o matches
filesys/build/threads/thread.d: ../../threads/interrupt.h ../../threads/intr-stubs.h \
Binary file filesys/build/threads/thread.o matches
Binary file filesys/build/userprog/exception.o matches
Binary file filesys/build/userprog/gdt.o matches
Binary file filesys/build/userprog/pagedir.o matches
filesys/build/userprog/syscall.d: ../../lib/kernel/stdio.h ../../lib/syscall-nr.h \
Binary file filesys/build/userprog/tss.o matches
Binary file filesys/build/userprog/syscall.o matches
Binary file filesys/build/userprog/process.o matches
Binary file filesys/build/kernel.o matches
Binary file filesys/build/kernel.bin matches
Binary file filesys/build/loader.bin matches
Binary file filesys/build/libc.a matches
filesys/file.c:      file->inode = inode;
filesys/file.c:      file->pos = 0;
filesys/file.c:      file->deny_write = false;
filesys/file.c:  return file_open (inode_reopen (file->inode));
filesys/file.c:      inode_close (file->inode);
filesys/file.c:  return file->inode;
filesys/file.c:  off_t bytes_read = inode_read_at (file->inode, buffer, size, file->pos);
filesys/file.c:  file->pos += bytes_read;
filesys/file.c:  return inode_read_at (file->inode, buffer, size, file_ofs);
filesys/file.c:  off_t bytes_written = inode_write_at (file->inode, buffer, size, file->pos);
filesys/file.c:  file->pos += bytes_written;
filesys/file.c:  return inode_write_at (file->inode, buffer, size, file_ofs);
filesys/file.c:  if (!file->deny_write) 
filesys/file.c:      file->deny_write = true;
filesys/file.c:      inode_deny_write (file->inode);
filesys/file.c:/* Re-enables write operations on FILE's underlying inode.
filesys/file.c:  if (file->deny_write) 
filesys/file.c:      file->deny_write = false;
filesys/file.c:      inode_allow_write (file->inode);
filesys/file.c:  return inode_length (file->inode);
filesys/file.c:  file->pos = new_pos;
filesys/file.c:  return file->pos;
lib/arithmetic.c:/* On x86, division of one 64-bit integer by another cannot be
lib/arithmetic.c:   implements 64-bit division and remainder operations through
lib/arithmetic.c:   Some x86-64 machines, however, have a compiler and utilities
lib/arithmetic.c:   that can generate 32-bit x86 code without having any of the
lib/arithmetic.c:   64-bit division routines, which are the only routines from
lib/arithmetic.c:   Pintos is completely self-contained, then that makes it that
lib/arithmetic.c:/* Uses x86 DIVL instruction to divide 64-bit N by 32-bit D to
lib/arithmetic.c:   yield a 32-bit quotient.  Returns the quotient.
lib/arithmetic.c:/* Divides unsigned 64-bit N by unsigned 64-bit D and returns the
lib/arithmetic.c:             [n/d] = [n/d] - T + T
lib/arithmetic.c:                   = [n/d - T] + T                         by (1) below
lib/arithmetic.c:                   = [(b*n1 + n0)/d - T] + T               by definition of n
lib/arithmetic.c:                   = [(b*n1 + n0)/d - dT/d] + T
lib/arithmetic.c:                   = [(b(n1 - d[n1/d]) + n0)/d] + T
lib/arithmetic.c:         respective maximum values of d - 1 and b - 1:
lib/arithmetic.c:                 [(b(d - 1) + (b - 1))/d] < b
lib/arithmetic.c:             <=> [(bd - 1)/d] < b
lib/arithmetic.c:             <=> [b - 1/d] < b
lib/arithmetic.c:          uint64_t q = divl (n >> 1, (d << s) >> 32) >> (31 - s);
lib/arithmetic.c:          return n - (q - 1) * d < d ? q - 1 : q; 
lib/arithmetic.c:/* Divides unsigned 64-bit N by unsigned 64-bit D and returns the
lib/arithmetic.c:  return n - d * udiv64 (n, d);
lib/arithmetic.c:/* Divides signed 64-bit N by signed 64-bit D and returns the
lib/arithmetic.c:  uint64_t n_abs = n >= 0 ? (uint64_t) n : -(uint64_t) n;
lib/arithmetic.c:  uint64_t d_abs = d >= 0 ? (uint64_t) d : -(uint64_t) d;
lib/arithmetic.c:  return (n < 0) == (d < 0) ? (int64_t) q_abs : -(int64_t) q_abs;
lib/arithmetic.c:/* Divides signed 64-bit N by signed 64-bit D and returns the
lib/arithmetic.c:  return n - d * sdiv64 (n, d);
lib/arithmetic.c:/* Signed 64-bit division. */
lib/arithmetic.c:/* Signed 64-bit remainder. */
lib/arithmetic.c:/* Unsigned 64-bit division. */
lib/arithmetic.c:/* Unsigned 64-bit remainder. */
lib/ctype.h:static inline int tolower (int c) { return isupper (c) ? c - 'A' + 'a' : c; }
lib/ctype.h:static inline int toupper (int c) { return islower (c) ? c - 'a' + 'A' : c; }
lib/debug.h:   function name, plus a user-specific message. */
lib/limits.h:#define SCHAR_MIN (-SCHAR_MAX - 1)
lib/limits.h:#define SHRT_MIN (-SHRT_MAX - 1)
lib/limits.h:#define INT_MIN (-INT_MAX - 1)
lib/limits.h:#define LONG_MIN (-LONG_MAX - 1)
lib/limits.h:#define LLONG_MIN (-LLONG_MAX - 1)
lib/random.c:/* RC4-based pseudo-random number generator (PRNG).
lib/random.c:   and its output is plenty random for non-cryptographic
lib/random.c:  for (buf = buf_; size-- > 0; buf++)
lib/random.c:/* Returns a pseudo-random unsigned long.
lib/round.h:#define ROUND_UP(X, STEP) (((X) + (STEP) - 1) / (STEP) * (STEP))
lib/round.h:#define DIV_ROUND_UP(X, STEP) (((X) + (STEP) - 1) / (STEP))
lib/stdarg.h:/* GCC has <stdarg.h> functionality as built-ins,
lib/stddef.h:#define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *) 0)->MEMBER)
lib/stdint.h:#define INT8_MIN (-INT8_MAX - 1)
lib/stdint.h:#define INT16_MIN (-INT16_MAX - 1)
lib/stdint.h:#define INT32_MIN (-INT32_MAX - 1)
lib/stdint.h:#define INT64_MIN (-INT64_MAX - 1)
lib/stdio.c:   BUF_SIZE - 1 characters to BUFFER, followed by a null
lib/stdio.c:   terminator.  BUFFER will always be null-terminated unless
lib/stdio.c:  aux.max_length = buf_size > 0 ? buf_size - 1 : 0;
lib/stdio.c:  if (aux->length++ < aux->max_length)
lib/stdio.c:    *aux->p++ = ch;
lib/stdio.c:   BUF_SIZE - 1 characters to BUFFER, followed by a null
lib/stdio.c:   terminator.  BUFFER will always be null-terminated unless
lib/stdio.c:        MINUS = 1 << 0,         /* '-' */
lib/stdio.c:       -1 indicates no precision was specified. */
lib/stdio.c:      /* Literally copy non-conversions to output. */
lib/stdio.c:                  value = value - SIZE_MAX - 1;
lib/stdio.c:            format_integer (value < 0 ? -value : value,
lib/stdio.c:            /* Treat character as single-character string. */
lib/stdio.c:               Note: if c.precision == -1 then strnlen() will get
lib/stdio.c:          /* We don't support floating-point arithmetic,
lib/stdio.c:  c->flags = 0;
lib/stdio.c:        case '-':
lib/stdio.c:          c->flags |= MINUS;
lib/stdio.c:          c->flags |= PLUS;
lib/stdio.c:          c->flags |= SPACE;
lib/stdio.c:          c->flags |= POUND;
lib/stdio.c:          c->flags |= ZERO;
lib/stdio.c:          c->flags |= GROUP;
lib/stdio.c:          format--;
lib/stdio.c:  if (c->flags & MINUS)
lib/stdio.c:    c->flags &= ~ZERO;
lib/stdio.c:  if (c->flags & PLUS)
lib/stdio.c:    c->flags &= ~SPACE;
lib/stdio.c:  c->width = 0;
lib/stdio.c:      c->width = va_arg (*args, int);
lib/stdio.c:        c->width = c->width * 10 + *format - '0';
lib/stdio.c:  if (c->width < 0) 
lib/stdio.c:      c->width = -c->width;
lib/stdio.c:      c->flags |= MINUS;
lib/stdio.c:  c->precision = -1;
lib/stdio.c:          c->precision = va_arg (*args, int);
lib/stdio.c:          c->precision = 0;
lib/stdio.c:            c->precision = c->precision * 10 + *format - '0';
lib/stdio.c:      if (c->precision < 0) 
lib/stdio.c:        c->precision = -1;
lib/stdio.c:  if (c->precision >= 0)
lib/stdio.c:    c->flags &= ~ZERO;
lib/stdio.c:  c->type = INT;
lib/stdio.c:          c->type = CHAR;
lib/stdio.c:        c->type = SHORT;
lib/stdio.c:      c->type = INTMAX;
lib/stdio.c:          c->type = LONGLONG;
lib/stdio.c:        c->type = LONG;
lib/stdio.c:      c->type = PTRDIFFT;
lib/stdio.c:      c->type = SIZET;
lib/stdio.c:      format--;
lib/stdio.c:      if (c->flags & PLUS)
lib/stdio.c:        sign = negative ? '-' : '+';
lib/stdio.c:      else if (c->flags & SPACE)
lib/stdio.c:        sign = negative ? '-' : ' ';
lib/stdio.c:        sign = '-';
lib/stdio.c:  x = (c->flags & POUND) && value ? b->x : 0;
lib/stdio.c:      if ((c->flags & GROUP) && digit_cnt > 0 && digit_cnt % b->group == 0)
lib/stdio.c:      *cp++ = b->digits[value % b->base];
lib/stdio.c:      value /= b->base;
lib/stdio.c:  precision = c->precision < 0 ? 1 : c->precision;
lib/stdio.c:  while (cp - buf < precision && cp < buf + sizeof buf - 1)
lib/stdio.c:  if ((c->flags & POUND) && b->base == 8 && (cp == buf || cp[-1] != '0'))
lib/stdio.c:  pad_cnt = c->width - (cp - buf) - (x ? 2 : 0) - (sign != 0);
lib/stdio.c:  if ((c->flags & (MINUS | ZERO)) == 0)
lib/stdio.c:  if (c->flags & ZERO)
lib/stdio.c:    output (*--cp, aux);
lib/stdio.c:  if (c->flags & MINUS)
lib/stdio.c:  while (cnt-- > 0)
lib/stdio.c:  if (c->width > length && (c->flags & MINUS) == 0)
lib/stdio.c:    output_dup (' ', c->width - length, output, aux);
lib/stdio.c:  if (c->width > length && (c->flags & MINUS) != 0)
lib/stdio.c:    output_dup (' ', c->width - length, output, aux);
lib/stdio.c:      if (end - start > size)
lib/stdio.c:      n = end - start;
lib/stdio.c:                buf[i - start], i == per_line / 2 - 1? '-' : ' ');
lib/stdio.c:                    isprint (buf[i - start]) ? buf[i - start] : '.');
lib/stdio.c:      size -= n;
lib/stdio.c:   human-readable format, e.g. "256 kB". */
lib/stdlib.c:  else if (*s == '-')
lib/stdlib.c:    value = value * 10 - (*s - '0');
lib/stdlib.c:    value = -value;
lib/stdlib.c:   and B, respectively, it must return a strcmp()-type result,
lib/stdlib.c:/* Swaps elements with 1-based indexes A_IDX and B_IDX in ARRAY
lib/stdlib.c:  unsigned char *a = array + (a_idx - 1) * size;
lib/stdlib.c:  unsigned char *b = array + (b_idx - 1) * size;
lib/stdlib.c:/* Compares elements with 1-based indexes A_IDX and B_IDX in
lib/stdlib.c:   strcmp()-type result. */
lib/stdlib.c:  return compare (array + (a_idx - 1) * size, array + (b_idx - 1) * size, aux);
lib/stdlib.c:/* "Float down" the element with 1-based index I in ARRAY of CNT
lib/stdlib.c:   respectively, it must return a strcmp()-type result, i.e. less
lib/stdlib.c:  for (i = cnt / 2; i > 0; i--)
lib/stdlib.c:  for (i = cnt; i > 1; i--) 
lib/stdlib.c:      heapify (array, 1, i - 1, size, compare, aux); 
lib/stdlib.c:   strcmp()-type result, i.e. less than zero if A < B, zero if A
lib/stdlib.c:   respectively, it must return a strcmp()-type result, i.e. less
lib/stdlib.c:      size_t range = (last - first) / size;
lib/string.c:  while (size-- > 0)
lib/string.c:      while (size-- > 0)
lib/string.c:      while (size-- > 0)
lib/string.c:        *--dst = *--src;
lib/string.c:  for (; size-- > 0; a++, b++)
lib/string.c:      return *a > *b ? +1 : -1;
lib/string.c:  return *a < *b ? -1 : *a > *b;
lib/string.c:  for (; size-- > 0; block++)
lib/string.c:      for (i = 0; i <= haystack_len - needle_len; i++)
lib/string.c:  /* Skip any non-DELIMITERS up to the end of the string. */
lib/string.c:  while (size-- > 0)
lib/string.c:  return p - string;
lib/string.c:/* Copies string SRC to DST.  If SRC is longer than SIZE - 1
lib/string.c:   characters, only SIZE - 1 characters are copied.  A null
lib/string.c:      size_t dst_len = size - 1;
lib/string.c:   limited to SIZE - 1 characters.  A null terminator is always
lib/string.c:      size_t copy_cnt = size - dst_len - 1;
lib/syscall-nr.h:#endif /* lib/syscall-nr.h */
lib/ustar.c:/* Header for ustar-format tar archive.  See the documentation of
lib/ustar.c:    char name[100];             /* File name.  Null-terminated if room. */
lib/ustar.c:                                   Null-terminated if room. */
lib/ustar.c:    char uname[32];             /* User name, always null-terminated. */
lib/ustar.c:    char gname[32];             /* Group name, always null-terminated. */
lib/ustar.c:                                   Null-terminated if room. */
lib/ustar.c:      const size_t chksum_end = chksum_start + sizeof h->chksum;
lib/ustar.c:/* Composes HEADER as a USTAR_HEADER_SIZE (512)-byte archive
lib/ustar.c:   header in ustar format for a SIZE-byte file named FILE_NAME of
lib/ustar.c:  strlcpy (h->name, file_name, sizeof h->name);
lib/ustar.c:  snprintf (h->mode, sizeof h->mode, "%07o",
lib/ustar.c:  strlcpy (h->uid, "0000000", sizeof h->uid);
lib/ustar.c:  strlcpy (h->gid, "0000000", sizeof h->gid);
lib/ustar.c:  snprintf (h->size, sizeof h->size, "%011o", size);
lib/ustar.c:  snprintf (h->mtime, sizeof h->size, "%011o", 1136102400);
lib/ustar.c:  h->typeflag = type;
lib/ustar.c:  strlcpy (h->magic, "ustar", sizeof h->magic);
lib/ustar.c:  h->version[0] = h->version[1] = '0';
lib/ustar.c:  strlcpy (h->gname, "root", sizeof h->gname);
lib/ustar.c:  strlcpy (h->uname, "root", sizeof h->uname);
lib/ustar.c:  snprintf (h->chksum, sizeof h->chksum, "%07o", calculate_chksum (h));
lib/ustar.c:/* Parses a SIZE-byte octal field in S in the format used by
lib/ustar.c:          *value = c - '0' + *value * 8;
lib/ustar.c:  while (cnt-- > 0)
lib/ustar.c:/* Parses HEADER as a ustar-format archive header for a regular
lib/ustar.c:   human-readable error message. */
lib/ustar.c:  if (memcmp (h->magic, "ustar", 6))
lib/ustar.c:  else if (h->version[0] != '0' || h->version[1] != '0')
lib/ustar.c:  else if (!parse_octal_field (h->chksum, sizeof h->chksum, &chksum))
lib/ustar.c:  else if (h->name[sizeof h->name - 1] != '\0' || h->prefix[0] != '\0')
lib/ustar.c:  else if (h->typeflag != USTAR_REGULAR && h->typeflag != USTAR_DIRECTORY)
lib/ustar.c:  if (h->typeflag == USTAR_REGULAR)
lib/ustar.c:      if (!parse_octal_field (h->size, sizeof h->size, &size_ul))
lib/ustar.c:  *file_name = strip_antisocial_prefixes (h->name);
lib/ustar.c:  *type = h->typeflag;
lib/ustar.h:    USTAR_EOF = -1              /* End of archive (not an official value). */
lib/kernel/bitmap.c:  int last_bits = b->bit_cnt % ELEM_BITS;
lib/kernel/bitmap.c:  return last_bits ? ((elem_type) 1 << last_bits) - 1 : (elem_type) -1;
lib/kernel/bitmap.c:      b->bit_cnt = bit_cnt;
lib/kernel/bitmap.c:      b->bits = malloc (byte_cnt (bit_cnt));
lib/kernel/bitmap.c:      if (b->bits != NULL || bit_cnt == 0)
lib/kernel/bitmap.c:  b->bit_cnt = bit_cnt;
lib/kernel/bitmap.c:  b->bits = (elem_type *) (b + 1);
lib/kernel/bitmap.c:      free (b->bits);
lib/kernel/bitmap.c:  return b->bit_cnt;
lib/kernel/bitmap.c:  ASSERT (idx < b->bit_cnt);
lib/kernel/bitmap.c:  /* This is equivalent to `b->bits[idx] |= mask' except that it
lib/kernel/bitmap.c:     the description of the OR instruction in [IA32-v2b]. */
lib/kernel/bitmap.c:  asm ("orl %1, %0" : "=m" (b->bits[idx]) : "r" (mask) : "cc");
lib/kernel/bitmap.c:  /* This is equivalent to `b->bits[idx] &= ~mask' except that it
lib/kernel/bitmap.c:     the description of the AND instruction in [IA32-v2a]. */
lib/kernel/bitmap.c:  asm ("andl %1, %0" : "=m" (b->bits[idx]) : "r" (~mask) : "cc");
lib/kernel/bitmap.c:  /* This is equivalent to `b->bits[idx] ^= mask' except that it
lib/kernel/bitmap.c:     the description of the XOR instruction in [IA32-v2b]. */
lib/kernel/bitmap.c:  asm ("xorl %1, %0" : "=m" (b->bits[idx]) : "r" (mask) : "cc");
lib/kernel/bitmap.c:  ASSERT (idx < b->bit_cnt);
lib/kernel/bitmap.c:  return (b->bits[elem_idx (idx)] & bit_mask (idx)) != 0;
lib/kernel/bitmap.c:  ASSERT (start <= b->bit_cnt);
lib/kernel/bitmap.c:  ASSERT (start + cnt <= b->bit_cnt);
lib/kernel/bitmap.c:  ASSERT (start <= b->bit_cnt);
lib/kernel/bitmap.c:  ASSERT (start + cnt <= b->bit_cnt);
lib/kernel/bitmap.c:  ASSERT (start <= b->bit_cnt);
lib/kernel/bitmap.c:  ASSERT (start + cnt <= b->bit_cnt);
lib/kernel/bitmap.c:  ASSERT (start <= b->bit_cnt);
lib/kernel/bitmap.c:  if (cnt <= b->bit_cnt) 
lib/kernel/bitmap.c:      size_t last = b->bit_cnt - cnt;
lib/kernel/bitmap.c:  return byte_cnt (b->bit_cnt);
lib/kernel/bitmap.c:  if (b->bit_cnt > 0) 
lib/kernel/bitmap.c:      off_t size = byte_cnt (b->bit_cnt);
lib/kernel/bitmap.c:      success = file_read_at (file, b->bits, size, 0) == size;
lib/kernel/bitmap.c:      b->bits[elem_cnt (b->bit_cnt) - 1] &= last_mask (b);
lib/kernel/bitmap.c:  off_t size = byte_cnt (b->bit_cnt);
lib/kernel/bitmap.c:  return file_write_at (file, b->bits, size, 0) == size;
lib/kernel/bitmap.c:  hex_dump (0, b->bits, byte_cnt (b->bit_cnt), false);
lib/kernel/console.c:   printf()               - palloc() tries to grab the lock again
lib/kernel/console.c:   thread_schedule_tail() - another thread dying as we switch threads
lib/kernel/console.c:   intr_handler()         - timer interrupt
lib/kernel/console.c:   sys_write()            - one process writing to the console
lib/kernel/console.c:        console_lock_depth--;
lib/kernel/console.c:/* Writes string S to the console, followed by a new-line
lib/kernel/console.c:  while (n-- > 0)
lib/kernel/debug.c:   function name, plus a user-specific message. */
lib/kernel/debug.c:  switch (t->status) {
lib/kernel/debug.c:  printf ("Call stack of thread `%s' (status %s):", t->name, status);
lib/kernel/debug.c:      saved_frame = (struct switch_threads_frame *)t->stack;
lib/kernel/debug.c:      if (t->stack == (uint8_t *)t + PGSIZE || saved_frame->eip == switch_entry)
lib/kernel/debug.c:      frame = (void **) saved_frame->ebp;
lib/kernel/debug.c:      retaddr = (void *) saved_frame->eip;
lib/kernel/hash.c:  h->elem_cnt = 0;
lib/kernel/hash.c:  h->bucket_cnt = 4;
lib/kernel/hash.c:  h->buckets = malloc (sizeof *h->buckets * h->bucket_cnt);
lib/kernel/hash.c:  h->hash = hash;
lib/kernel/hash.c:  h->less = less;
lib/kernel/hash.c:  h->aux = aux;
lib/kernel/hash.c:  if (h->buckets != NULL) 
lib/kernel/hash.c:   If DESTRUCTOR is non-null, then it is called for each element
lib/kernel/hash.c:  for (i = 0; i < h->bucket_cnt; i++) 
lib/kernel/hash.c:      struct list *bucket = &h->buckets[i];
lib/kernel/hash.c:            destructor (hash_elem, h->aux);
lib/kernel/hash.c:  h->elem_cnt = 0;
lib/kernel/hash.c:   If DESTRUCTOR is non-null, then it is first called for each
lib/kernel/hash.c:  free (h->buckets);
lib/kernel/hash.c:  for (i = 0; i < h->bucket_cnt; i++) 
lib/kernel/hash.c:      struct list *bucket = &h->buckets[i];
lib/kernel/hash.c:          action (list_elem_to_hash_elem (elem), h->aux);
lib/kernel/hash.c:  i->hash = h;
lib/kernel/hash.c:  i->bucket = i->hash->buckets;
lib/kernel/hash.c:  i->elem = list_elem_to_hash_elem (list_head (i->bucket));
lib/kernel/hash.c:  i->elem = list_elem_to_hash_elem (list_next (&i->elem->list_elem));
lib/kernel/hash.c:  while (i->elem == list_elem_to_hash_elem (list_end (i->bucket)))
lib/kernel/hash.c:      if (++i->bucket >= i->hash->buckets + i->hash->bucket_cnt)
lib/kernel/hash.c:          i->elem = NULL;
lib/kernel/hash.c:      i->elem = list_elem_to_hash_elem (list_begin (i->bucket));
lib/kernel/hash.c:  return i->elem;
lib/kernel/hash.c:  return i->elem;
lib/kernel/hash.c:  return h->elem_cnt;
lib/kernel/hash.c:  return h->elem_cnt == 0;
lib/kernel/hash.c:/* Fowler-Noll-Vo hash constants, for 32-bit word sizes. */
lib/kernel/hash.c:  /* Fowler-Noll-Vo 32-bit hash, for bytes. */
lib/kernel/hash.c:  while (size-- > 0)
lib/kernel/hash.c:  size_t bucket_idx = h->hash (e, h->aux) & (h->bucket_cnt - 1);
lib/kernel/hash.c:  return &h->buckets[bucket_idx];
lib/kernel/hash.c:      if (!h->less (hi, e, h->aux) && !h->less (e, hi, h->aux))
lib/kernel/hash.c:/* Returns X with its lowest-order bit set to 1 turned off. */
lib/kernel/hash.c:  return x & (x - 1);
lib/kernel/hash.c:   ideal.  This function can fail because of an out-of-memory
lib/kernel/hash.c:  old_buckets = h->buckets;
lib/kernel/hash.c:  old_bucket_cnt = h->bucket_cnt;
lib/kernel/hash.c:  new_bucket_cnt = h->elem_cnt / BEST_ELEMS_PER_BUCKET;
lib/kernel/hash.c:  h->buckets = new_buckets;
lib/kernel/hash.c:  h->bucket_cnt = new_bucket_cnt;
lib/kernel/hash.c:  h->elem_cnt++;
lib/kernel/hash.c:  list_push_front (bucket, &e->list_elem);
lib/kernel/hash.c:  h->elem_cnt--;
lib/kernel/hash.c:  list_remove (&e->list_elem);
lib/kernel/hash.h:        ((STRUCT *) ((uint8_t *) &(HASH_ELEM)->list_elem        \
lib/kernel/hash.h:                     - offsetof (STRUCT, MEMBER.list_elem)))
lib/kernel/list.c:                      +------+     +------+
lib/kernel/list.c:                  <---| head |<--->| tail |--->
lib/kernel/list.c:                      +------+     +------+
lib/kernel/list.c:        +------+     +-------+     +-------+     +------+
lib/kernel/list.c:    <---| head |<--->|   1   |<--->|   2   |<--->| tail |<--->
lib/kernel/list.c:        +------+     +-------+     +-------+     +------+
lib/kernel/list.c:  return elem != NULL && elem->prev == NULL && elem->next != NULL;
lib/kernel/list.c:  return elem != NULL && elem->prev != NULL && elem->next != NULL;
lib/kernel/list.c:  return elem != NULL && elem->prev != NULL && elem->next == NULL;
lib/kernel/list.c:  list->head.prev = NULL;
lib/kernel/list.c:  list->head.next = &list->tail;
lib/kernel/list.c:  list->tail.prev = &list->head;
lib/kernel/list.c:  list->tail.next = NULL;
lib/kernel/list.c:  return list->head.next;
lib/kernel/list.c:  return elem->next;
lib/kernel/list.c:  return &list->tail;
lib/kernel/list.c:  return list->tail.prev;
lib/kernel/list.c:  return elem->prev;
lib/kernel/list.c:  return &list->head;
lib/kernel/list.c:  return &list->head;
lib/kernel/list.c:  return &list->tail;
lib/kernel/list.c:  elem->prev = before->prev;
lib/kernel/list.c:  elem->next = before;
lib/kernel/list.c:  before->prev->next = elem;
lib/kernel/list.c:  before->prev = elem;
lib/kernel/list.c:  first->prev->next = last->next;
lib/kernel/list.c:  last->next->prev = first->prev;
lib/kernel/list.c:  first->prev = before->prev;
lib/kernel/list.c:  last->next = before;
lib/kernel/list.c:  before->prev->next = first;
lib/kernel/list.c:  before->prev = last;
lib/kernel/list.c:  elem->prev->next = elem->next;
lib/kernel/list.c:  elem->next->prev = elem->prev;
lib/kernel/list.c:  return elem->next;
lib/kernel/list.c:  return list->head.next;
lib/kernel/list.c:  return list->tail.prev;
lib/kernel/list.c:      for (e = list_begin (list); e != list_end (list); e = e->prev)
lib/kernel/list.c:        swap (&e->prev, &e->next);
lib/kernel/list.c:      swap (&list->head.next, &list->tail.prev);
lib/kernel/list.c:      swap (&list->head.next->prev, &list->tail.prev->next);
lib/kernel/list.c:   A through B (exclusive) must form a non-empty range. */
lib/kernel/list.c:   given auxiliary data AUX.  If DUPLICATES is non-null, then the
lib/kernel/list.h:     - "front": The first element in a list.  Undefined in an
lib/kernel/list.h:     - "back": The last element in a list.  Undefined in an empty
lib/kernel/list.h:     - "tail": The element figuratively just after the last
lib/kernel/list.h:     - "beginning": In a non-empty list, the front.  In an empty
lib/kernel/list.h:     - "head": The element figuratively just before the first
lib/kernel/list.h:     - "reverse beginning": In a non-empty list, the back.  In an
lib/kernel/list.h:     - "interior element": An element that is not the head or
lib/kernel/list.h:        ((STRUCT *) ((uint8_t *) &(LIST_ELEM)->next     \
lib/kernel/list.h:                     - offsetof (STRUCT, MEMBER.next)))
lib/user/console.c:#include <syscall-nr.h>
lib/user/console.c:/* Writes string S to the console, followed by a new-line
lib/user/console.c:  *aux->p++ = c;
lib/user/console.c:  if (aux->p >= aux->buf + sizeof aux->buf)
lib/user/console.c:  aux->char_cnt++;
lib/user/console.c:  if (aux->p > aux->buf)
lib/user/console.c:    write (aux->handle, aux->buf, aux->p - aux->buf);
lib/user/console.c:  aux->p = aux->buf;
lib/user/debug.c:   number, and function name, plus a user-specific message. */
lib/user/syscall.c:#include "../syscall-nr.h"
lib/user/syscall.h:#define PID_ERROR ((pid_t) -1)
lib/user/syscall.h:#define MAP_FAILED ((mapid_t) -1)
lib/user/user.lds:OUTPUT_FORMAT("elf32-i386")
lib/user/user.lds:  /* Read-only sections, merged into text segment: */
lib/user/user.lds:  . = ALIGN (0x1000) - ((0x1000 - .) & (0x1000 - 1)); 
lib/user/user.lds:  /DISCARD/ : { *(.note.GNU-stack) }
LICENSE:/* Copyright (c) 1992-1996 The Regents of the University of California.
Make.config:# -*- makefile -*-
Make.config:# If it's x86-64, use the compiler and linker in 32-bit mode.
Make.config:# Otherwise assume cross-tools are installed as i386-elf-*.
Make.config:ifneq (0, $(shell expr `uname -m` : '$(X86)'))
Make.config:  ifneq (0, $(shell expr `uname -m` : '$(X86_64)'))
Make.config:    CC = gcc -m32
Make.config:    LD = ld -melf_i386
Make.config:    CC = i386-elf-gcc
Make.config:    LD = i386-elf-ld
Make.config:    OBJCOPY = i386-elf-objcopy
Make.config:ifeq ($(strip $(shell command -v $(CC) 2> /dev/null)),)
Make.config:WARNINGS = -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers
Make.config:CFLAGS = -g -msoft-float -O -march=i686
Make.config:CPPFLAGS = -nostdinc -I$(SRCDIR) -I$(SRCDIR)/lib
Make.config:ASFLAGS = -Wa,--gstabs
Make.config:LDFLAGS = -z noseparate-code
Make.config:DEPS = -MMD -MF $(@:.o=.d)
Make.config:# Turn off -fstack-protector, which we don't support.
Make.config:ifeq ($(strip $(shell echo | $(CC) -fno-stack-protector -E - > /dev/null 2>&1; echo $$?)),0)
Make.config:CFLAGS += -fno-stack-protector
Make.config:# Turn off --build-id in the linker, which confuses the Pintos loader.
Make.config:ifeq ($(strip $(shell $(LD) --help | grep -q build-id; echo $$?)),0)
Make.config:LDFLAGS += -Wl,--build-id=none
Make.config:	$(CC) -c $< -o $@ $(CFLAGS) $(CPPFLAGS) $(WARNINGS) $(DEFINES) $(DEPS)
Make.config:	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES) $(DEPS)
Makefile:	@echo "This top-level make has only 'clean' targets."
Makefile:	for d in $(CLEAN_SUBDIRS); do $(MAKE) -C $$d $@; done
Makefile:	rm -f TAGS tags
Makefile:	find . -name '*~' -exec rm '{}' \;
Makefile:TAGS_SOURCES = find $(TAGS_SUBDIRS) -name \*.[chS] -print
Makefile:	etags --members `$(TAGS_SOURCES)`
Makefile:	ctags -T --no-warn `$(TAGS_SOURCES)`
Makefile:	cscope -b -q -k
Makefile.build:# -*- makefile -*-
Makefile.build:kernel.bin: CPPFLAGS += -I$(SRCDIR)/lib/kernel
Makefile.build:threads_SRC += threads/intr-stubs.S	# Interrupt stubs.
Makefile.build:devices_SRC += devices/rtc.c		# Real-time clock.
Makefile.build:lib_SRC += lib/random.c			# Pseudo-random numbers.
Makefile.build:lib_SRC += lib/arithmetic.c		# 64-bit arithmetic for GCC.
Makefile.build:# Kernel-specific library code.
Makefile.build:lib/kernel_SRC += lib/kernel/list.c	# Doubly-linked lists.
Makefile.build:filesys_SRC += filesys/free-map.c	# Free sector bitmap.
Makefile.build:threads/kernel.lds.s: CPPFLAGS += -P
Makefile.build:	$(LD) -T $< -o $@ $(OBJECTS)
Makefile.build:	$(OBJCOPY) -R .note -R .comment -S $< $@
Makefile.build:	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES)
Makefile.build:	$(LD) -N -e 0 -Ttext 0x7c00 --oformat binary -o $@ $<
Makefile.build:	rm -f $(OBJECTS) $(DEPENDS) 
Makefile.build:	rm -f threads/loader.o threads/kernel.lds.s threads/loader.d
Makefile.build:	rm -f kernel.bin.tmp
Makefile.build:	rm -f kernel.o kernel.lds.s
Makefile.build:	rm -f kernel.bin loader.bin
Makefile.build:	rm -f bochsout.txt bochsrc.txt
Makefile.build:	rm -f results grade
Makefile.build:-include $(DEPENDS)
Makefile.kernel:# -*- makefile -*-
Makefile.kernel:	mkdir -p $@
Makefile.kernel:	rm -rf build
Makefile.userprog:# -*- makefile -*-
Makefile.userprog:$(PROGS): CPPFLAGS += -I$(SRCDIR)/lib/user -I.
Makefile.userprog:$(PROGS): LDFLAGS += -nostdlib -static -Wl,-T,$(LDSCRIPT)
Makefile.userprog:lib_SRC += lib/random.c			# Pseudo-random numbers.
Makefile.userprog:lib_SRC += lib/arithmetic.c		# 64-bit arithmetic for GCC.
Makefile.userprog:	$$(CC) $$(LDFLAGS) $$($(1)_OBJ) $$(LIB) -o $$@
Makefile.userprog:	rm -f $@
Makefile.userprog:	rm -f $(PROGS) $(PROGS_OBJ) $(PROGS_DEP)
Makefile.userprog:	rm -f $(LIB_DEP) $(LIB_OBJ) lib/user/entry.[do] libc.a 
Makefile.userprog:-include $(LIB_DEP) $(PROGS_DEP)
misc/bochs-2.2.6-build.sh:#! /bin/sh -e
misc/bochs-2.2.6-build.sh:if test -z "$SRCDIR" || test -z "$PINTOSDIR" || test -z "$DSTDIR"; then
misc/bochs-2.2.6-build.sh:    echo "  where <srcdir> contains bochs-2.2.6.tar.gz"
misc/bochs-2.2.6-build.sh:mkdir bochs-2.2.6
misc/bochs-2.2.6-build.sh:tar xzf $SRCDIR/bochs-2.2.6.tar.gz
misc/bochs-2.2.6-build.sh:cd bochs-2.2.6
misc/bochs-2.2.6-build.sh:cat $PINTOSDIR/src/misc/bochs-2.2.6-ms-extensions.patch | patch -p1
misc/bochs-2.2.6-build.sh:cat $PINTOSDIR/src/misc/bochs-2.2.6-big-endian.patch | patch -p1
misc/bochs-2.2.6-build.sh:cat $PINTOSDIR/src/misc/bochs-2.2.6-jitter.patch | patch -p1
misc/bochs-2.2.6-build.sh:cat $PINTOSDIR/src/misc/bochs-2.2.6-triple-fault.patch | patch -p1
misc/bochs-2.2.6-build.sh:cat $PINTOSDIR/src/misc/bochs-2.2.6-solaris-tty.patch | patch -p1
misc/bochs-2.2.6-build.sh:cat $PINTOSDIR/src/misc/bochs-2.2.6-page-fault-segv.patch | patch -p1
misc/bochs-2.2.6-build.sh:cat $PINTOSDIR/src/misc/bochs-2.2.6-paranoia.patch | patch -p1
misc/bochs-2.2.6-build.sh:cat $PINTOSDIR/src/misc/bochs-2.2.6-gdbstub-ENN.patch | patch -p1
misc/bochs-2.2.6-build.sh:cat $PINTOSDIR/src/misc/bochs-2.2.6-namespace.patch | patch -p1
misc/bochs-2.2.6-build.sh:if test "`uname -s`" = "SunOS"; then
misc/bochs-2.2.6-build.sh:    cat $PINTOSDIR/src/misc/bochs-2.2.6-solaris-link.patch | patch -p1
misc/bochs-2.2.6-build.sh:CFGOPTS="--with-x --with-x11 --with-term --with-nogui --prefix=$DSTDIR --enable-cpu-level=6"
misc/bochs-2.2.6-build.sh:        ../configure $CFGOPTS --enable-gdb-stub && 
misc/bochs-2.2.6-build.sh:mkdir with-dbg &&
misc/bochs-2.2.6-build.sh:        cd with-dbg &&
misc/bochs-2.2.6-build.sh:        ../configure --enable-debugger $CFGOPTS &&
misc/bochs-2.2.6-build.sh:        cp bochs $DSTDIR/bin/bochs-dbg &&
misc/bochs-2.2.6-big-endian.patch:diff -urp bochs-2.2.6/gdbstub.cc bochs-2.2.6.orig/gdbstub.cc
misc/bochs-2.2.6-big-endian.patch:--- bochs-2.2.6.orig/gdbstub.cc	2006-01-17 09:15:29.000000000 -0800
misc/bochs-2.2.6-big-endian.patch:+++ bochs-2.2.6/gdbstub.cc	2006-04-03 13:47:39.000000000 -0700
misc/bochs-2.2.6-big-endian.patch:@@ -672,35 +672,36 @@
misc/bochs-2.2.6-big-endian.patch:-            registers[0] = EAX;
misc/bochs-2.2.6-big-endian.patch:-            registers[1] = ECX;
misc/bochs-2.2.6-big-endian.patch:-            registers[2] = EDX;
misc/bochs-2.2.6-big-endian.patch:-            registers[3] = EBX;
misc/bochs-2.2.6-big-endian.patch:-            registers[4] = ESP;
misc/bochs-2.2.6-big-endian.patch:-            registers[5] = EBP;
misc/bochs-2.2.6-big-endian.patch:-            registers[6] = ESI;
misc/bochs-2.2.6-big-endian.patch:-            registers[7] = EDI;
misc/bochs-2.2.6-big-endian.patch:-                 registers[8] = EIP + 1;
misc/bochs-2.2.6-big-endian.patch:-                 registers[8] = EIP;
misc/bochs-2.2.6-big-endian.patch:-            registers[9] = BX_CPU_THIS_PTR read_eflags();
misc/bochs-2.2.6-big-endian.patch:-            registers[10] = 
misc/bochs-2.2.6-big-endian.patch:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_CS].selector.value;
misc/bochs-2.2.6-big-endian.patch:-            registers[11] = 
misc/bochs-2.2.6-big-endian.patch:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_SS].selector.value;
misc/bochs-2.2.6-big-endian.patch:-            registers[12] = 
misc/bochs-2.2.6-big-endian.patch:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_DS].selector.value;
misc/bochs-2.2.6-big-endian.patch:-            registers[13] = 
misc/bochs-2.2.6-big-endian.patch:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_ES].selector.value;
misc/bochs-2.2.6-big-endian.patch:-            registers[14] = 
misc/bochs-2.2.6-big-endian.patch:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_FS].selector.value;
misc/bochs-2.2.6-big-endian.patch:-            registers[15] = 
misc/bochs-2.2.6-big-endian.patch:-              BX_CPU_THIS_PTR sregs[BX_SEG_REG_GS].selector.value;
misc/bochs-2.2.6-gdbstub-ENN.patch:--- bochs-2.2.6/gdbstub.cc	2006-01-17 12:15:29.000000000 -0500
misc/bochs-2.2.6-gdbstub-ENN.patch:+++ bochs-2.2.6-patched/gdbstub.cc	2007-02-06 23:04:51.095523904 -0500
misc/bochs-2.2.6-gdbstub-ENN.patch:@@ -515,7 +515,7 @@
misc/bochs-2.2.6-gdbstub-ENN.patch:-                           put_reply("ENN");
misc/bochs-2.2.6-gdbstub-ENN.patch:@@ -761,7 +761,7 @@
misc/bochs-2.2.6-gdbstub-ENN.patch:-                 put_reply("ENN");
misc/bochs-2.2.6-gdbstub-ENN.patch:@@ -782,7 +782,7 @@
misc/bochs-2.2.6-gdbstub-ENN.patch:-                 put_reply("ENN");
misc/bochs-2.2.6-jitter.patch:diff -urp bochs-2.2.6/iodev/pit82c54.cc bochs-2.2.6.orig/iodev/pit82c54.cc
misc/bochs-2.2.6-jitter.patch:--- bochs-2.2.6.orig/iodev/pit82c54.cc	2006-01-08 12:39:08.000000000 -0800
misc/bochs-2.2.6-jitter.patch:+++ bochs-2.2.6/iodev/pit82c54.cc	2006-04-03 14:00:27.000000000 -0700
misc/bochs-2.2.6-jitter.patch:@@ -28,6 +28,7 @@
misc/bochs-2.2.6-jitter.patch: #define LOG_THIS this->
misc/bochs-2.2.6-jitter.patch:@@ -359,7 +360,13 @@
misc/bochs-2.2.6-jitter.patch:-	    set_count(thisctr, thisctr.inlatch);
misc/bochs-2.2.6-jitter.patch: 	    thisctr.next_change_time=(thisctr.count_binary-1) & 0xFFFF;
misc/bochs-2.2.6-jitter.patch:diff -urp bochs-2.2.6/main.cc bochs-2.2.6.orig/main.cc
misc/bochs-2.2.6-jitter.patch:--- bochs-2.2.6.orig/main.cc	2006-01-22 04:31:15.000000000 -0800
misc/bochs-2.2.6-jitter.patch:+++ bochs-2.2.6/main.cc	2006-04-03 14:00:54.000000000 -0700
misc/bochs-2.2.6-jitter.patch:@@ -105,6 +105,7 @@
misc/bochs-2.2.6-jitter.patch:@@ -459,6 +460,13 @@
misc/bochs-2.2.6-jitter.patch:     else if (!strcmp ("-q", argv[arg])) {
misc/bochs-2.2.6-jitter.patch:       SIM->get_param_enum(BXP_BOCHS_START)->set (BX_QUICK_START);
misc/bochs-2.2.6-jitter.patch:+    else if (!strcmp ("-j", argv[arg])) {
misc/bochs-2.2.6-jitter.patch:+      if (++arg >= argc) BX_PANIC(("-j must be followed by a number"));
misc/bochs-2.2.6-jitter.patch:     else if (!strcmp ("-f", argv[arg])) {
misc/bochs-2.2.6-jitter.patch:       if (++arg >= argc) BX_PANIC(("-f must be followed by a filename"));
misc/bochs-2.2.6-jitter.patch:diff -up /home/blp/cs140/bochs-2.2.6/bochs.h\~ /home/blp/cs140/bochs-2.2.6/bochs.h
misc/bochs-2.2.6-jitter.patch:--- bochs-2.2.6/bochs.h.orig	2006-01-28 08:16:02.000000000 -0800
misc/bochs-2.2.6-jitter.patch:+++ bochs-2.2.6/bochs.h	2006-04-03 14:03:54.000000000 -0700
misc/bochs-2.2.6-jitter.patch:@@ -698,4 +698,6 @@ int bx_init_hardware ();
misc/bochs-2.2.6-ms-extensions.patch:diff -urp orig/bochs-2.1.1/gui/Makefile.in bochs-2.1.1/gui/Makefile.in
misc/bochs-2.2.6-ms-extensions.patch:--- orig/bochs-2.1.1/gui/Makefile.in	2003-11-28 07:07:28.000000000 -0800
misc/bochs-2.2.6-ms-extensions.patch:+++ bochs-2.1.1/gui/Makefile.in	2004-09-13 15:05:09.402039000 -0700
misc/bochs-2.2.6-ms-extensions.patch:@@ -44,7 +44,7 @@ SHELL = /bin/sh
misc/bochs-2.2.6-ms-extensions.patch:-CXXFLAGS = $(BX_INCDIRS) @CXXFLAGS@  @GUI_CXXFLAGS@
misc/bochs-2.2.6-ms-extensions.patch:+CXXFLAGS = $(BX_INCDIRS) @CXXFLAGS@  @GUI_CXXFLAGS@ -fms-extensions
misc/bochs-2.2.6-namespace.patch:--- bochs-2.2.6/bx_debug/symbols.cc	2011-08-19 11:04:11.760139836 -0600
misc/bochs-2.2.6-namespace.patch:+++ bochs-2.2.6-patched/bx_debug/symbols.cc	2011-08-19 11:04:04.980139837 -0600
misc/bochs-2.2.6-namespace.patch:@@ -92,6 +92,7 @@
misc/bochs-2.2.6-page-fault-segv.patch:Index: bochs-2.2.6/cpu/exception.cc
misc/bochs-2.2.6-page-fault-segv.patch:diff -u bochs-2.2.6/cpu/exception.cc\~ bochs-2.2.6/cpu/exception.cc
misc/bochs-2.2.6-page-fault-segv.patch:--- bochs-2.2.6/cpu/exception.cc~ 2006-09-28 15:51:39.000000000 -0700
misc/bochs-2.2.6-page-fault-segv.patch:+++ bochs-2.2.6/cpu/exception.cc 2006-12-08 11:14:33.000000000 -0800
misc/bochs-2.2.6-page-fault-segv.patch:@@ -1033,6 +1033,10 @@ void BX_CPU_C::exception(unsigned vector
misc/bochs-2.2.6-page-fault-segv.patch:Index: bochs-2.2.6/gdbstub.cc
misc/bochs-2.2.6-page-fault-segv.patch:diff -u bochs-2.2.6/gdbstub.cc\~ bochs-2.2.6/gdbstub.cc
misc/bochs-2.2.6-page-fault-segv.patch:--- bochs-2.2.6/gdbstub.cc~ 2006-09-28 15:51:39.000000000 -0700
misc/bochs-2.2.6-page-fault-segv.patch:+++ bochs-2.2.6/gdbstub.cc 2006-12-08 11:12:03.000000000 -0800
misc/bochs-2.2.6-page-fault-segv.patch:@@ -26,6 +26,7 @@ static int last_stop_reason = GDBSTUB_ST
misc/bochs-2.2.6-page-fault-segv.patch:@@ -271,6 +272,12 @@ int bx_gdbstub_check(unsigned int eip)
misc/bochs-2.2.6-page-fault-segv.patch:@@ -452,6 +459,10 @@ static void debug_loop(void)
misc/bochs-2.2.6-page-fault-segv.patch:@@ -476,10 +487,14 @@ static void debug_loop(void)
misc/bochs-2.2.6-page-fault-segv.patch:-                 else
misc/bochs-2.2.6-page-fault-segv.patch:Index: bochs-2.2.6/bochs.h
misc/bochs-2.2.6-page-fault-segv.patch:diff -u bochs-2.2.6/bochs.h\~ bochs-2.2.6/bochs.h
misc/bochs-2.2.6-page-fault-segv.patch:--- bochs-2.2.6/bochs.h~ 2006-09-28 15:51:39.000000000 -0700
misc/bochs-2.2.6-page-fault-segv.patch:+++ bochs-2.2.6/bochs.h 2006-12-08 11:14:19.000000000 -0800
misc/bochs-2.2.6-page-fault-segv.patch:@@ -375,6 +375,7 @@ BOCHSAPI extern logfunc_t *genlog;
misc/bochs-2.2.6-paranoia.patch:Index: bochs-2.2.6/iodev/hdimage.h
misc/bochs-2.2.6-paranoia.patch:diff -u bochs-2.2.6/iodev/hdimage.h\~ bochs-2.2.6/iodev/hdimage.h
misc/bochs-2.2.6-paranoia.patch:--- bochs-2.2.6/iodev/hdimage.h~ 2005-11-06 03:07:01.000000000 -0800
misc/bochs-2.2.6-paranoia.patch:+++ bochs-2.2.6/iodev/hdimage.h 2006-09-28 15:55:50.000000000 -0700
misc/bochs-2.2.6-paranoia.patch:@@ -273,14 +273,8 @@ class sparse_image_t : public device_ima
misc/bochs-2.2.6-paranoia.patch:-#ifndef PARANOID
misc/bochs-2.2.6-paranoia.patch:-       sparse_image_t::
misc/bochs-2.2.6-paranoia.patch:-#endif
misc/bochs-2.2.6-paranoia.patch:-#ifndef PARANOID
misc/bochs-2.2.6-paranoia.patch:-       sparse_image_t::
misc/bochs-2.2.6-paranoia.patch:-#endif
misc/bochs-2.2.6-solaris-link.patch:--- bochs-2.2.6.orig/Makefile.in	2006-04-03 16:34:51.170387000 -0700
misc/bochs-2.2.6-solaris-link.patch:+++ bochs-2.2.6/Makefile.in	2006-04-03 16:34:57.480303000 -0700
misc/bochs-2.2.6-solaris-link.patch:@@ -93,7 +93,7 @@
misc/bochs-2.2.6-solaris-link.patch: CFLAGS = @CFLAGS@ @GUI_CFLAGS@ $(MCH_CFLAGS) $(FLA_FLAGS) @DEFINE_PLUGIN_PATH@ -DBX_SHARE_PATH='"$(sharedir)"'
misc/bochs-2.2.6-solaris-link.patch: CXXFLAGS = @CXXFLAGS@ @GUI_CXXFLAGS@ $(MCH_CFLAGS) $(FLA_FLAGS) @DEFINE_PLUGIN_PATH@ -DBX_SHARE_PATH='"$(sharedir)"'
misc/bochs-2.2.6-solaris-link.patch:-LDFLAGS = @LDFLAGS@
misc/bochs-2.2.6-solaris-link.patch:+LDFLAGS = @LDFLAGS@ -lsocket
misc/bochs-2.2.6-solaris-link.patch: #   linux needs just -lreadline
misc/bochs-2.2.6-solaris-tty.patch:--- bochs-2.2.6/iodev/serial.cc	2005-07-11 09:24:47.000000000 -0700
misc/bochs-2.2.6-solaris-tty.patch:+++ bochs-2.2.6.patch/iodev/serial.cc	2006-05-28 16:41:33.278938000 -0700
misc/bochs-2.2.6-solaris-tty.patch:@@ -245,8 +245,13 @@
misc/bochs-2.2.6-solaris-tty.patch:-            bcopy((caddr_t) &BX_SER_THIS s[i].term_orig, (caddr_t) &BX_SER_THIS s[i].term_new, sizeof(struct termios));
misc/bochs-2.2.6-solaris-tty.patch:-            cfmakeraw(&BX_SER_THIS s[i].term_new);
misc/bochs-2.2.6-solaris-tty.patch:             BX_SER_THIS s[i].term_new.c_oflag |= OPOST | ONLCR;  // Enable NL to CR-NL translation
misc/bochs-2.2.6-solaris-tty.patch:             // ctl-C will exit Bochs, or trap to the debugger
misc/bochs-2.2.6-solaris-tty.patch:--- bochs-2.2.6/iodev/serial.h	2005-07-10 09:51:09.000000000 -0700
misc/bochs-2.2.6-solaris-tty.patch:+++ bochs-2.2.6.patch/iodev/serial.h	2006-05-28 16:39:03.757839000 -0700
misc/bochs-2.2.6-solaris-tty.patch:@@ -40,7 +40,7 @@
misc/bochs-2.2.6-solaris-tty.patch:-#if defined(__NetBSD__) || defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__linux__) || defined(__GNU__) || defined(__GLIBC__) || defined(__APPLE__)
misc/bochs-2.2.6-triple-fault.patch:diff -u bochs-2.2.6.orig/cpu/exception.cc bochs-2.2.6/cpu/exception.cc
misc/bochs-2.2.6-triple-fault.patch:--- bochs-2.2.6.orig/cpu/exception.cc
misc/bochs-2.2.6-triple-fault.patch:+++ bochs-2.2.6/cpu/exception.cc
misc/bochs-2.2.6-triple-fault.patch:@@ -841,6 +841,13 @@ void BX_CPU_C::exception(unsigned vector
misc/bochs-2.2.6-triple-fault.patch:@@ -860,6 +867,13 @@ void BX_CPU_C::exception(unsigned vector
misc/bochs-2.2.6-triple-fault.patch:diff -u bochs-2.2.6.orig/gdbstub.cc bochs-2.2.6/gdbstub.cc
misc/bochs-2.2.6-triple-fault.patch:--- bochs-2.2.6.orig/gdbstub.cc
misc/bochs-2.2.6-triple-fault.patch:+++ bochs-2.2.6/gdbstub.cc
misc/bochs-2.2.6-triple-fault.patch:@@ -466,19 +466,19 @@ static void debug_loop(void)
misc/bochs-2.2.6-triple-fault.patch:                  bx_cpu.cpu_loop(-1);
misc/bochs-2.2.6-triple-fault.patch:-                 if (last_stop_reason == GDBSTUB_EXECUTION_BREAKPOINT ||
misc/bochs-2.2.6-triple-fault.patch:-                     last_stop_reason == GDBSTUB_TRACE)
misc/bochs-2.2.6-triple-fault.patch:-                      write_signal(&buf[1], SIGTRAP);
misc/bochs-2.6.2-banner-stderr.patch:diff -Naur bochs-2.6.2/main.cc bochs-2.6.2.new/main.cc
misc/bochs-2.6.2-banner-stderr.patch:--- bochs-2.6.2/main.cc	2014-01-06 23:29:42.000000001 -0800
misc/bochs-2.6.2-banner-stderr.patch:+++ bochs-2.6.2.new/main.cc	2014-01-06 22:33:42.000000001 -0800
misc/bochs-2.6.2-banner-stderr.patch:@@ -105,23 +105,23 @@
misc/bochs-2.6.2-banner-stderr.patch:-  printf("%s\n", divider);
misc/bochs-2.6.2-banner-stderr.patch:-  bx_center_print(stdout, buffer, 72);
misc/bochs-2.6.2-banner-stderr.patch:-    bx_center_print(stdout, buffer, 72);
misc/bochs-2.6.2-banner-stderr.patch:-    bx_center_print(stdout, buffer, 72);
misc/bochs-2.6.2-banner-stderr.patch:-  printf("%s\n", divider);
misc/bochs-2.6.2-block-device-check.patch:diff -Naur bochs-2.6.2/iodev/hdimage/hdimage.cc bochs-2.6.2.new/iodev/hdimage/hdimage.cc
misc/bochs-2.6.2-block-device-check.patch:--- bochs-2.6.2/iodev/hdimage/hdimage.cc	2013-03-08 10:25:32.000000001 -0800
misc/bochs-2.6.2-block-device-check.patch:+++ bochs-2.6.2.new/iodev/hdimage/hdimage.cc	2014-01-10 06:54:24.000000001 -0800
misc/bochs-2.6.2-block-device-check.patch:@@ -200,7 +200,7 @@
misc/bochs-2.6.2-block-device-check.patch:       return -1;
misc/bochs-2.6.2-block-device-check.patch:-    if (stat_buf.st_rdev) { // Is this a special device file (e.g. /dev/sde) ?
misc/bochs-2.6.2-build.sh:#! /bin/sh -e
misc/bochs-2.6.2-build.sh:if test -z "$SRCDIR" || test -z "$PINTOSDIR" || test -z "$DSTDIR"; then
misc/bochs-2.6.2-build.sh:    echo "  where <srcdir> contains bochs-2.6.2.tar.gz"
misc/bochs-2.6.2-build.sh:mkdir bochs-2.6.2
misc/bochs-2.6.2-build.sh:tar xzf $SRCDIR/bochs-2.6.2.tar.gz
misc/bochs-2.6.2-build.sh:cd bochs-2.6.2
misc/bochs-2.6.2-build.sh:cat $PINTOSDIR/src/misc/bochs-2.6.2-jitter-plus-segv.patch | patch -p1
misc/bochs-2.6.2-build.sh:cat $PINTOSDIR/src/misc/bochs-2.6.2-xrandr-pkgconfig.patch | patch -p1
misc/bochs-2.6.2-build.sh:cat $PINTOSDIR/src/misc/bochs-2.6.2-banner-stderr.patch | patch -p1
misc/bochs-2.6.2-build.sh:cat $PINTOSDIR/src/misc/bochs-2.6.2-block-device-check.patch | patch -p1
misc/bochs-2.6.2-build.sh:cat $PINTOSDIR/src/misc/bochs-2.6.2-link-tinfo.patch | patch -p1
misc/bochs-2.6.2-build.sh:CFGOPTS="--with-x --with-x11 --with-term --with-nogui --prefix=$DSTDIR"
misc/bochs-2.6.2-build.sh:        ../configure $CFGOPTS --enable-gdb-stub && 
misc/bochs-2.6.2-build.sh:mkdir with-dbg &&
misc/bochs-2.6.2-build.sh:        cd with-dbg &&
misc/bochs-2.6.2-build.sh:        ../configure --enable-debugger --disable-debugger-gui $CFGOPTS &&
misc/bochs-2.6.2-build.sh:        cp bochs $DSTDIR/bin/bochs-dbg &&
misc/bochs-2.6.2-jitter-plus-segv.patch:diff --git a/bochs.h b/bochs.h
misc/bochs-2.6.2-jitter-plus-segv.patch:--- a/bochs.h
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -392,6 +392,7 @@ BOCHSAPI extern logfunc_t *genlog;
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -589,4 +590,6 @@ BX_CPP_INLINE Bit64u bx_bswap64(Bit64u val64)
misc/bochs-2.6.2-jitter-plus-segv.patch:diff --git a/cpu/exception.cc b/cpu/exception.cc
misc/bochs-2.6.2-jitter-plus-segv.patch:--- a/cpu/exception.cc
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -914,6 +914,10 @@ void BX_CPU_C::exception(unsigned vector, Bit16u error_code)
misc/bochs-2.6.2-jitter-plus-segv.patch:diff --git a/gdbstub.cc b/gdbstub.cc
misc/bochs-2.6.2-jitter-plus-segv.patch:--- a/gdbstub.cc
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -49,6 +49,7 @@ static int last_stop_reason = GDBSTUB_STOP_NO_REASON;
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -317,6 +318,12 @@ int bx_gdbstub_check(unsigned int eip)
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -487,6 +494,10 @@ static void debug_loop(void)
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -514,6 +525,10 @@ static void debug_loop(void)
misc/bochs-2.6.2-jitter-plus-segv.patch:diff --git a/iodev/pit82c54.cc b/iodev/pit82c54.cc
misc/bochs-2.6.2-jitter-plus-segv.patch:--- a/iodev/pit82c54.cc
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -49,6 +49,7 @@
misc/bochs-2.6.2-jitter-plus-segv.patch: #define LOG_THIS this->
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -410,7 +411,14 @@ void BX_CPP_AttrRegparmN(1) pit_82C54::clock(Bit8u cnum)
misc/bochs-2.6.2-jitter-plus-segv.patch:-            set_count(thisctr, thisctr.inlatch);
misc/bochs-2.6.2-jitter-plus-segv.patch:             thisctr.next_change_time=(thisctr.count_binary-1) & 0xFFFF;
misc/bochs-2.6.2-jitter-plus-segv.patch:diff --git a/main.cc b/main.cc
misc/bochs-2.6.2-jitter-plus-segv.patch:--- a/main.cc
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -101,6 +101,7 @@ BOCHSAPI BX_CPU_C bx_cpu;
misc/bochs-2.6.2-jitter-plus-segv.patch:@@ -639,6 +640,13 @@ int bx_init_main(int argc, char *argv[])
misc/bochs-2.6.2-jitter-plus-segv.patch:       else SIM->get_param_string(BXPN_DEBUGGER_LOG_FILENAME)->set(argv[arg]);
misc/bochs-2.6.2-jitter-plus-segv.patch:+    else if (!strcmp ("-j", argv[arg])) {
misc/bochs-2.6.2-jitter-plus-segv.patch:+      if (++arg >= argc) BX_PANIC(("-j must be followed by a number"));
misc/bochs-2.6.2-jitter-plus-segv.patch:     else if (!strcmp("-f", argv[arg])) {
misc/bochs-2.6.2-jitter-plus-segv.patch:       if (++arg >= argc) BX_PANIC(("-f must be followed by a filename"));
misc/bochs-2.6.2-link-tinfo.patch:diff --git i/configure w/configure
misc/bochs-2.6.2-link-tinfo.patch:--- i/configure
misc/bochs-2.6.2-link-tinfo.patch:@@ -24739,7 +24739,7 @@ if ${ac_cv_lib_ncurses_mvaddch+:} false; then :
misc/bochs-2.6.2-link-tinfo.patch:-LIBS="-lncurses  $LIBS"
misc/bochs-2.6.2-link-tinfo.patch:+LIBS="-lncurses -ltinfo $LIBS"
misc/bochs-2.6.2-link-tinfo.patch: cat confdefs.h - <<_ACEOF >conftest.$ac_ext
misc/bochs-2.6.2-link-tinfo.patch:@@ -24770,7 +24770,7 @@ fi
misc/bochs-2.6.2-link-tinfo.patch: { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_ncurses_mvaddch" >&5
misc/bochs-2.6.2-link-tinfo.patch:-  GUI_LINK_OPTS_TERM='-lncurses'
misc/bochs-2.6.2-link-tinfo.patch:+  GUI_LINK_OPTS_TERM='-lncurses -ltinfo'
misc/bochs-2.6.2-link-tinfo.patch:   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for mvaddch in -ltermlib" >&5
misc/bochs-2.6.2-xrandr-pkgconfig.patch:diff -Naur bochs-2.6.2.orig/configure bochs-2.6.2/configure
misc/bochs-2.6.2-xrandr-pkgconfig.patch:--- bochs-2.6.2.orig/configure	2014-01-06 16:39:03.000000000 -0800
misc/bochs-2.6.2-xrandr-pkgconfig.patch:+++ bochs-2.6.2/configure	2014-01-06 16:39:23.000000000 -0800
misc/bochs-2.6.2-xrandr-pkgconfig.patch:@@ -24202,8 +24202,8 @@
misc/bochs-2.6.2-xrandr-pkgconfig.patch:-    X_CFLAGS="`pkg-config --cflags x11`"
misc/bochs-2.6.2-xrandr-pkgconfig.patch:-    X_LIBS="`pkg-config --libs x11` $XPM_LIB -lXrandr"
misc/bochs-2.6.2-xrandr-pkgconfig.patch:+    X_CFLAGS="`pkg-config --cflags x11 xrandr`"
misc/bochs-2.6.2-xrandr-pkgconfig.patch:+    X_LIBS="`pkg-config --libs x11 xrandr` $XPM_LIB"
misc/bochs-2.6.2-xrandr-pkgconfig.patch:     X_LIBS="$X_LIBS -lX11 $XPM_LIB -lXrandr"
misc/gcc-3.3.6-cross-howto:cross-compiler:
misc/gcc-3.3.6-cross-howto:PREFIX=/usr/class/cs140/`uname -m`
misc/gcc-3.3.6-cross-howto:wget ftp://ftp.gnu.org/pub/gnu/binutils/binutils-2.15.tar.bz2
misc/gcc-3.3.6-cross-howto:wget ftp://sources.redhat.com/pub/newlib/newlib-1.13.0.tar.gz
misc/gcc-3.3.6-cross-howto:wget ftp://ftp.gnu.org/pub/gnu/gcc/gcc-3.3.6/gcc-core-3.3.6.tar.bz2
misc/gcc-3.3.6-cross-howto:wget ftp://ftp.gnu.org/pub/gnu/gdb/gdb-6.3.tar.bz2
misc/gcc-3.3.6-cross-howto:bzcat binutils-2.15.tar.bz2 | tar x
misc/gcc-3.3.6-cross-howto:tar xzf newlib-1.13.0.tar.gz
misc/gcc-3.3.6-cross-howto:bzcat gcc-core-3.3.6.tar.bz2 | tar x
misc/gcc-3.3.6-cross-howto:bzcat gdb-6.3.tar.bz2 | tar x
misc/gcc-3.3.6-cross-howto:cd $TMP/binutils-2.15
misc/gcc-3.3.6-cross-howto:../configure --target=i386-elf --prefix=$PREFIX
misc/gcc-3.3.6-cross-howto:make LDFLAGS=-lintl
misc/gcc-3.3.6-cross-howto:cd $TMP/gcc-3.3.6
misc/gcc-3.3.6-cross-howto:../configure --target=i386-elf --prefix=$PREFIX --with-gnu-as --with-as=$PREFIX/bin/i386-elf-as --with-gnu-ld --with-ld=$PREFIX/bin/i386-elf-ld --with-headers=$TMP/newlib-1.13.0/newlib/libc/include --with-newlib
misc/gcc-3.3.6-cross-howto:cd $TMP/gdb-6.3
misc/gcc-3.3.6-cross-howto:../configure --target=i386-elf --prefix=$PREFIX --disable-tui
misc/gcc-3.3.6-cross-howto:make LDFLAGS=-lintl
misc/gdb-macros:# Use "help user-defined" for help.
misc/gdb-macros:# $Id: gdb-macros,v 1.1 2006-04-07 18:29:34 blp Exp $
misc/gdb-macros:    set $rc = (char*)&((struct $arg0 *)0)->$arg1 - (char*)0
misc/gdb-macros:    set $rc = ((struct $arg1 *) ((uint8_t *) ($arg0) - $rc))
misc/gdb-macros:    set $e = $list->head.next
misc/gdb-macros:        printf "pintos-debug: dumplist #%d: %p ", $i++, $l
misc/gdb-macros:        set $e = $e->next
misc/gdb-macros:   if $arg0 == ($esp - ((unsigned)$esp % 4096)) 
misc/gdb-macros:       set $esp = ((struct thread *)$arg0)->stack
misc/gdb-macros:    set $e = $list->head.next
misc/gdb-macros:        printf "pintos-debug: dumping backtrace of thread '%s' @%p\n", \
misc/gdb-macros:                ((struct thread*)$rc)->name, $rc
misc/gdb-macros:        set $e = $e->next
misc/gdb-macros:define hook-stop
misc/gdb-macros:            printf "pintos-debug: a page fault exception occurred in user mode\n"
misc/gdb-macros:            printf "pintos-debug: hit 'c' to continue, or 's' to step to intr_handler\n"
misc/gdb-macros:            printf "pintos-debug: a page fault occurred in kernel mode\n"
misc/gdb-macros:    shell objdump -h $arg0 | awk '/.text/ { print "add-symbol-file $arg0 0x"$4 }' > .loadsymbols
misc/gdb-macros:    shell rm -f .loadsymbols
misc/gdb-macros:        loadusersymbols tests/userprog/exec-multiple
tags:!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
tags:ACTUAL	tests/vm/child-mm-wrt.c	12;"	d	file:
tags:ACTUAL	tests/vm/mmap-close.c	10;"	d	file:
tags:ACTUAL	tests/vm/mmap-unmap.c	9;"	d	file:
tags:ACTUAL	tests/vm/mmap-write.c	11;"	d	file:
tags:BLOCK_FOREIGN	devices/block.h	/^    BLOCK_FOREIGN,               \/* Owned by non-Pintos operating system. *\/$/;"	e	enum:block_type
tags:BLOCK_SIZE	tests/filesys/base/lg-random.c	5;"	d	file:
tags:BLOCK_SIZE	tests/filesys/base/lg-seq-block.c	6;"	d	file:
tags:BLOCK_SIZE	tests/filesys/base/sm-random.c	5;"	d	file:
tags:BLOCK_SIZE	tests/filesys/base/sm-seq-block.c	6;"	d	file:
tags:BUF_SIZE	tests/filesys/base/syn-read.h	4;"	d
tags:BUF_SIZE	tests/filesys/base/syn-write.h	6;"	d
tags:BUF_SIZE	tests/filesys/extended/syn-rw.h	6;"	d
tags:CFLAGS	utils/Makefile	/^CFLAGS = -Wall -W$/;"	m
tags:CHILD_CNT	tests/filesys/base/syn-read.c	14;"	d	file:
tags:CHILD_CNT	tests/filesys/base/syn-write.h	4;"	d
tags:CHILD_CNT	tests/filesys/extended/syn-rw.c	12;"	d	file:
tags:CHILD_CNT	tests/userprog/rox-child.c	4;"	d	file:
tags:CHILD_CNT	tests/userprog/rox-multichild.c	4;"	d	file:
tags:CHILD_CNT	tests/vm/page-parallel.c	7;"	d	file:
tags:CHUNK_CNT	tests/filesys/extended/syn-rw.h	5;"	d
tags:CHUNK_CNT	tests/vm/page-merge-seq.c	15;"	d	file:
tags:CHUNK_CNT	tests/vm/parallel-merge.c	14;"	d	file:
tags:CHUNK_SIZE	tests/filesys/base/syn-write.h	5;"	d
tags:CHUNK_SIZE	tests/filesys/extended/syn-rw.h	4;"	d
tags:CHUNK_SIZE	tests/vm/page-merge-seq.c	14;"	d	file:
tags:CHUNK_SIZE	tests/vm/parallel-merge.c	13;"	d	file:
tags:CR0_EM	threads/start.S	/^#define CR0_EM 0x00000004      \/* (Floating-point) Emulation. *\/$/;"	d
tags:CR0_WP	threads/start.S	/^#define CR0_WP 0x00010000      \/* Write-Protect enable in kernel mode. *\/$/;"	d
tags:CRASH	tests/userprog/no-vm/multi-oom.c	/^enum child_termination_mode { RECURSE, CRASH };$/;"	e	enum:child_termination_mode	file:
tags:DATA_SIZE	tests/vm/page-merge-seq.c	16;"	d	file:
tags:DATA_SIZE	tests/vm/parallel-merge.c	15;"	d	file:
tags:DIRECTORY	tests/filesys/extended/grow-dir-lg.c	5;"	d	file:
tags:EXPECTED_DEPTH_TO_PASS	tests/userprog/no-vm/multi-oom.c	/^static const int EXPECTED_DEPTH_TO_PASS = 30;$/;"	v	file:
tags:EXPECTED_REPETITIONS	tests/userprog/no-vm/multi-oom.c	/^static const int EXPECTED_REPETITIONS = 10;$/;"	v	file:
tags:FILESYS_FREE_MAP_H	filesys/free-map.h	2;"	d
tags:FILE_CNT	tests/filesys/extended/grow-dir-lg.c	4;"	d	file:
tags:FILE_CNT	tests/filesys/extended/grow-root-lg.c	3;"	d	file:
tags:FILE_CNT	tests/filesys/extended/grow-root-sm.c	3;"	d	file:
tags:FILE_SIZE	tests/filesys/extended/grow-two-files.c	9;"	d	file:
tags:GRAN_BYTE	userprog/gdt.c	/^    GRAN_BYTE = 0,              \/* Limit has 1-byte granularity. *\/$/;"	e	enum:seg_granularity	file:
tags:ITER_CNT	tests/threads/priority-fifo.c	27;"	d	file:
tags:LOADLIBES	utils/Makefile	/^LOADLIBES = -lm$/;"	m
tags:MAX_THREAD_CNT	tests/threads/mlfqs-fair.c	54;"	d	file:
tags:MINUS	lib/stdio.c	/^        MINUS = 1 << 0,         \/* '-' *\/$/;"	e	enum:printf_conversion::__anon2	file:
tags:NESTING_DEPTH	tests/threads/priority-donate-chain.c	33;"	d	file:
tags:PROGS	examples/Makefile	/^PROGS = cat cmp cp echo halt hex-dump ls mcat mcp mkdir pwd rm shell \\$/;"	m
tags:REAL	threads/intr-stubs.S	/^#define REAL                                    \\$/;"	d
tags:RECURSE	tests/userprog/no-vm/multi-oom.c	/^enum child_termination_mode { RECURSE, CRASH };$/;"	e	enum:child_termination_mode	file:
tags:SIZE	tests/vm/child-linear.c	10;"	d	file:
tags:SIZE	tests/vm/mmap-shuffle.c	12;"	d	file:
tags:SIZE	tests/vm/page-linear.c	9;"	d	file:
tags:SIZE	tests/vm/page-shuffle.c	10;"	d	file:
tags:STUB	threads/intr-stubs.S	/^#define STUB(NUMBER, TYPE)                      \\$/;"	d
tags:SYS_CHDIR	lib/syscall-nr.h	/^    SYS_CHDIR,                  \/* Change the current directory. *\/$/;"	e	enum:__anon4
tags:SYS_CLOSE	lib/syscall-nr.h	/^    SYS_CLOSE,                  \/* Close a file. *\/$/;"	e	enum:__anon4
tags:SYS_CREATE	lib/syscall-nr.h	/^    SYS_CREATE,                 \/* Create a file. *\/$/;"	e	enum:__anon4
tags:SYS_EXEC	lib/syscall-nr.h	/^    SYS_EXEC,                   \/* Start another process. *\/$/;"	e	enum:__anon4
tags:SYS_EXIT	lib/syscall-nr.h	/^    SYS_EXIT,                   \/* Terminate this process. *\/$/;"	e	enum:__anon4
tags:SYS_FIB	lib/syscall-nr.h	/^	SYS_FIB,					\/* Fibonacci *\/$/;"	e	enum:__anon4
tags:SYS_FILESIZE	lib/syscall-nr.h	/^    SYS_FILESIZE,               \/* Obtain a file's size. *\/$/;"	e	enum:__anon4
tags:SYS_HALT	lib/syscall-nr.h	/^    SYS_HALT,                   \/* Halt the operating system. *\/$/;"	e	enum:__anon4
tags:SYS_INUMBER	lib/syscall-nr.h	/^    SYS_INUMBER,                \/* Returns the inode number for a fd. *\/$/;"	e	enum:__anon4
tags:SYS_ISDIR	lib/syscall-nr.h	/^    SYS_ISDIR,                  \/* Tests if a fd represents a directory. *\/$/;"	e	enum:__anon4
tags:SYS_MAX	lib/syscall-nr.h	/^	SYS_MAX						\/* Max_of_four_int *\/$/;"	e	enum:__anon4
tags:SYS_MKDIR	lib/syscall-nr.h	/^    SYS_MKDIR,                  \/* Create a directory. *\/$/;"	e	enum:__anon4
tags:SYS_MMAP	lib/syscall-nr.h	/^    SYS_MMAP,                   \/* Map a file into memory. *\/$/;"	e	enum:__anon4
tags:SYS_MUNMAP	lib/syscall-nr.h	/^    SYS_MUNMAP,                 \/* Remove a memory mapping. *\/$/;"	e	enum:__anon4
tags:SYS_OPEN	lib/syscall-nr.h	/^    SYS_OPEN,                   \/* Open a file. *\/$/;"	e	enum:__anon4
tags:SYS_READ	lib/syscall-nr.h	/^    SYS_READ,                   \/* Read from a file. *\/$/;"	e	enum:__anon4
tags:SYS_READDIR	lib/syscall-nr.h	/^    SYS_READDIR,                \/* Reads a directory entry. *\/$/;"	e	enum:__anon4
tags:SYS_REMOVE	lib/syscall-nr.h	/^    SYS_REMOVE,                 \/* Delete a file. *\/$/;"	e	enum:__anon4
tags:SYS_SEEK	lib/syscall-nr.h	/^    SYS_SEEK,                   \/* Change position in a file. *\/$/;"	e	enum:__anon4
tags:SYS_TELL	lib/syscall-nr.h	/^    SYS_TELL,                   \/* Report current position in a file. *\/$/;"	e	enum:__anon4
tags:SYS_WAIT	lib/syscall-nr.h	/^    SYS_WAIT,                   \/* Wait for a child process to die. *\/$/;"	e	enum:__anon4
tags:SYS_WRITE	lib/syscall-nr.h	/^    SYS_WRITE,                  \/* Write to a file. *\/$/;"	e	enum:__anon4
tags:TAGS_SOURCES	Makefile	/^TAGS_SOURCES = find $(TAGS_SUBDIRS) -name \\*.[chS] -print$/;"	m
tags:TESTS_FILESYS_BASE_SYN_READ_H	tests/filesys/base/syn-read.h	2;"	d
tags:TESTS_FILESYS_BASE_SYN_WRITE_H	tests/filesys/base/syn-write.h	2;"	d
tags:TESTS_FILESYS_EXTENDED_MK_TREE_H	tests/filesys/extended/mk-tree.h	2;"	d
tags:TESTS_FILESYS_EXTENDED_SYN_RW_H	tests/filesys/extended/syn-rw.h	2;"	d
tags:TESTS_FILESYS_SEQ_TEST_H	tests/filesys/seq-test.h	2;"	d
tags:TESTS_VM_PARALLEL_MERGE	tests/vm/parallel-merge.h	2;"	d
tags:TEST_SIZE	tests/filesys/base/lg-create.c	4;"	d	file:
tags:TEST_SIZE	tests/filesys/base/lg-full.c	5;"	d	file:
tags:TEST_SIZE	tests/filesys/base/lg-random.c	6;"	d	file:
tags:TEST_SIZE	tests/filesys/base/lg-seq-block.c	5;"	d	file:
tags:TEST_SIZE	tests/filesys/base/lg-seq-random.c	5;"	d	file:
tags:TEST_SIZE	tests/filesys/base/sm-create.c	4;"	d	file:
tags:TEST_SIZE	tests/filesys/base/sm-full.c	5;"	d	file:
tags:TEST_SIZE	tests/filesys/base/sm-random.c	6;"	d	file:
tags:TEST_SIZE	tests/filesys/base/sm-seq-block.c	5;"	d	file:
tags:TEST_SIZE	tests/filesys/base/sm-seq-random.c	5;"	d	file:
tags:TEST_SIZE	tests/filesys/extended/grow-create.c	3;"	d	file:
tags:TEST_SIZE	tests/filesys/extended/grow-seq-lg.c	4;"	d	file:
tags:TEST_SIZE	tests/filesys/extended/grow-seq-sm.c	4;"	d	file:
tags:THREADS_INTR_STUBS_H	threads/intr-stubs.h	2;"	d
tags:THREAD_CNT	tests/threads/mlfqs-load-60.c	112;"	d	file:
tags:THREAD_CNT	tests/threads/mlfqs-load-avg.c	123;"	d	file:
tags:THREAD_CNT	tests/threads/priority-fifo.c	26;"	d	file:
tags:USTAR_EOF	lib/ustar.h	/^    USTAR_EOF = -1              \/* End of archive (not an official value). *\/$/;"	e	enum:ustar_type
tags:Usage	utils/pintos	/^Usage: pintos [OPTION...] -- [ARGUMENT...]$/;"	l
tags:Usage	utils/pintos-mkdisk	/^Usage: pintos-mkdisk [OPTIONS] DISK [-- ARGUMENT...]$/;"	l
tags:_Base	tests/Algorithm/Diff.pm	/^sub _Base() { 5 } # $me->[_Base]: Added to range's min and max$/;"	s
tags:_End	tests/Algorithm/Diff.pm	/^sub _End()  { 3 } # $me->[_End]: Diff between forward and reverse pos$/;"	s
tags:_GNU_SOURCE	utils/squish-pty.c	1;"	d	file:
tags:_GNU_SOURCE	utils/squish-unix.c	1;"	d	file:
tags:_Idx	tests/Algorithm/Diff.pm	/^sub _Idx()  { 0 } # $me->[_Idx]: Ref to array of hunk indices$/;"	s
tags:_Min	tests/Algorithm/Diff.pm	/^sub _Min() { -2 } # Added to _Off to get min instead of max+1$/;"	s
tags:_Off	tests/Algorithm/Diff.pm	/^sub _Off()  { 7 } # $me->[_Off]: Offset into _Idx for current position$/;"	s
tags:_Pos	tests/Algorithm/Diff.pm	/^sub _Pos()  { 6 } # $me->[_Pos]: Which hunk is currently selected$/;"	s
tags:_Same	tests/Algorithm/Diff.pm	/^sub _Same() { 4 } # $me->[_Same]: 1 if pos 1 contains unchanged items$/;"	s
tags:__LIB_SYSCALL_NR_H	lib/syscall-nr.h	2;"	d
tags:a	tests/threads/priority-donate-nest.c	/^    struct lock *a;$/;"	m	struct:locks	typeref:struct:locks::lock	file:
tags:a_thread_func	tests/threads/priority-donate-multiple.c	/^a_thread_func (void *lock_) $/;"	f	file:
tags:a_thread_func	tests/threads/priority-donate-multiple.c	/^static thread_func a_thread_func;$/;"	v	file:
tags:a_thread_func	tests/threads/priority-donate-multiple2.c	/^a_thread_func (void *lock_) $/;"	f	file:
tags:a_thread_func	tests/threads/priority-donate-multiple2.c	/^static thread_func a_thread_func;$/;"	v	file:
tags:acquire1_thread_func	tests/threads/priority-donate-one.c	/^acquire1_thread_func (void *lock_) $/;"	f	file:
tags:acquire1_thread_func	tests/threads/priority-donate-one.c	/^static thread_func acquire1_thread_func;$/;"	v	file:
tags:acquire2_thread_func	tests/threads/priority-donate-one.c	/^acquire2_thread_func (void *lock_) $/;"	f	file:
tags:acquire2_thread_func	tests/threads/priority-donate-one.c	/^static thread_func acquire2_thread_func;$/;"	v	file:
tags:acquire_thread_func	tests/threads/priority-donate-lower.c	/^acquire_thread_func (void *lock_) $/;"	f	file:
tags:acquire_thread_func	tests/threads/priority-donate-lower.c	/^static thread_func acquire_thread_func;$/;"	v	file:
tags:alarm_priority_thread	tests/threads/alarm-priority.c	/^alarm_priority_thread (void *aux UNUSED) $/;"	f	file:
tags:alarm_priority_thread	tests/threads/alarm-priority.c	/^static thread_func alarm_priority_thread;$/;"	v	file:
tags:b	tests/threads/priority-donate-nest.c	/^    struct lock *b;$/;"	m	struct:locks	typeref:struct:locks::lock	file:
tags:b_thread_func	tests/threads/priority-donate-multiple.c	/^b_thread_func (void *lock_) $/;"	f	file:
tags:b_thread_func	tests/threads/priority-donate-multiple.c	/^static thread_func b_thread_func;$/;"	v	file:
tags:b_thread_func	tests/threads/priority-donate-multiple2.c	/^b_thread_func (void *lock_) $/;"	f	file:
tags:b_thread_func	tests/threads/priority-donate-multiple2.c	/^static thread_func b_thread_func;$/;"	v	file:
tags:block_thread	tests/threads/mlfqs-block.c	/^block_thread (void *lock_) $/;"	f	file:
tags:buf	tests/filesys/base/child-syn-read.c	/^static char buf[BUF_SIZE];$/;"	v	file:
tags:buf	tests/filesys/base/child-syn-wrt.c	/^char buf[BUF_SIZE];$/;"	v
tags:buf	tests/filesys/base/syn-read.c	/^static char buf[BUF_SIZE];$/;"	v	file:
tags:buf	tests/filesys/extended/grow-file-size.c	/^static char buf[2134];$/;"	v	file:
tags:buf	tests/filesys/extended/grow-sparse.c	/^static char buf[76543];$/;"	v	file:
tags:buf	tests/filesys/extended/grow-tell.c	/^static char buf[2134];$/;"	v	file:
tags:buf	tests/filesys/extended/syn-rw.c	/^char buf[BUF_SIZE];$/;"	v
tags:buf	tests/vm/child-linear.c	/^static char buf[SIZE];$/;"	v	file:
tags:buf	tests/vm/child-sort.c	/^unsigned char buf[128 * 1024];$/;"	v
tags:buf	tests/vm/mmap-shuffle.c	/^static char *buf = (char *) 0x10000000;$/;"	v	file:
tags:buf	tests/vm/page-linear.c	/^static char buf[SIZE];$/;"	v	file:
tags:buf	tests/vm/page-shuffle.c	/^static char buf[SIZE];$/;"	v	file:
tags:buf1	tests/filesys/base/syn-remove.c	/^char buf1[1234];$/;"	v
tags:buf1	tests/filesys/base/syn-write.c	/^char buf1[BUF_SIZE];$/;"	v
tags:buf1	tests/filesys/extended/child-syn-rw.c	/^static char buf1[BUF_SIZE];$/;"	v	file:
tags:buf1	tests/vm/page-merge-seq.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v
tags:buf1	tests/vm/parallel-merge.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v
tags:buf2	tests/filesys/base/syn-remove.c	/^char buf2[1234];$/;"	v
tags:buf2	tests/filesys/base/syn-write.c	/^char buf2[BUF_SIZE];$/;"	v
tags:buf2	tests/filesys/extended/child-syn-rw.c	/^static char buf2[BUF_SIZE];$/;"	v	file:
tags:buf2	tests/vm/page-merge-seq.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v
tags:buf2	tests/vm/parallel-merge.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v
tags:buf_a	tests/filesys/extended/grow-two-files.c	/^static char buf_a[FILE_SIZE];$/;"	v	file:
tags:buf_b	tests/filesys/extended/grow-two-files.c	/^static char buf_b[FILE_SIZE];$/;"	v	file:
tags:c_thread_func	tests/threads/priority-donate-multiple2.c	/^c_thread_func (void *a_ UNUSED) $/;"	f	file:
tags:c_thread_func	tests/threads/priority-donate-multiple2.c	/^static thread_func c_thread_func;$/;"	v	file:
tags:changing_thread	tests/threads/priority-change.c	/^changing_thread (void *aux UNUSED) $/;"	f	file:
tags:changing_thread	tests/threads/priority-change.c	/^static thread_func changing_thread;$/;"	v	file:
tags:check_file_size	tests/filesys/extended/grow-file-size.c	/^check_file_size (int fd, long ofs) $/;"	f	file:
tags:check_tell	tests/filesys/extended/grow-tell.c	/^check_tell (int fd, long ofs) $/;"	f	file:
tags:child_termination_mode	tests/userprog/no-vm/multi-oom.c	/^enum child_termination_mode { RECURSE, CRASH };$/;"	g	file:
tags:condition	tests/threads/priority-condvar.c	/^static struct condition condition;$/;"	v	typeref:struct:condition	file:
tags:consume_some_resources	tests/userprog/no-vm/multi-oom.c	/^consume_some_resources (void)$/;"	f	file:
tags:consume_some_resources_and_die	tests/userprog/no-vm/multi-oom.c	/^consume_some_resources_and_die (int seed)$/;"	f	file:
tags:dead_child_fd	utils/squish-pty.c	/^static int dead_child_fd;$/;"	v	file:
tags:do_mkdir	tests/filesys/extended/mk-tree.c	/^do_mkdir (const char *format, ...) $/;"	f	file:
tags:do_remove	tests/filesys/extended/dir-rm-tree.c	/^do_remove (const char *format, ...) $/;"	f	file:
tags:do_touch	tests/filesys/extended/mk-tree.c	/^do_touch (const char *format, ...)$/;"	f	file:
tags:donor_thread_func	tests/threads/priority-donate-chain.c	/^donor_thread_func (void *locks_) $/;"	f	file:
tags:donor_thread_func	tests/threads/priority-donate-chain.c	/^static thread_func donor_thread_func;$/;"	v	file:
tags:duration	tests/threads/alarm-wait.c	/^    int duration;               \/* Number of ticks to sleep. *\/$/;"	m	struct:sleep_thread	file:
tags:fail_io	utils/squish-pty.c	/^fail_io (const char *msg, ...)$/;"	f	file:
tags:fail_io	utils/squish-unix.c	/^fail_io (const char *msg, ...)$/;"	f	file:
tags:file_name	tests/filesys/base/syn-read.h	/^static const char file_name[] = "data";$/;"	v
tags:file_name	tests/filesys/base/syn-write.h	/^static const char file_name[] = "stuff";$/;"	v
tags:file_name	tests/filesys/extended/syn-rw.h	/^static const char file_name[] = "logfile";$/;"	v
tags:first	tests/threads/priority-donate-chain.c	/^    struct lock *first;$/;"	m	struct:lock_pair	typeref:struct:lock_pair::lock	file:
tags:free_map	filesys/free-map.c	/^static struct bitmap *free_map;      \/* Free map, one bit per sector. *\/$/;"	v	typeref:struct:bitmap	file:
tags:free_map_allocate	filesys/free-map.c	/^free_map_allocate (size_t cnt, block_sector_t *sectorp)$/;"	f
tags:free_map_close	filesys/free-map.c	/^free_map_close (void) $/;"	f
tags:free_map_create	filesys/free-map.c	/^free_map_create (void) $/;"	f
tags:free_map_file	filesys/free-map.c	/^static struct file *free_map_file;   \/* Free map file. *\/$/;"	v	typeref:struct:file	file:
tags:free_map_init	filesys/free-map.c	/^free_map_init (void) $/;"	f
tags:free_map_open	filesys/free-map.c	/^free_map_open (void) $/;"	f
tags:free_map_release	filesys/free-map.c	/^free_map_release (block_sector_t sector, size_t cnt)$/;"	f
tags:functionptr	tests/userprog/bad-jump.c	/^typedef int (* volatile functionptr)(void);$/;"	t	file:
tags:gname	lib/ustar.c	/^    char gname[32];             \/* Group name, always null-terminated. *\/$/;"	m	struct:ustar_header	file:
tags:h_thread_func	tests/threads/priority-donate-sema.c	/^h_thread_func (void *ls_) $/;"	f	file:
tags:h_thread_func	tests/threads/priority-donate-sema.c	/^static thread_func h_thread_func;$/;"	v	file:
tags:handle_error	utils/squish-pty.c	/^handle_error (ssize_t retval, int *fd, bool fd_is_pty, const char *call)$/;"	f	file:
tags:handle_error	utils/squish-unix.c	/^handle_error (ssize_t retval, int *fd, bool fd_is_sock, const char *call)$/;"	f	file:
tags:hex-dump_SRC	examples/Makefile	/^hex-dump_SRC = hex-dump.c$/;"	m
tags:high_thread_func	tests/threads/priority-donate-nest.c	/^high_thread_func (void *lock_) $/;"	f	file:
tags:high_thread_func	tests/threads/priority-donate-nest.c	/^static thread_func high_thread_func;$/;"	v	file:
tags:histogram	tests/vm/child-sort.c	/^size_t histogram[256];$/;"	v
tags:histogram	tests/vm/page-merge-seq.c	/^size_t histogram[256];$/;"	v
tags:histogram	tests/vm/parallel-merge.c	/^size_t histogram[256];$/;"	v
tags:id	tests/threads/alarm-wait.c	/^    int id;                     \/* Sleeper ID. *\/$/;"	m	struct:sleep_thread	file:
tags:id	tests/threads/priority-fifo.c	/^    int id;                     \/* Sleeper ID. *\/$/;"	m	struct:simple_thread_data	file:
tags:init	tests/vm/page-merge-seq.c	/^init (void) $/;"	f	file:
tags:init	tests/vm/parallel-merge.c	/^init (void) $/;"	f	file:
tags:interloper_thread_func	tests/threads/priority-donate-chain.c	/^interloper_thread_func (void *arg_ UNUSED)$/;"	f	file:
tags:interloper_thread_func	tests/threads/priority-donate-chain.c	/^static thread_func interloper_thread_func;$/;"	v	file:
tags:intr_entry	threads/intr-stubs.S	/^intr_entry:$/;"	l
tags:intr_exit	threads/intr-stubs.S	/^intr_exit:$/;"	l
tags:intr_stub_func	threads/intr-stubs.h	/^typedef void intr_stub_func (void);$/;"	t
tags:intr_stubs	threads/intr-stubs.S	/^intr_stubs:$/;"	l
tags:iterations	tests/threads/alarm-simultaneous.c	/^    int iterations;             \/* Number of iterations per thread. *\/$/;"	m	struct:sleep_test	file:
tags:iterations	tests/threads/alarm-wait.c	/^    int iterations;             \/* Iterations counted so far. *\/$/;"	m	struct:sleep_thread	file:
tags:iterations	tests/threads/alarm-wait.c	/^    int iterations;             \/* Number of iterations per thread. *\/$/;"	m	struct:sleep_test	file:
tags:iterations	tests/threads/priority-fifo.c	/^    int iterations;             \/* Iterations so far. *\/$/;"	m	struct:simple_thread_data	file:
tags:l_thread_func	tests/threads/priority-donate-sema.c	/^l_thread_func (void *ls_) $/;"	f	file:
tags:l_thread_func	tests/threads/priority-donate-sema.c	/^static thread_func l_thread_func;$/;"	v	file:
tags:load_thread	tests/threads/mlfqs-fair.c	/^load_thread (void *ti_) $/;"	f	file:
tags:load_thread	tests/threads/mlfqs-load-60.c	/^load_thread (void *aux UNUSED) $/;"	f	file:
tags:load_thread	tests/threads/mlfqs-load-avg.c	/^load_thread (void *seq_no_) $/;"	f	file:
tags:lock	tests/threads/priority-condvar.c	/^static struct lock lock;$/;"	v	typeref:struct:lock	file:
tags:lock	tests/threads/priority-donate-sema.c	/^    struct lock lock;$/;"	m	struct:lock_and_sema	typeref:struct:lock_and_sema::lock	file:
tags:lock	tests/threads/priority-fifo.c	/^    struct lock *lock;          \/* Lock on output. *\/$/;"	m	struct:simple_thread_data	typeref:struct:simple_thread_data::lock	file:
tags:lock_and_sema	tests/threads/priority-donate-sema.c	/^struct lock_and_sema $/;"	s	file:
tags:lock_pair	tests/threads/priority-donate-chain.c	/^struct lock_pair$/;"	s	file:
tags:locks	tests/threads/priority-donate-nest.c	/^struct locks $/;"	s	file:
tags:m_thread_func	tests/threads/priority-donate-sema.c	/^m_thread_func (void *ls_) $/;"	f	file:
tags:m_thread_func	tests/threads/priority-donate-sema.c	/^static thread_func m_thread_func;$/;"	v	file:
tags:main	examples/hex-dump.c	/^main (int argc, char *argv[]) $/;"	f
tags:main	tests/filesys/base/child-syn-read.c	/^main (int argc, const char *argv[]) $/;"	f
tags:main	tests/filesys/base/child-syn-wrt.c	/^main (int argc, char *argv[])$/;"	f
tags:main	tests/filesys/extended/child-syn-rw.c	/^main (int argc, const char *argv[]) $/;"	f
tags:main	tests/userprog/child-close.c	/^main (int argc UNUSED, char *argv[]) $/;"	f
tags:main	tests/userprog/child-rox.c	/^main (int argc UNUSED, char *argv[]) $/;"	f
tags:main	tests/userprog/child-simple.c	/^main (void) $/;"	f
tags:main	tests/userprog/multi-recurse.c	/^main (int argc UNUSED, char *argv[]) $/;"	f
tags:main	tests/userprog/no-vm/multi-oom.c	/^main (int argc, char *argv[])$/;"	f
tags:main	tests/vm/child-linear.c	/^main (int argc, char *argv[])$/;"	f
tags:main	tests/vm/child-qsort-mm.c	/^main (int argc UNUSED, char *argv[]) $/;"	f
tags:main	tests/vm/child-qsort.c	/^main (int argc UNUSED, char *argv[]) $/;"	f
tags:main	tests/vm/child-sort.c	/^main (int argc UNUSED, char *argv[]) $/;"	f
tags:main	utils/setitimer-helper.c	/^main (int argc, char *argv[]) $/;"	f
tags:main	utils/squish-pty.c	/^main (int argc __attribute__ ((unused)), char *argv[])$/;"	f
tags:main	utils/squish-unix.c	/^main (int argc __attribute__ ((unused)), char *argv[])$/;"	f
tags:make_nonblocking	utils/squish-pty.c	/^make_nonblocking (int fd, bool nonblocking) $/;"	f	file:
tags:make_nonblocking	utils/squish-unix.c	/^make_nonblocking (int fd, bool nonblocking) $/;"	f	file:
tags:make_noncanon	utils/squish-pty.c	/^make_noncanon (int fd, int vmin, int vtime)$/;"	f	file:
tags:make_noncanon	utils/squish-unix.c	/^make_noncanon (int fd, int vmin, int vtime)$/;"	f	file:
tags:make_tree	tests/filesys/extended/mk-tree.c	/^make_tree (int at, int bt, int ct, int dt) $/;"	f
tags:medium_thread_func	tests/threads/priority-donate-nest.c	/^medium_thread_func (void *locks_) $/;"	f	file:
tags:medium_thread_func	tests/threads/priority-donate-nest.c	/^static thread_func medium_thread_func;$/;"	v	file:
tags:merge	tests/vm/page-merge-seq.c	/^merge (void) $/;"	f	file:
tags:merge	tests/vm/parallel-merge.c	/^merge (void) $/;"	f	file:
tags:name	lib/ustar.c	/^    char name[100];             \/* File name.  Null-terminated if room. *\/$/;"	m	struct:ustar_header	file:
tags:nice	tests/threads/mlfqs-fair.c	/^    int nice;$/;"	m	struct:thread_info	file:
tags:not_empty	devices/intq.h	/^    struct thread *not_empty;   \/* Thread waiting for not-empty condition. *\/$/;"	m	struct:intq	typeref:struct:intq::thread
tags:not_full	devices/intq.h	/^    struct thread *not_full;    \/* Thread waiting for not-full condition. *\/$/;"	m	struct:intq	typeref:struct:intq::thread
tags:op	tests/threads/priority-fifo.c	/^    int **op;                   \/* Output buffer position. *\/$/;"	m	struct:simple_thread_data	file:
tags:output_lock	tests/threads/alarm-wait.c	/^    struct lock output_lock;    \/* Lock protecting output buffer. *\/$/;"	m	struct:sleep_test	typeref:struct:sleep_test::lock	file:
tags:output_pos	tests/threads/alarm-simultaneous.c	/^    int *output_pos;            \/* Current position in output buffer. *\/$/;"	m	struct:sleep_test	file:
tags:output_pos	tests/threads/alarm-wait.c	/^    int *output_pos;            \/* Current position in output buffer. *\/$/;"	m	struct:sleep_test	file:
tags:parallel_merge	tests/vm/parallel-merge.c	/^parallel_merge (const char *child_name, int exit_status)$/;"	f
tags:priority_condvar_thread	tests/threads/priority-condvar.c	/^priority_condvar_thread (void *aux UNUSED) $/;"	f	file:
tags:priority_condvar_thread	tests/threads/priority-condvar.c	/^static thread_func priority_condvar_thread;$/;"	v	file:
tags:priority_sema_thread	tests/threads/priority-sema.c	/^priority_sema_thread (void *aux UNUSED) $/;"	f	file:
tags:priority_sema_thread	tests/threads/priority-sema.c	/^static thread_func priority_sema_thread;$/;"	v	file:
tags:relay	utils/squish-pty.c	/^relay (int pty, int dead_child_fd) $/;"	f	file:
tags:relay	utils/squish-unix.c	/^relay (int sock) $/;"	f	file:
tags:remove_tree	tests/filesys/extended/dir-rm-tree.c	/^remove_tree (int at, int bt, int ct, int dt) $/;"	f	file:
tags:return_block_size	tests/filesys/extended/grow-file-size.c	/^return_block_size (void) $/;"	f	file:
tags:return_block_size	tests/filesys/extended/grow-tell.c	/^return_block_size (void) $/;"	f	file:
tags:romimage	utils/pintos	/^romimage: file=\\$BXSHARE\/BIOS-bochs-latest$/;"	l
tags:second	tests/threads/priority-donate-chain.c	/^    struct lock *second;$/;"	m	struct:lock_pair	typeref:struct:lock_pair::lock	file:
tags:sema	tests/threads/priority-donate-sema.c	/^    struct semaphore sema;$/;"	m	struct:lock_and_sema	typeref:struct:lock_and_sema::semaphore	file:
tags:sema	tests/threads/priority-sema.c	/^static struct semaphore sema;$/;"	v	typeref:struct:semaphore	file:
tags:seq_test	tests/filesys/seq-test.c	/^seq_test (const char *file_name, void *buf, size_t size, size_t initial_size,$/;"	f
tags:set_loader	utils/pintos-mkdisk	/^sub set_loader {$/;"	s
tags:set_no_loader	utils/pintos-mkdisk	/^sub set_no_loader {$/;"	s
tags:sigchld_handler	utils/squish-pty.c	/^sigchld_handler (int signo __attribute__ ((unused))) $/;"	f	file:
tags:sigchld_handler	utils/squish-unix.c	/^sigchld_handler (int signo __attribute__ ((unused))) $/;"	f	file:
tags:simple_thread_data	tests/threads/priority-fifo.c	/^struct simple_thread_data $/;"	s	file:
tags:simple_thread_func	tests/threads/priority-fifo.c	/^simple_thread_func (void *data_) $/;"	f	file:
tags:simple_thread_func	tests/threads/priority-fifo.c	/^static thread_func simple_thread_func;$/;"	v	file:
tags:simple_thread_func	tests/threads/priority-preempt.c	/^simple_thread_func (void *aux UNUSED) $/;"	f	file:
tags:simple_thread_func	tests/threads/priority-preempt.c	/^static thread_func simple_thread_func;$/;"	v	file:
tags:sleep_test	tests/threads/alarm-simultaneous.c	/^struct sleep_test $/;"	s	file:
tags:sleep_test	tests/threads/alarm-wait.c	/^struct sleep_test $/;"	s	file:
tags:sleep_thread	tests/threads/alarm-wait.c	/^struct sleep_thread $/;"	s	file:
tags:sleeper	tests/threads/alarm-simultaneous.c	/^sleeper (void *test_) $/;"	f	file:
tags:sleeper	tests/threads/alarm-wait.c	/^sleeper (void *t_) $/;"	f	file:
tags:sort_chunks	tests/vm/page-merge-seq.c	/^sort_chunks (void)$/;"	f	file:
tags:sort_chunks	tests/vm/parallel-merge.c	/^sort_chunks (const char *subprocess, int exit_status)$/;"	f	file:
tags:spawn_child	tests/userprog/no-vm/multi-oom.c	/^spawn_child (int c, enum child_termination_mode mode)$/;"	f	file:
tags:start	tests/threads/alarm-simultaneous.c	/^    int64_t start;              \/* Current time at start of test. *\/$/;"	m	struct:sleep_test	file:
tags:start	tests/threads/alarm-wait.c	/^    int64_t start;              \/* Current time at start of test. *\/$/;"	m	struct:sleep_test	file:
tags:start_time	tests/threads/mlfqs-fair.c	/^    int64_t start_time;$/;"	m	struct:thread_info	file:
tags:start_time	tests/threads/mlfqs-load-60.c	/^static int64_t start_time;$/;"	v	file:
tags:start_time	tests/threads/mlfqs-load-avg.c	/^static int64_t start_time;$/;"	v	file:
tags:test	tests/threads/alarm-wait.c	/^    struct sleep_test *test;     \/* Info shared between all threads. *\/$/;"	m	struct:sleep_thread	typeref:struct:sleep_thread::sleep_test	file:
tags:test_alarm_multiple	tests/threads/alarm-wait.c	/^test_alarm_multiple (void) $/;"	f
tags:test_alarm_negative	tests/threads/alarm-negative.c	/^test_alarm_negative (void) $/;"	f
tags:test_alarm_priority	tests/threads/alarm-priority.c	/^test_alarm_priority (void) $/;"	f
tags:test_alarm_simultaneous	tests/threads/alarm-simultaneous.c	/^test_alarm_simultaneous (void) $/;"	f
tags:test_alarm_single	tests/threads/alarm-wait.c	/^test_alarm_single (void) $/;"	f
tags:test_alarm_zero	tests/threads/alarm-zero.c	/^test_alarm_zero (void) $/;"	f
tags:test_main	tests/filesys/base/syn-read.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/base/syn-remove.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/base/syn-write.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-empty-name.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-mk-tree.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-mkdir.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-open.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-over-file.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-rm-cwd.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-rm-parent.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-rm-root.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-rm-tree.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-rmdir.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-under-file.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/dir-vine.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/grow-file-size.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/grow-sparse.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/grow-tell.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/grow-two-files.c	/^test_main (void) $/;"	f
tags:test_main	tests/filesys/extended/syn-rw.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/bad-jump.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/bad-jump2.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/bad-read.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/bad-read2.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/bad-write.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/bad-write2.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/child-bad.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/close-bad-fd.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/close-normal.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/close-stdin.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/close-stdout.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/close-twice.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/create-bad-ptr.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/create-bound.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/create-empty.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/create-exists.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/create-long.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/create-normal.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/create-null.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/exec-arg.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/exec-bad-ptr.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/exec-bound-2.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/exec-bound-3.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/exec-bound.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/exec-missing.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/exec-multiple.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/exec-once.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/multi-child-fd.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/open-bad-ptr.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/open-boundary.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/open-empty.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/open-missing.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/open-normal.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/open-null.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/open-twice.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/read-bad-fd.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/read-bad-ptr.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/read-boundary.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/read-normal.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/read-stdout.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/read-zero.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/rox-simple.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/sc-bad-arg.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/sc-bad-sp.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/sc-boundary-2.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/sc-boundary-3.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/sc-boundary.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/wait-bad-pid.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/wait-killed.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/wait-simple.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/wait-twice.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/write-bad-fd.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/write-bad-ptr.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/write-boundary.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/write-normal.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/write-stdin.c	/^test_main (void) $/;"	f
tags:test_main	tests/userprog/write-zero.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/child-inherit.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/child-mm-wrt.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-bad-fd.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/mmap-clean.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-close.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-exit.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-inherit.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-misalign.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/mmap-null.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/mmap-over-code.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/mmap-over-data.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/mmap-over-stk.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/mmap-overlap.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-read.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-remove.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-shuffle.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-twice.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-unmap.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-write.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/mmap-zero.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/page-linear.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/page-merge-mm.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/page-merge-par.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/page-merge-seq.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/page-merge-stk.c	/^test_main (void) $/;"	f
tags:test_main	tests/vm/page-parallel.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/page-shuffle.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/pt-bad-addr.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/pt-bad-read.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/pt-big-stk-obj.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/pt-grow-bad.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/pt-grow-pusha.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/pt-grow-stack.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/pt-grow-stk-sc.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/pt-write-code-2.c	/^test_main (void)$/;"	f
tags:test_main	tests/vm/pt-write-code.c	/^test_main (void)$/;"	f
tags:test_mlfqs_block	tests/threads/mlfqs-block.c	/^test_mlfqs_block (void) $/;"	f
tags:test_mlfqs_fair	tests/threads/mlfqs-fair.c	/^test_mlfqs_fair (int thread_cnt, int nice_min, int nice_step)$/;"	f	file:
tags:test_mlfqs_fair_2	tests/threads/mlfqs-fair.c	/^test_mlfqs_fair_2 (void) $/;"	f
tags:test_mlfqs_fair_20	tests/threads/mlfqs-fair.c	/^test_mlfqs_fair_20 (void) $/;"	f
tags:test_mlfqs_load_1	tests/threads/mlfqs-load-1.c	/^test_mlfqs_load_1 (void) $/;"	f
tags:test_mlfqs_load_60	tests/threads/mlfqs-load-60.c	/^test_mlfqs_load_60 (void) $/;"	f
tags:test_mlfqs_load_avg	tests/threads/mlfqs-load-avg.c	/^test_mlfqs_load_avg (void) $/;"	f
tags:test_mlfqs_nice_10	tests/threads/mlfqs-fair.c	/^test_mlfqs_nice_10 (void) $/;"	f
tags:test_mlfqs_nice_2	tests/threads/mlfqs-fair.c	/^test_mlfqs_nice_2 (void) $/;"	f
tags:test_mlfqs_recent_1	tests/threads/mlfqs-recent-1.c	/^test_mlfqs_recent_1 (void) $/;"	f
tags:test_priority_change	tests/threads/priority-change.c	/^test_priority_change (void) $/;"	f
tags:test_priority_condvar	tests/threads/priority-condvar.c	/^test_priority_condvar (void) $/;"	f
tags:test_priority_donate_chain	tests/threads/priority-donate-chain.c	/^test_priority_donate_chain (void) $/;"	f
tags:test_priority_donate_lower	tests/threads/priority-donate-lower.c	/^test_priority_donate_lower (void) $/;"	f
tags:test_priority_donate_multiple	tests/threads/priority-donate-multiple.c	/^test_priority_donate_multiple (void) $/;"	f
tags:test_priority_donate_multiple2	tests/threads/priority-donate-multiple2.c	/^test_priority_donate_multiple2 (void) $/;"	f
tags:test_priority_donate_nest	tests/threads/priority-donate-nest.c	/^test_priority_donate_nest (void) $/;"	f
tags:test_priority_donate_one	tests/threads/priority-donate-one.c	/^test_priority_donate_one (void) $/;"	f
tags:test_priority_donate_sema	tests/threads/priority-donate-sema.c	/^test_priority_donate_sema (void) $/;"	f
tags:test_priority_fifo	tests/threads/priority-fifo.c	/^test_priority_fifo (void) $/;"	f
tags:test_priority_preempt	tests/threads/priority-preempt.c	/^test_priority_preempt (void) $/;"	f
tags:test_priority_sema	tests/threads/priority-sema.c	/^test_priority_sema (void) $/;"	f
tags:test_sleep	tests/threads/alarm-simultaneous.c	/^test_sleep (int thread_cnt, int iterations) $/;"	f	file:
tags:test_sleep	tests/threads/alarm-wait.c	/^test_sleep (int thread_cnt, int iterations) $/;"	f	file:
tags:thread_info	tests/threads/mlfqs-fair.c	/^struct thread_info $/;"	s	file:
tags:tick_count	tests/threads/mlfqs-fair.c	/^    int tick_count;$/;"	m	struct:thread_info	file:
tags:tolower	lib/ctype.h	/^static inline int tolower (int c) { return isupper (c) ? c - 'A' + 'a' : c; }$/;"	f
tags:toupper	lib/ctype.h	/^static inline int toupper (int c) { return islower (c) ? c - 'a' + 'A' : c; }$/;"	f
tags:try_write	tests/userprog/child-rox.c	/^try_write (void) $/;"	f	file:
tags:uname	lib/ustar.c	/^    char uname[32];             \/* User name, always null-terminated. *\/$/;"	m	struct:ustar_header	file:
tags:usage	utils/pintos-mkdisk	/^sub usage {$/;"	s
tags:verify	tests/vm/page-merge-seq.c	/^verify (void) $/;"	f	file:
tags:verify	tests/vm/parallel-merge.c	/^verify (void) $/;"	f	file:
tags:vgaromimage	utils/pintos	/^vgaromimage: file=\\$BXSHARE\/VGABIOS-lgpl-latest$/;"	l
tags:wait_sema	tests/threads/alarm-priority.c	/^static struct semaphore wait_sema;$/;"	v	typeref:struct:semaphore	file:
tags:wake_time	tests/threads/alarm-priority.c	/^static int64_t wake_time;$/;"	v	file:
tags:wrap_open	tests/filesys/extended/dir-rm-cwd.c	/^wrap_open (const char *name) $/;"	f	file:
tags:write_some_bytes	tests/filesys/extended/grow-two-files.c	/^write_some_bytes (const char *file_name, int fd, const char *buf, size_t *ofs) $/;"	f	file:
tags:x	tests/vm/mmap-over-data.c	/^static char x;$/;"	v	file:
tags:zero	threads/intr-stubs.S	/^#define zero                                    \\$/;"	d
tests/arc4.c:  s = arc4->s;
tests/arc4.c:  arc4->i = arc4->j = 0;
tests/arc4.c:  s = arc4->s;
tests/arc4.c:  i = arc4->i;
tests/arc4.c:  j = arc4->j;
tests/arc4.c:  while (size-- > 0)
tests/arc4.c:  arc4->i = i;
tests/arc4.c:  arc4->j = j;
tests/cksum.c:  for (i = n; i > 0; --i)
tests/cksum.pm:    for my $i (0...$n - 1) {
tests/cksum.pm:    sysread (FILE, $data, -s FILE) == -s FILE or die "$file: read: $!\n";
tests/lib.c:  vsnprintf (buf + strlen (buf), sizeof buf - strlen (buf), format, args);
tests/lib.c:  strlcpy (buf + strlen (buf), suffix, sizeof buf - strlen (buf));
tests/lib.c:      size_t j = i + random_ulong () % (cnt - i);
tests/lib.c:  /* Read the file block-by-block, comparing data as we go. */
tests/lib.c:      block_size = size - ofs;
tests/lib.c:       "from expected.", j - i, ofs + i, file_name);
tests/lib.c:  show_cnt = j - i;
tests/lib.c:  if (j - i > 64) 
tests/lib.c:        "from expected", j - i, ofs + i, file_name);
tests/lib.h:   may include printf-style arguments.  Logs the message, then
tests/lib.h:     - SUCCESS must not have side effects that affect the
tests/lib.h:     - The message must not have side effects of its own, because
tests/lib.pm:    my (@a) = 0...$cnt - 1;
tests/lib.pm:    for my $i (0...$cnt - 1) {
tests/lib.pm:	my ($j) = $i + random_ulong () % ($cnt - $i);
tests/make-grade:	push (@rubrics, "\t$_"), next if /^-/;
tests/make-grade:    push (@rubrics, "\t- Section summary.");
tests/make-grade:    push (@summary, sprintf ("%-45s %3d/%3d %5.1f%%/%5.1f%%",
tests/make-grade:  = "--------------------------------------------- --- --- ------ ------";
tests/make-grade:	 sprintf ("%-45s %3s %3s %6s %6s",
tests/make-grade:      sprintf ("%-45s %3s %3s %5.1f%%/%5.1f%%",
tests/make-grade:    push (@overall, "ALL TESTED PASSED -- PERFECT SCORE");
tests/make-grade:my (@divider) = ('', '- ' x 38, '');
tests/Make.tests:# -*- makefile -*-
tests/Make.tests:	rm -f $(OUTPUTS) $(ERRORS) $(RESULTS) 
tests/Make.tests:	$(SRCDIR)/tests/make-grade $(SRCDIR) $< $(GRADING_FILE) | tee $@
tests/Make.tests:	@COUNT="`egrep '^(pass|FAIL) ' $< | wc -l | sed 's/[ 	]//g;'`"; \
tests/Make.tests:	FAILURES="`egrep '^FAIL ' $< | wc -l | sed 's/[ 	]//g;'`"; \
tests/Make.tests:		if echo PASS | cmp -s $$d.result -; then	\
tests/Make.tests:TESTCMD = pintos -v -k -T $(TIMEOUT)
tests/Make.tests:TESTCMD += $(foreach file,$(PUTFILES),-p $(file) -a $(notdir $(file)))
tests/Make.tests:TESTCMD += --swap-size=4
tests/Make.tests:TESTCMD += -- -q
tests/Make.tests:TESTCMD += -f
tests/Make.tests:	perl -I$(SRCDIR) $< $* $@
tests/tests.pm:if ($test =~ /^(.*)-persistence$/) {
tests/tests.pm:	my ($addrs) = $stack_line[0] =~ /Call stack:((?: 0x[0-9a-f]+)+)/;
tests/tests.pm:	  if grep (hex ($_) < 0xc0000000, split (' ', $addrs)) > 0 && -e $test;
tests/tests.pm:    if ($panic =~ /sec_no \< d-\>capacity/) {
tests/tests.pm:    # Most output lines are prefixed by (test-name).  Eliminate this
tests/tests.pm:    my ($reboots) = grep (/Pintos booting/, @output) - 1;
tests/tests.pm:	$end = $i - 1, last if $output[$i] =~ /^Execution of '.*' complete.$/;
tests/tests.pm:	@output = grep (!/^[a-zA-Z0-9-_]+: exit\(\-?\d+\)$/, @output);
tests/tests.pm:	my (@expected) = split ("\n", $expected->{$key});
tests/tests.pm:	my ($d) = Algorithm::Diff->new (\@expected, \@output);
tests/tests.pm:	while ($d->Next ()) {
tests/tests.pm:	    my ($ef, $el, $af, $al) = $d->Get (qw (min1 max1 min2 max2));
tests/tests.pm:	    if ($d->Same ()) {
tests/tests.pm:		push (@diff, map ("  $_\n", $d->Items (1)));
tests/tests.pm:		push (@diff, map ("- $_\n", $d->Items (1))) if $d->Items (1);
tests/tests.pm:		push (@diff, map ("+ $_\n", $d->Items (2))) if $d->Items (2);
tests/tests.pm:	$msg .= "Differences in `diff -u' format:\n";
tests/tests.pm:#	- $FILE: Name of a host file containing the expected contents.
tests/tests.pm:#	- [$FILE, $OFFSET, $LENGTH]: An excerpt of host file $FILE
tests/tests.pm:#	- [$CONTENTS]: The literal expected file contents, as a string.
tests/tests.pm:#       - {SUBDIR}: A subdirectory, in the same form described here,
tests/tests.pm:    @output = grep (!/^[a-zA-Z0-9-_]+: exit\(\d+\)$/, @output);
tests/tests.pm:    $test_base_name =~ s%-persistence$%%;
tests/tests.pm:    $expected_hier->{$test_base_name} = $prereq_tests[0];
tests/tests.pm:    $expected_hier->{'tar'} = 'tests/filesys/extended/tar';
tests/tests.pm:	$length = length ($value->[0]);
tests/tests.pm:	syswrite ($file, $value->[0]) == $length
tests/tests.pm:	$length = $value->[2];
tests/tests.pm:	open ($file, '<', $value->[0]) or die "$value->[0]: open: $!\n";
tests/tests.pm:	die "$value->[0]: file is smaller than expected\n"
tests/tests.pm:	  if -s $file < $value->[1] + $length;
tests/tests.pm:	sysseek ($file, $value->[1], SEEK_SET);
tests/tests.pm:	$a_size -= $a_len;
tests/tests.pm:	$b_size -= $b_len;
tests/tests.pm:	$end = $start + $size if $end - $start > $size;
tests/tests.pm:	my ($n) = $end - $start;
tests/tests.pm:	for my $i ($start...$end - 1) {
tests/tests.pm:	    printf "%02x", ord (substr ($data, $i - $start, 1));
tests/tests.pm:	    print $i == $per_line / 2 - 1 ? '-' : ' ';
tests/tests.pm:	print "   " x ($per_line - $end);
tests/tests.pm:	print "|", " " x $start, $esc_data, " " x ($per_line - $end), "|";
tests/tests.pm:	    print +file_size ($fs{$name}), "-byte file";
tests/tests.pm:	$fs{$name} = [$value, 0, -s _];
tests/tests.pm:    return @$value > 1 ? $value->[2] : length ($value->[0]);
tests/tests.pm:# Reads the ustar-format tar file in $ARCHIVE
tests/Algorithm/Diff.pm:#          ^ ^^ ^^-- Incremented at will
tests/Algorithm/Diff.pm:#          | \+----- Incremented for non-trivial changes to features
tests/Algorithm/Diff.pm:#          \-------- Incremented for fundamental changes
tests/Algorithm/Diff.pm:# McIlroy-Hunt diff algorithm
tests/Algorithm/Diff.pm:# by Ned Konz, perl@bike-nomad.com
tests/Algorithm/Diff.pm:        my $element = $aCollection->[$index];
tests/Algorithm/Diff.pm:    if ( $high == -1 || $aValue > $array->[-1] )
tests/Algorithm/Diff.pm:        $found = $array->[$index];
tests/Algorithm/Diff.pm:            $high = $index - 1;
tests/Algorithm/Diff.pm:    $array->[$low] = $aValue;    # overwrite next larger
tests/Algorithm/Diff.pm:#   $a->[ $i ] == $b->[ $result[ $i ] ]
tests/Algorithm/Diff.pm:    # Check for bogus (non-ref) argument values
tests/Algorithm/Diff.pm:            and &$compare( $a->[$aStart], $b->[$bStart], @_ ) )
tests/Algorithm/Diff.pm:            $matchVector->[ $aStart++ ] = $bStart++;
tests/Algorithm/Diff.pm:            and &$compare( $a->[$aFinish], $b->[$bFinish], @_ ) )
tests/Algorithm/Diff.pm:            $matchVector->[ $aFinish-- ] = $bFinish--;
tests/Algorithm/Diff.pm:        $ai = &$keyGen( $a->[$i], @_ );
tests/Algorithm/Diff.pm:        if ( exists( $bMatches->{$ai} ) )
tests/Algorithm/Diff.pm:            for $j ( @{ $bMatches->{$ai} } )
tests/Algorithm/Diff.pm:                if ( $k and $thresh->[$k] > $j and $thresh->[ $k - 1 ] < $j )
tests/Algorithm/Diff.pm:                    $thresh->[$k] = $j;
tests/Algorithm/Diff.pm:                    $links->[$k] =
tests/Algorithm/Diff.pm:                      [ ( $k ? $links->[ $k - 1 ] : undef ), $i, $j ];
tests/Algorithm/Diff.pm:        for ( my $link = $links->[$#$thresh] ; $link ; $link = $link->[0] )
tests/Algorithm/Diff.pm:            $matchVector->[ $link->[1] ] = $link->[2];
tests/Algorithm/Diff.pm:    my $matchCallback     = $callbacks->{'MATCH'} || sub { };
tests/Algorithm/Diff.pm:    my $discardACallback  = $callbacks->{'DISCARD_A'} || sub { };
tests/Algorithm/Diff.pm:    my $finishedACallback = $callbacks->{'A_FINISHED'};
tests/Algorithm/Diff.pm:    my $discardBCallback  = $callbacks->{'DISCARD_B'} || sub { };
tests/Algorithm/Diff.pm:    my $finishedBCallback = $callbacks->{'B_FINISHED'};
tests/Algorithm/Diff.pm:        my $bLine = $matchVector->[$ai];
tests/Algorithm/Diff.pm:    my $matchCallback     = $callbacks->{'MATCH'} || sub { };
tests/Algorithm/Diff.pm:    my $discardACallback  = $callbacks->{'DISCARD_A'} || sub { };
tests/Algorithm/Diff.pm:    my $discardBCallback  = $callbacks->{'DISCARD_B'} || sub { };
tests/Algorithm/Diff.pm:    my $changeCallback    = $callbacks->{'CHANGE'};
tests/Algorithm/Diff.pm:    my $ma    = -1;
tests/Algorithm/Diff.pm:            &&  !defined $matchVector->[$ma]
tests/Algorithm/Diff.pm:        $mb = $matchVector->[$ma];
tests/Algorithm/Diff.pm:        if ( defined( $matchVector->[$i] ) )
tests/Algorithm/Diff.pm:            push ( @retval, $a->[$i] );
tests/Algorithm/Diff.pm:    my @am= grep defined $match->[$_], 0..$#$match;
tests/Algorithm/Diff.pm:        while(  @$am  &&  $ai == $am->[0]  &&  $bi == $bm->[0]  ) {
tests/Algorithm/Diff.pm:        $ai = $am->[0];
tests/Algorithm/Diff.pm:        $bi = $bm->[0];
tests/Algorithm/Diff.pm:        push @$hunk, [ '-', $_[0], $a->[ $_[0] ] ];
tests/Algorithm/Diff.pm:        push @$hunk, [ '+', $_[1], $b->[ $_[1] ] ];
tests/Algorithm/Diff.pm:    my $discard = sub { push ( @$retval, [ '-', $a->[ $_[0] ], "" ] ) };
tests/Algorithm/Diff.pm:    my $add = sub { push ( @$retval, [ '+', "", $b->[ $_[1] ] ] ) };
tests/Algorithm/Diff.pm:        push ( @$retval, [ 'c', $a->[ $_[0] ], $b->[ $_[1] ] ] );
tests/Algorithm/Diff.pm:        push ( @$retval, [ 'u', $a->[ $_[0] ], $b->[ $_[1] ] ] );
tests/Algorithm/Diff.pm:sub _Idx()  { 0 } # $me->[_Idx]: Ref to array of hunk indices
tests/Algorithm/Diff.pm:            # 1   # $me->[1]: Ref to first sequence
tests/Algorithm/Diff.pm:            # 2   # $me->[2]: Ref to second sequence
tests/Algorithm/Diff.pm:sub _End()  { 3 } # $me->[_End]: Diff between forward and reverse pos
tests/Algorithm/Diff.pm:sub _Same() { 4 } # $me->[_Same]: 1 if pos 1 contains unchanged items
tests/Algorithm/Diff.pm:sub _Base() { 5 } # $me->[_Base]: Added to range's min and max
tests/Algorithm/Diff.pm:sub _Pos()  { 6 } # $me->[_Pos]: Which hunk is currently selected
tests/Algorithm/Diff.pm:sub _Off()  { 7 } # $me->[_Off]: Offset into _Idx for current position
tests/Algorithm/Diff.pm:sub _Min() { -2 } # Added to _Off to get min instead of max+1
tests/Algorithm/Diff.pm:    return   if  $me->[_Pos];
tests/Algorithm/Diff.pm:    return $seq + $me->[_Off]
tests/Algorithm/Diff.pm:    for( $opts->{keyGen} ) {
tests/Algorithm/Diff.pm:    for( $opts->{keyGenArgs} ) {
tests/Algorithm/Diff.pm:    if(  0 == $cdif->[2]  &&  0 == $cdif->[3]  ) {
tests/Algorithm/Diff.pm:    my $me = bless \@obj, $us->getObjPkg();
tests/Algorithm/Diff.pm:    $me->Reset( 0 );
tests/Algorithm/Diff.pm:    $pos += $me->[_End]
tests/Algorithm/Diff.pm:        if  $pos < 0  ||  $me->[_End] <= $pos;
tests/Algorithm/Diff.pm:    $me->[_Pos]= $pos || !1;
tests/Algorithm/Diff.pm:    $me->[_Off]= 2*$pos - 1;
tests/Algorithm/Diff.pm:    my $oldBase= $me->[_Base];
tests/Algorithm/Diff.pm:    $me->[_Base]= 0+$base   if  defined $base;
tests/Algorithm/Diff.pm:    $you->Reset( $pos )   if  defined $pos;
tests/Algorithm/Diff.pm:    $you->Base( $base );
tests/Algorithm/Diff.pm:        my $pos= $me->[_Pos];
tests/Algorithm/Diff.pm:        $me->Reset( $new )
tests/Algorithm/Diff.pm:    return $me->[_Pos];
tests/Algorithm/Diff.pm:    my $pos= $me->Next(-$steps);
tests/Algorithm/Diff.pm:    $pos -= $me->[_End]   if  $pos;
tests/Algorithm/Diff.pm:    $me->_ChkPos();
tests/Algorithm/Diff.pm:    return 0   if  $me->[_Same] == ( 1 & $me->[_Pos] );
tests/Algorithm/Diff.pm:    my $off= $me->[_Off];
tests/Algorithm/Diff.pm:            if  $me->[_Idx][ $off + $seq + _Min ]
tests/Algorithm/Diff.pm:            <   $me->[_Idx][ $off + $seq ];
tests/Algorithm/Diff.pm:    $me->_ChkPos();
tests/Algorithm/Diff.pm:    my $off= $me->_ChkSeq($seq);
tests/Algorithm/Diff.pm:    $base= $me->[_Base] if !defined $base;
tests/Algorithm/Diff.pm:    return $base + $me->[_Idx][ $off + _Min ];
tests/Algorithm/Diff.pm:    $me->_ChkPos();
tests/Algorithm/Diff.pm:    my $off= $me->_ChkSeq($seq);
tests/Algorithm/Diff.pm:    $base= $me->[_Base] if !defined $base;
tests/Algorithm/Diff.pm:    return $base + $me->[_Idx][ $off ] -1;
tests/Algorithm/Diff.pm:    $me->_ChkPos();
tests/Algorithm/Diff.pm:    my $off = $me->_ChkSeq($seq);
tests/Algorithm/Diff.pm:        return  $me->[_Idx][ $off ]
tests/Algorithm/Diff.pm:            -   $me->[_Idx][ $off + _Min ];
tests/Algorithm/Diff.pm:    $base= $me->[_Base] if !defined $base;
tests/Algorithm/Diff.pm:    return  ( $base + $me->[_Idx][ $off + _Min ] )
tests/Algorithm/Diff.pm:        ..  ( $base + $me->[_Idx][ $off ] - 1 );
tests/Algorithm/Diff.pm:    $me->_ChkPos();
tests/Algorithm/Diff.pm:    my $off = $me->_ChkSeq($seq);
tests/Algorithm/Diff.pm:        return  $me->[_Idx][ $off ]
tests/Algorithm/Diff.pm:            -   $me->[_Idx][ $off + _Min ];
tests/Algorithm/Diff.pm:        @{$me->[$seq]}[
tests/Algorithm/Diff.pm:                $me->[_Idx][ $off + _Min ]
tests/Algorithm/Diff.pm:            ..  ( $me->[_Idx][ $off ] - 1 )
tests/Algorithm/Diff.pm:    $me->_ChkPos();
tests/Algorithm/Diff.pm:        if  $me->[_Same] != ( 1 & $me->[_Pos] );
tests/Algorithm/Diff.pm:    return $me->Items(1);
tests/Algorithm/Diff.pm:    $me->_ChkPos();
tests/Algorithm/Diff.pm:            if(     $word !~ /^(-?\d+)?([a-zA-Z]+)([12])?$/
tests/Algorithm/Diff.pm:                    ? $meth->( $me )
tests/Algorithm/Diff.pm:                    : $meth->( $me, $seq, $base )
tests/Algorithm/Diff.pm:Algorithm::Diff - Compute `intelligent' differences between two files / lists
tests/Algorithm/Diff.pm:    my $diff = Algorithm::Diff->new( \@seq1, \@seq2 );
tests/Algorithm/Diff.pm:    $diff->Base( 1 );   # Return line numbers, not indices
tests/Algorithm/Diff.pm:    while(  $diff->Next()  ) {
tests/Algorithm/Diff.pm:        next   if  $diff->Same();
tests/Algorithm/Diff.pm:        if(  ! $diff->Items(2)  ) {
tests/Algorithm/Diff.pm:                $diff->Get(qw( Min1 Max1 Max2 ));
tests/Algorithm/Diff.pm:        } elsif(  ! $diff->Items(1)  ) {
tests/Algorithm/Diff.pm:                $diff->Get(qw( Max1 Min2 Max2 ));
tests/Algorithm/Diff.pm:            $sep = "---\n";
tests/Algorithm/Diff.pm:                $diff->Get(qw( Min1 Max1 Min2 Max2 ));
tests/Algorithm/Diff.pm:        print "< $_"   for  $diff->Items(1);
tests/Algorithm/Diff.pm:        print "> $_"   for  $diff->Items(2);
tests/Algorithm/Diff.pm:(by Mark-Jason Dominus)
tests/Algorithm/Diff.pm:From there it's only a small step to get diff-like output:
tests/Algorithm/Diff.pm:    +   - +   +   - + + +
tests/Algorithm/Diff.pm:to generate C<diff>-like output.
tests/Algorithm/Diff.pm:This module now provides an object-oriented interface that uses less
tests/Algorithm/Diff.pm:    $diff = Algorithm::Diffs->new( \@seq1, \@seq2 );
tests/Algorithm/Diff.pm:    $diff = Algorithm::Diffs->new( \@seq1, \@seq2, \%opts );
tests/Algorithm/Diff.pm:    $obj        = Algorithm::Diff->new( \@seq1, \@seq2, [ \%opts ] );
tests/Algorithm/Diff.pm:    $pos        = $obj->Next(  [ $count : 1 ] );
tests/Algorithm/Diff.pm:    $revPos     = $obj->Prev(  [ $count : 1 ] );
tests/Algorithm/Diff.pm:    $obj        = $obj->Reset( [ $pos : 0 ] );
tests/Algorithm/Diff.pm:    $copy       = $obj->Copy(  [ $pos, [ $newBase ] ] );
tests/Algorithm/Diff.pm:    $oldBase    = $obj->Base(  [ $newBase ] );
tests/Algorithm/Diff.pm:    $bits       = $obj->Diff(  );
tests/Algorithm/Diff.pm:    @items|$cnt = $obj->Same(  );
tests/Algorithm/Diff.pm:    @items|$cnt = $obj->Items( $seqNum );
tests/Algorithm/Diff.pm:    @idxs |$cnt = $obj->Range( $seqNum, [ $base ] );
tests/Algorithm/Diff.pm:    $minIdx     = $obj->Min(   $seqNum, [ $base ] );
tests/Algorithm/Diff.pm:    $maxIdx     = $obj->Max(   $seqNum, [ $base ] );
tests/Algorithm/Diff.pm:    @values     = $obj->Get(   @names );
tests/Algorithm/Diff.pm:    $pos = $diff->Next();    # Move forward 1 hunk
tests/Algorithm/Diff.pm:    $pos = $diff->Next( 2 ); # Move forward 2 hunks
tests/Algorithm/Diff.pm:    $pos = $diff->Next(-5);  # Move backward 5 hunks
tests/Algorithm/Diff.pm:C<Prev($N)> is almost identical to C<Next(-$N)>; it moves to the $Nth
tests/Algorithm/Diff.pm:previous hunk.  On a 'reset' object, C<Prev()> [and C<Next(-1)>] move
tests/Algorithm/Diff.pm:hunks; -1 for the last hunk, -2 for the second-to-last, etc.
tests/Algorithm/Diff.pm:    $diff->Reset();     # Reset the object's position
tests/Algorithm/Diff.pm:    $diff->Reset($pos); # Move to the specified hunk
tests/Algorithm/Diff.pm:    $diff->Reset(1);    # Move to the first hunk
tests/Algorithm/Diff.pm:    $diff->Reset(-1);   # Move to the last hunk
tests/Algorithm/Diff.pm:C<< $diff->Reset()->Next(-1) >> to get the number of hunks.
tests/Algorithm/Diff.pm:    $copy = $diff->Copy( $newPos, $newBase );
tests/Algorithm/Diff.pm:    $copy = $diff->Copy($pos);
tests/Algorithm/Diff.pm:    $copy = $diff->Copy();
tests/Algorithm/Diff.pm:    $copy->Reset($pos);
tests/Algorithm/Diff.pm:    $copy = $diff->Copy()->Reset($pos);
tests/Algorithm/Diff.pm:    $copy = $diff->Copy();
tests/Algorithm/Diff.pm:    $copy->Base( 0 );
tests/Algorithm/Diff.pm:    $copy = $diff->Copy(undef,0);
tests/Algorithm/Diff.pm:    $copy = $diff->Copy(0);
tests/Algorithm/Diff.pm:    $copy = $diff->Copy()->Reset();
tests/Algorithm/Diff.pm:    $bits = $obj->Diff();
tests/Algorithm/Diff.pm:    $count = $diff->Items(2);
tests/Algorithm/Diff.pm:    @items = $diff->Items($seqNum);
tests/Algorithm/Diff.pm:C<< $diff->Items(1) >> will return an empty list (0 in a scalar conext).
tests/Algorithm/Diff.pm:If the current hunk contains only deletions, then C<< $diff->Items(2) >>
tests/Algorithm/Diff.pm:If the hunk contains replacements, then both C<< $diff->Items(1) >> and
tests/Algorithm/Diff.pm:C<< $diff->Items(2) >> will return different, non-empty lists.
tests/Algorithm/Diff.pm:    @items = $diff->Items(1);
tests/Algorithm/Diff.pm:    @items = $diff->Items(2);
tests/Algorithm/Diff.pm:    @items = $diff->Same();
tests/Algorithm/Diff.pm:    $count = $diff->Range( $seqNum );
tests/Algorithm/Diff.pm:    @indices = $diff->Range( $seqNum );
tests/Algorithm/Diff.pm:    @indices = $diff->Range( $seqNum, $base );
tests/Algorithm/Diff.pm:    @list = $diff->Items(2);
tests/Algorithm/Diff.pm:    @list = @seq2[ $diff->Range(2) ];
tests/Algorithm/Diff.pm:    @list = $diff->Items(1);
tests/Algorithm/Diff.pm:    @list = @seq1[ $diff->Range(1,0) ];
tests/Algorithm/Diff.pm:    $curBase = $diff->Base();
tests/Algorithm/Diff.pm:    $oldBase = $diff->Base($newBase);
tests/Algorithm/Diff.pm:    $min1 = $diff->Min(1);
tests/Algorithm/Diff.pm:    $min = $diff->Min( $seqNum, $base );
tests/Algorithm/Diff.pm:    ( $n, $x, $r ) = $diff->Get(qw( min1 max1 range1 ));
tests/Algorithm/Diff.pm:    @values = $diff->Get(qw( 0min2 1max2 range2 same base ));
tests/Algorithm/Diff.pm:    /^(-?\d+)?(min|max)[12]$/i
tests/Algorithm/Diff.pm:    $diff->Get('min1') == $diff->Min(1)
tests/Algorithm/Diff.pm:    $diff->Get('0min2') == $diff->Min(2,0)
tests/Algorithm/Diff.pm:      [ [ '-', 0, 'a' ] ],
tests/Algorithm/Diff.pm:      [ [ '-', 4, 'h' ],
tests/Algorithm/Diff.pm:      [ [ '-',  8, 'n' ],
tests/Algorithm/Diff.pm:        [ '-',  9, 'p' ],
tests/Algorithm/Diff.pm:position 0 of the first sequence should be deleted (C<->).  The second
tests/Algorithm/Diff.pm:Unix-utility I<sdiff> does:
tests/Algorithm/Diff.pm:    old        <     -
tests/Algorithm/Diff.pm:    -          >     new
tests/Algorithm/Diff.pm:(C<+>: Element added, C<->: Element removed, C<u>: Element unmodified,
tests/Algorithm/Diff.pm:be displayed side-by-side.
tests/Algorithm/Diff.pm:    ( [ '-', 'a', ''  ],
tests/Algorithm/Diff.pm:contains items C<$diff[0]> through C<$diff[2] - 1> of the first sequence
tests/Algorithm/Diff.pm:and contains items C<$diff[1]> through C<$diff[3] - 1> of the second
tests/Algorithm/Diff.pm:    @list1 = @a[ $cdiff[0] .. $cdiff[2]-1 ];
tests/Algorithm/Diff.pm:    @list2 = @b[ $cdiff[1] .. $cdiff[3]-1 ];
tests/Algorithm/Diff.pm:So the 1st, 3rd, 5th, etc. hunks (all odd-numbered hunks if you start
tests/Algorithm/Diff.pm:etc. hunks (all even-numbered hunks if you start counting from 1) all
tests/Algorithm/Diff.pm:    @hunk1a = @a[ 0 .. 0-1 ];
tests/Algorithm/Diff.pm:    @hunk1b = @b[ 0 .. 0-1 ];
tests/Algorithm/Diff.pm:And C<0..-1> returns the empty list.
tests/Algorithm/Diff.pm:        @hunk2a = @a[ $cdiff[2] .. $cdiff[4]-1 ];
tests/Algorithm/Diff.pm:        @hunk2b = @b[ $cdiff[3] .. $cdiff[5]-1 ];
tests/Algorithm/Diff.pm:        @hunk2a = @a[ 0 .. 1-1 ];
tests/Algorithm/Diff.pm:        @hunk2b = @b[ 0 .. 0-1 ];
tests/Algorithm/Diff.pm:        @hunk2b = @b[ 0 .. -1 ];
tests/Algorithm/Diff.pm:        @hunk3a = @a[ $cdiff[4] .. $cdiff[6]-1 ];
tests/Algorithm/Diff.pm:        @hunk3a = @b[ $cdiff[5] .. $cdiff[7]-1 ];
tests/Algorithm/Diff.pm:        @hunk3a = @a[ 1 .. 3-1 ];
tests/Algorithm/Diff.pm:        @hunk3a = @b[ 0 .. 2-1 ];
tests/Algorithm/Diff.pm:sequences one element at a time, calling an appropriate user-specified
tests/Algorithm/Diff.pm:        undef,     # default key-gen
tests/Algorithm/Diff.pm:        return shift()->{'ssn'};
tests/Algorithm/Diff.pm:    my $person1 = Person->new( name => 'Joe', ssn => '123-45-6789' );
tests/Algorithm/Diff.pm:    my $person2 = Person->new( name => 'Mary', ssn => '123-47-0000' );
tests/Algorithm/Diff.pm:    my $person3 = Person->new( name => 'Pete', ssn => '999-45-2222' );
tests/Algorithm/Diff.pm:    my $person4 = Person->new( name => 'Peggy', ssn => '123-45-9999' );
tests/Algorithm/Diff.pm:    my $person5 = Person->new( name => 'Frank', ssn => '000-45-9999' );
tests/Algorithm/Diff.pm:    my $array2 = [ $person1, $person3, $person4->clone(), $person5 ];
tests/Algorithm/Diff.pm:$person4 and $person4->clone() (which have the same name and SSN)
tests/Algorithm/Diff.pm:    my $array2 = [ $person1, $person3, $person4->clone(), $person5 ];
tests/Algorithm/Diff.pm:so would consider $person4 and $person4->clone() as equal.
tests/Algorithm/Diff.pm:If you pass these routines a non-reference and they expect a reference,
tests/Algorithm/Diff.pm:Parts Copyright (c) 2000-2004 Ned Konz.  All rights reserved.
tests/Algorithm/Diff.pm:Mark-Jason still maintains a mailing list.  To join a low-volume mailing
tests/Algorithm/Diff.pm:empty mail message to mjd-perl-diff-request@plover.com.
tests/Algorithm/Diff.pm:Mark-Jason Dominus, mjd-perl-diff@plover.com
tests/Algorithm/Diff.pm:Mark-Jason's, but Diff.pm's code was completely replaced.
tests/Algorithm/Diff.pm:CACM, vol.20, no.5, pp.350-353, May 1977, with a few
tests/Algorithm/Diff.pm:Much work was done by Ned Konz (perl@bike-nomad.com).
tests/filesys/create.inc:/* -*- c -*- */
tests/filesys/seq-test.c:#include "tests/filesys/seq-test.h"
tests/filesys/seq-test.c:      if (block_size > size - ofs)
tests/filesys/seq-test.c:        block_size = size - ofs;
tests/filesys/seq-test.h:#endif /* tests/filesys/seq-test.h */
tests/filesys/base/child-syn-read.c:/* Child process for syn-read test.
tests/filesys/base/child-syn-read.c:#include "tests/filesys/base/syn-read.h"
tests/filesys/base/child-syn-read.c:  test_name = "child-syn-read";
tests/filesys/base/child-syn-wrt.c:/* Child process for syn-read test.
tests/filesys/base/child-syn-wrt.c:#include "tests/filesys/base/syn-write.h"
tests/filesys/base/full.inc:/* -*- c -*- */
tests/filesys/base/full.inc:#include "tests/filesys/seq-test.h"
tests/filesys/base/lg-create.ck:# -*- perl -*-
tests/filesys/base/lg-create.ck:(lg-create) begin
tests/filesys/base/lg-create.ck:(lg-create) create "blargle"
tests/filesys/base/lg-create.ck:(lg-create) open "blargle" for verification
tests/filesys/base/lg-create.ck:(lg-create) verified contents of "blargle"
tests/filesys/base/lg-create.ck:(lg-create) close "blargle"
tests/filesys/base/lg-create.ck:(lg-create) end
tests/filesys/base/lg-full.ck:# -*- perl -*-
tests/filesys/base/lg-full.ck:(lg-full) begin
tests/filesys/base/lg-full.ck:(lg-full) create "quux"
tests/filesys/base/lg-full.ck:(lg-full) open "quux"
tests/filesys/base/lg-full.ck:(lg-full) writing "quux"
tests/filesys/base/lg-full.ck:(lg-full) close "quux"
tests/filesys/base/lg-full.ck:(lg-full) open "quux" for verification
tests/filesys/base/lg-full.ck:(lg-full) verified contents of "quux"
tests/filesys/base/lg-full.ck:(lg-full) close "quux"
tests/filesys/base/lg-full.ck:(lg-full) end
tests/filesys/base/lg-random.ck:# -*- perl -*-
tests/filesys/base/lg-random.ck:(lg-random) begin
tests/filesys/base/lg-random.ck:(lg-random) create "bazzle"
tests/filesys/base/lg-random.ck:(lg-random) open "bazzle"
tests/filesys/base/lg-random.ck:(lg-random) write "bazzle" in random order
tests/filesys/base/lg-random.ck:(lg-random) read "bazzle" in random order
tests/filesys/base/lg-random.ck:(lg-random) close "bazzle"
tests/filesys/base/lg-random.ck:(lg-random) end
tests/filesys/base/lg-seq-block.c:/* Writes out a fairly large file sequentially, one fixed-size
tests/filesys/base/lg-seq-block.c:#include "tests/filesys/base/seq-block.inc"
tests/filesys/base/lg-seq-block.ck:# -*- perl -*-
tests/filesys/base/lg-seq-block.ck:(lg-seq-block) begin
tests/filesys/base/lg-seq-block.ck:(lg-seq-block) create "noodle"
tests/filesys/base/lg-seq-block.ck:(lg-seq-block) open "noodle"
tests/filesys/base/lg-seq-block.ck:(lg-seq-block) writing "noodle"
tests/filesys/base/lg-seq-block.ck:(lg-seq-block) close "noodle"
tests/filesys/base/lg-seq-block.ck:(lg-seq-block) open "noodle" for verification
tests/filesys/base/lg-seq-block.ck:(lg-seq-block) verified contents of "noodle"
tests/filesys/base/lg-seq-block.ck:(lg-seq-block) close "noodle"
tests/filesys/base/lg-seq-block.ck:(lg-seq-block) end
tests/filesys/base/lg-seq-random.c:/* Writes out a fairly large file sequentially, one random-sized
tests/filesys/base/lg-seq-random.c:#include "tests/filesys/base/seq-random.inc"
tests/filesys/base/lg-seq-random.ck:# -*- perl -*-
tests/filesys/base/lg-seq-random.ck:(lg-seq-random) begin
tests/filesys/base/lg-seq-random.ck:(lg-seq-random) create "nibble"
tests/filesys/base/lg-seq-random.ck:(lg-seq-random) open "nibble"
tests/filesys/base/lg-seq-random.ck:(lg-seq-random) writing "nibble"
tests/filesys/base/lg-seq-random.ck:(lg-seq-random) close "nibble"
tests/filesys/base/lg-seq-random.ck:(lg-seq-random) open "nibble" for verification
tests/filesys/base/lg-seq-random.ck:(lg-seq-random) verified contents of "nibble"
tests/filesys/base/lg-seq-random.ck:(lg-seq-random) close "nibble"
tests/filesys/base/lg-seq-random.ck:(lg-seq-random) end
tests/filesys/base/Make.tests:# -*- makefile -*-
tests/filesys/base/Make.tests:tests/filesys/base_TESTS = $(addprefix tests/filesys/base/,lg-create	\
tests/filesys/base/Make.tests:lg-full lg-random lg-seq-block lg-seq-random sm-create sm-full		\
tests/filesys/base/Make.tests:sm-random sm-seq-block sm-seq-random syn-read syn-remove syn-write)
tests/filesys/base/Make.tests:tests/filesys/base/,child-syn-read child-syn-wrt)
tests/filesys/base/Make.tests:	$(eval $(prog)_SRC += $(prog).c tests/lib.c tests/filesys/seq-test.c))
tests/filesys/base/Make.tests:tests/filesys/base/syn-read_PUTFILES = tests/filesys/base/child-syn-read
tests/filesys/base/Make.tests:tests/filesys/base/syn-write_PUTFILES = tests/filesys/base/child-syn-wrt
tests/filesys/base/Make.tests:tests/filesys/base/syn-read.output: TIMEOUT = 300
tests/filesys/base/random.inc:/* -*- c -*- */
tests/filesys/base/Rubric:- Test basic support for small files.
tests/filesys/base/Rubric:1	sm-create
tests/filesys/base/Rubric:2	sm-full
tests/filesys/base/Rubric:2	sm-random
tests/filesys/base/Rubric:2	sm-seq-block
tests/filesys/base/Rubric:3	sm-seq-random
tests/filesys/base/Rubric:- Test basic support for large files.
tests/filesys/base/Rubric:1	lg-create
tests/filesys/base/Rubric:2	lg-full
tests/filesys/base/Rubric:2	lg-random
tests/filesys/base/Rubric:2	lg-seq-block
tests/filesys/base/Rubric:3	lg-seq-random
tests/filesys/base/Rubric:- Test synchronized multiprogram access to files.
tests/filesys/base/Rubric:4	syn-read
tests/filesys/base/Rubric:4	syn-write
tests/filesys/base/Rubric:2	syn-remove
tests/filesys/base/seq-block.inc:/* -*- c -*- */
tests/filesys/base/seq-block.inc:#include "tests/filesys/seq-test.h"
tests/filesys/base/seq-random.inc:/* -*- c -*- */
tests/filesys/base/seq-random.inc:#include "tests/filesys/seq-test.h"
tests/filesys/base/seq-random.inc:  random_init (-1);
tests/filesys/base/sm-create.ck:# -*- perl -*-
tests/filesys/base/sm-create.ck:(sm-create) begin
tests/filesys/base/sm-create.ck:(sm-create) create "blargle"
tests/filesys/base/sm-create.ck:(sm-create) open "blargle" for verification
tests/filesys/base/sm-create.ck:(sm-create) verified contents of "blargle"
tests/filesys/base/sm-create.ck:(sm-create) close "blargle"
tests/filesys/base/sm-create.ck:(sm-create) end
tests/filesys/base/sm-full.ck:# -*- perl -*-
tests/filesys/base/sm-full.ck:(sm-full) begin
tests/filesys/base/sm-full.ck:(sm-full) create "quux"
tests/filesys/base/sm-full.ck:(sm-full) open "quux"
tests/filesys/base/sm-full.ck:(sm-full) writing "quux"
tests/filesys/base/sm-full.ck:(sm-full) close "quux"
tests/filesys/base/sm-full.ck:(sm-full) open "quux" for verification
tests/filesys/base/sm-full.ck:(sm-full) verified contents of "quux"
tests/filesys/base/sm-full.ck:(sm-full) close "quux"
tests/filesys/base/sm-full.ck:(sm-full) end
tests/filesys/base/sm-random.ck:# -*- perl -*-
tests/filesys/base/sm-random.ck:(sm-random) begin
tests/filesys/base/sm-random.ck:(sm-random) create "bazzle"
tests/filesys/base/sm-random.ck:(sm-random) open "bazzle"
tests/filesys/base/sm-random.ck:(sm-random) write "bazzle" in random order
tests/filesys/base/sm-random.ck:(sm-random) read "bazzle" in random order
tests/filesys/base/sm-random.ck:(sm-random) close "bazzle"
tests/filesys/base/sm-random.ck:(sm-random) end
tests/filesys/base/sm-seq-block.c:/* Writes out a fairly small file sequentially, one fixed-size
tests/filesys/base/sm-seq-block.c:#include "tests/filesys/base/seq-block.inc"
tests/filesys/base/sm-seq-block.ck:# -*- perl -*-
tests/filesys/base/sm-seq-block.ck:(sm-seq-block) begin
tests/filesys/base/sm-seq-block.ck:(sm-seq-block) create "noodle"
tests/filesys/base/sm-seq-block.ck:(sm-seq-block) open "noodle"
tests/filesys/base/sm-seq-block.ck:(sm-seq-block) writing "noodle"
tests/filesys/base/sm-seq-block.ck:(sm-seq-block) close "noodle"
tests/filesys/base/sm-seq-block.ck:(sm-seq-block) open "noodle" for verification
tests/filesys/base/sm-seq-block.ck:(sm-seq-block) verified contents of "noodle"
tests/filesys/base/sm-seq-block.ck:(sm-seq-block) close "noodle"
tests/filesys/base/sm-seq-block.ck:(sm-seq-block) end
tests/filesys/base/sm-seq-random.c:/* Writes out a fairly large file sequentially, one random-sized
tests/filesys/base/sm-seq-random.c:#include "tests/filesys/base/seq-random.inc"
tests/filesys/base/sm-seq-random.ck:# -*- perl -*-
tests/filesys/base/sm-seq-random.ck:(sm-seq-random) begin
tests/filesys/base/sm-seq-random.ck:(sm-seq-random) create "nibble"
tests/filesys/base/sm-seq-random.ck:(sm-seq-random) open "nibble"
tests/filesys/base/sm-seq-random.ck:(sm-seq-random) writing "nibble"
tests/filesys/base/sm-seq-random.ck:(sm-seq-random) close "nibble"
tests/filesys/base/sm-seq-random.ck:(sm-seq-random) open "nibble" for verification
tests/filesys/base/sm-seq-random.ck:(sm-seq-random) verified contents of "nibble"
tests/filesys/base/sm-seq-random.ck:(sm-seq-random) close "nibble"
tests/filesys/base/sm-seq-random.ck:(sm-seq-random) end
tests/filesys/base/syn-read.c:#include "tests/filesys/base/syn-read.h"
tests/filesys/base/syn-read.c:  exec_children ("child-syn-read", children, CHILD_CNT);
tests/filesys/base/syn-read.ck:# -*- perl -*-
tests/filesys/base/syn-read.ck:(syn-read) begin
tests/filesys/base/syn-read.ck:(syn-read) create "data"
tests/filesys/base/syn-read.ck:(syn-read) open "data"
tests/filesys/base/syn-read.ck:(syn-read) write "data"
tests/filesys/base/syn-read.ck:(syn-read) close "data"
tests/filesys/base/syn-read.ck:(syn-read) exec child 1 of 10: "child-syn-read 0"
tests/filesys/base/syn-read.ck:(syn-read) exec child 2 of 10: "child-syn-read 1"
tests/filesys/base/syn-read.ck:(syn-read) exec child 3 of 10: "child-syn-read 2"
tests/filesys/base/syn-read.ck:(syn-read) exec child 4 of 10: "child-syn-read 3"
tests/filesys/base/syn-read.ck:(syn-read) exec child 5 of 10: "child-syn-read 4"
tests/filesys/base/syn-read.ck:(syn-read) exec child 6 of 10: "child-syn-read 5"
tests/filesys/base/syn-read.ck:(syn-read) exec child 7 of 10: "child-syn-read 6"
tests/filesys/base/syn-read.ck:(syn-read) exec child 8 of 10: "child-syn-read 7"
tests/filesys/base/syn-read.ck:(syn-read) exec child 9 of 10: "child-syn-read 8"
tests/filesys/base/syn-read.ck:(syn-read) exec child 10 of 10: "child-syn-read 9"
tests/filesys/base/syn-read.ck:(syn-read) wait for child 1 of 10 returned 0 (expected 0)
tests/filesys/base/syn-read.ck:(syn-read) wait for child 2 of 10 returned 1 (expected 1)
tests/filesys/base/syn-read.ck:(syn-read) wait for child 3 of 10 returned 2 (expected 2)
tests/filesys/base/syn-read.ck:(syn-read) wait for child 4 of 10 returned 3 (expected 3)
tests/filesys/base/syn-read.ck:(syn-read) wait for child 5 of 10 returned 4 (expected 4)
tests/filesys/base/syn-read.ck:(syn-read) wait for child 6 of 10 returned 5 (expected 5)
tests/filesys/base/syn-read.ck:(syn-read) wait for child 7 of 10 returned 6 (expected 6)
tests/filesys/base/syn-read.ck:(syn-read) wait for child 8 of 10 returned 7 (expected 7)
tests/filesys/base/syn-read.ck:(syn-read) wait for child 9 of 10 returned 8 (expected 8)
tests/filesys/base/syn-read.ck:(syn-read) wait for child 10 of 10 returned 9 (expected 9)
tests/filesys/base/syn-read.ck:(syn-read) end
tests/filesys/base/syn-read.h:#endif /* tests/filesys/base/syn-read.h */
tests/filesys/base/syn-remove.ck:# -*- perl -*-
tests/filesys/base/syn-remove.ck:(syn-remove) begin
tests/filesys/base/syn-remove.ck:(syn-remove) create "deleteme"
tests/filesys/base/syn-remove.ck:(syn-remove) open "deleteme"
tests/filesys/base/syn-remove.ck:(syn-remove) remove "deleteme"
tests/filesys/base/syn-remove.ck:(syn-remove) write "deleteme"
tests/filesys/base/syn-remove.ck:(syn-remove) seek "deleteme" to 0
tests/filesys/base/syn-remove.ck:(syn-remove) read "deleteme"
tests/filesys/base/syn-remove.ck:(syn-remove) close "deleteme"
tests/filesys/base/syn-remove.ck:(syn-remove) end
tests/filesys/base/syn-write.c:#include "tests/filesys/base/syn-write.h"
tests/filesys/base/syn-write.c:  exec_children ("child-syn-wrt", children, CHILD_CNT);
tests/filesys/base/syn-write.ck:# -*- perl -*-
tests/filesys/base/syn-write.ck:(syn-write) begin
tests/filesys/base/syn-write.ck:(syn-write) create "stuff"
tests/filesys/base/syn-write.ck:(syn-write) exec child 1 of 10: "child-syn-wrt 0"
tests/filesys/base/syn-write.ck:(syn-write) exec child 2 of 10: "child-syn-wrt 1"
tests/filesys/base/syn-write.ck:(syn-write) exec child 3 of 10: "child-syn-wrt 2"
tests/filesys/base/syn-write.ck:(syn-write) exec child 4 of 10: "child-syn-wrt 3"
tests/filesys/base/syn-write.ck:(syn-write) exec child 5 of 10: "child-syn-wrt 4"
tests/filesys/base/syn-write.ck:(syn-write) exec child 6 of 10: "child-syn-wrt 5"
tests/filesys/base/syn-write.ck:(syn-write) exec child 7 of 10: "child-syn-wrt 6"
tests/filesys/base/syn-write.ck:(syn-write) exec child 8 of 10: "child-syn-wrt 7"
tests/filesys/base/syn-write.ck:(syn-write) exec child 9 of 10: "child-syn-wrt 8"
tests/filesys/base/syn-write.ck:(syn-write) exec child 10 of 10: "child-syn-wrt 9"
tests/filesys/base/syn-write.ck:(syn-write) wait for child 1 of 10 returned 0 (expected 0)
tests/filesys/base/syn-write.ck:(syn-write) wait for child 2 of 10 returned 1 (expected 1)
tests/filesys/base/syn-write.ck:(syn-write) wait for child 3 of 10 returned 2 (expected 2)
tests/filesys/base/syn-write.ck:(syn-write) wait for child 4 of 10 returned 3 (expected 3)
tests/filesys/base/syn-write.ck:(syn-write) wait for child 5 of 10 returned 4 (expected 4)
tests/filesys/base/syn-write.ck:(syn-write) wait for child 6 of 10 returned 5 (expected 5)
tests/filesys/base/syn-write.ck:(syn-write) wait for child 7 of 10 returned 6 (expected 6)
tests/filesys/base/syn-write.ck:(syn-write) wait for child 8 of 10 returned 7 (expected 7)
tests/filesys/base/syn-write.ck:(syn-write) wait for child 9 of 10 returned 8 (expected 8)
tests/filesys/base/syn-write.ck:(syn-write) wait for child 10 of 10 returned 9 (expected 9)
tests/filesys/base/syn-write.ck:(syn-write) open "stuff"
tests/filesys/base/syn-write.ck:(syn-write) read "stuff"
tests/filesys/base/syn-write.ck:(syn-write) end
tests/filesys/base/syn-write.h:#endif /* tests/filesys/base/syn-write.h */
tests/filesys/extended/child-syn-rw.c:/* Child process for syn-rw.
tests/filesys/extended/child-syn-rw.c:   and calling yield whenever we receive a 0-byte read.) */
tests/filesys/extended/child-syn-rw.c:#include "tests/filesys/extended/syn-rw.h"
tests/filesys/extended/child-syn-rw.c:  test_name = "child-syn-rw";
tests/filesys/extended/child-syn-rw.c:      int bytes_read = read (fd, buf2 + ofs, sizeof buf2 - ofs);
tests/filesys/extended/child-syn-rw.c:      CHECK (bytes_read >= -1 && bytes_read <= (int) (sizeof buf2 - ofs),
tests/filesys/extended/child-syn-rw.c:             "%zu-byte read on \"%s\" returned invalid value of %d",
tests/filesys/extended/child-syn-rw.c:             sizeof buf2 - ofs, file_name, bytes_read);
tests/filesys/extended/dir-empty-name-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-empty-name.ck:# -*- perl -*-
tests/filesys/extended/dir-empty-name.ck:(dir-empty-name) begin
tests/filesys/extended/dir-empty-name.ck:(dir-empty-name) mkdir "" (must return false)
tests/filesys/extended/dir-empty-name.ck:(dir-empty-name) end
tests/filesys/extended/dir-mk-tree-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-mk-tree-persistence.ck:		$tree->{$a}{$b}{$c}{$d} = [''];
tests/filesys/extended/dir-mk-tree.c:#include "tests/filesys/extended/mk-tree.h"
tests/filesys/extended/dir-mk-tree.ck:# -*- perl -*-
tests/filesys/extended/dir-mk-tree.ck:(dir-mk-tree) begin
tests/filesys/extended/dir-mk-tree.ck:(dir-mk-tree) creating /0/0/0/0 through /3/2/2/3...
tests/filesys/extended/dir-mk-tree.ck:(dir-mk-tree) open "/0/2/0/3"
tests/filesys/extended/dir-mk-tree.ck:(dir-mk-tree) close "/0/2/0/3"
tests/filesys/extended/dir-mk-tree.ck:(dir-mk-tree) end
tests/filesys/extended/dir-mkdir-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-mkdir.ck:# -*- perl -*-
tests/filesys/extended/dir-mkdir.ck:(dir-mkdir) begin
tests/filesys/extended/dir-mkdir.ck:(dir-mkdir) mkdir "a"
tests/filesys/extended/dir-mkdir.ck:(dir-mkdir) create "a/b"
tests/filesys/extended/dir-mkdir.ck:(dir-mkdir) chdir "a"
tests/filesys/extended/dir-mkdir.ck:(dir-mkdir) open "b"
tests/filesys/extended/dir-mkdir.ck:(dir-mkdir) end
tests/filesys/extended/dir-open-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-open.c:  CHECK (retval == -1,
tests/filesys/extended/dir-open.c:         "write \"xyzzy\" (must return -1, actually %d)", retval);
tests/filesys/extended/dir-open.ck:# -*- perl -*-
tests/filesys/extended/dir-open.ck:(dir-open) begin
tests/filesys/extended/dir-open.ck:(dir-open) mkdir "xyzzy"
tests/filesys/extended/dir-open.ck:(dir-open) open "xyzzy"
tests/filesys/extended/dir-open.ck:(dir-open) write "xyzzy"
tests/filesys/extended/dir-open.ck:(dir-open) write "xyzzy" (must return -1, actually -1)
tests/filesys/extended/dir-open.ck:(dir-open) end
tests/filesys/extended/dir-open.ck:dir-open: exit(0)
tests/filesys/extended/dir-open.ck:(dir-open) begin
tests/filesys/extended/dir-open.ck:(dir-open) mkdir "xyzzy"
tests/filesys/extended/dir-open.ck:(dir-open) open "xyzzy"
tests/filesys/extended/dir-open.ck:(dir-open) write "xyzzy"
tests/filesys/extended/dir-open.ck:dir-open: exit(-1)
tests/filesys/extended/dir-over-file-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-over-file.ck:# -*- perl -*-
tests/filesys/extended/dir-over-file.ck:(dir-over-file) begin
tests/filesys/extended/dir-over-file.ck:(dir-over-file) mkdir "abc"
tests/filesys/extended/dir-over-file.ck:(dir-over-file) create "abc" (must return false)
tests/filesys/extended/dir-over-file.ck:(dir-over-file) end
tests/filesys/extended/dir-rm-cwd-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-rm-cwd-persistence.ck:my ($cwd_removable) = read_text_file ("tests/filesys/extended/can-rmdir-cwd");
tests/filesys/extended/dir-rm-cwd.c:      CHECK (open ("/a") == -1, "open \"/a\" (must fail)");
tests/filesys/extended/dir-rm-cwd.c:      CHECK (open (".") == -1, "open \".\" (must fail)");
tests/filesys/extended/dir-rm-cwd.c:      CHECK (open ("..") == -1, "open \"..\" (must fail)");
tests/filesys/extended/dir-rm-cwd.ck:# -*- perl -*-
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) begin
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) open "/"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) mkdir "a"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) open "/a"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) verify "/a" is empty
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) "/" and "/a" must have different inumbers
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) chdir "a"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) try to remove "/a"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) remove failed
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) try to remove "../a" (must fail)
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) try to remove ".././a" (must fail)
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) try to remove "/./a" (must fail)
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) open "/a"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) open "."
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) "/a" and "." must have same inumber
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) "/" and "/a" must have different inumbers
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) chdir "/a"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) open "."
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) "." must have same inumber as before
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) chdir "/"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) try to remove "a" (must fail: still open)
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) verify "/a" is empty
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) end
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) begin
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) open "/"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) mkdir "a"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) open "/a"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) verify "/a" is empty
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) "/" and "/a" must have different inumbers
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) chdir "a"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) try to remove "/a"
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) remove successful
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) open "/a" (must fail)
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) open "." (must fail)
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) open ".." (must fail)
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) create "x" (must fail)
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) verify "/a" is empty
tests/filesys/extended/dir-rm-cwd.ck:(dir-rm-cwd) end
tests/filesys/extended/dir-rm-cwd.ck:open (CAN_RMDIR_CWD, ">tests/filesys/extended/can-rmdir-cwd")
tests/filesys/extended/dir-rm-cwd.ck:  or die "tests/filesys/extended/can-rmdir-cwd: create: $!\n";
tests/filesys/extended/dir-rm-parent-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-rm-parent.c:   fail, because that directory is non-empty. */
tests/filesys/extended/dir-rm-parent.ck:# -*- perl -*-
tests/filesys/extended/dir-rm-parent.ck:(dir-rm-parent) begin
tests/filesys/extended/dir-rm-parent.ck:(dir-rm-parent) mkdir "a"
tests/filesys/extended/dir-rm-parent.ck:(dir-rm-parent) chdir "a"
tests/filesys/extended/dir-rm-parent.ck:(dir-rm-parent) mkdir "b"
tests/filesys/extended/dir-rm-parent.ck:(dir-rm-parent) chdir "b"
tests/filesys/extended/dir-rm-parent.ck:(dir-rm-parent) remove "/a" (must fail)
tests/filesys/extended/dir-rm-parent.ck:(dir-rm-parent) end
tests/filesys/extended/dir-rm-root-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-rm-root.ck:# -*- perl -*-
tests/filesys/extended/dir-rm-root.ck:(dir-rm-root) begin
tests/filesys/extended/dir-rm-root.ck:(dir-rm-root) remove "/" (must fail)
tests/filesys/extended/dir-rm-root.ck:(dir-rm-root) create "/a"
tests/filesys/extended/dir-rm-root.ck:(dir-rm-root) end
tests/filesys/extended/dir-rm-tree-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-rm-tree.c:#include "tests/filesys/extended/mk-tree.h"
tests/filesys/extended/dir-rm-tree.c:       at - 1, bt - 1, ct - 1, dt - 1);
tests/filesys/extended/dir-rm-tree.c:  snprintf (try, sizeof (try), "/%d/%d/%d/%d", at - 1, 0, ct - 1, 0);
tests/filesys/extended/dir-rm-tree.c:  CHECK (open (try) == -1, "open \"%s\" (must return -1)", try);
tests/filesys/extended/dir-rm-tree.ck:# -*- perl -*-
tests/filesys/extended/dir-rm-tree.ck:(dir-rm-tree) begin
tests/filesys/extended/dir-rm-tree.ck:(dir-rm-tree) creating /0/0/0/0 through /3/2/2/3...
tests/filesys/extended/dir-rm-tree.ck:(dir-rm-tree) open "/0/2/0/3"
tests/filesys/extended/dir-rm-tree.ck:(dir-rm-tree) close "/0/2/0/3"
tests/filesys/extended/dir-rm-tree.ck:(dir-rm-tree) removing /0/0/0/0 through /3/2/2/3...
tests/filesys/extended/dir-rm-tree.ck:(dir-rm-tree) open "/3/0/2/0" (must return -1)
tests/filesys/extended/dir-rm-tree.ck:(dir-rm-tree) end
tests/filesys/extended/dir-rmdir-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-rmdir.ck:# -*- perl -*-
tests/filesys/extended/dir-rmdir.ck:(dir-rmdir) begin
tests/filesys/extended/dir-rmdir.ck:(dir-rmdir) mkdir "a"
tests/filesys/extended/dir-rmdir.ck:(dir-rmdir) rmdir "a"
tests/filesys/extended/dir-rmdir.ck:(dir-rmdir) chdir "a" (must return false)
tests/filesys/extended/dir-rmdir.ck:(dir-rmdir) end
tests/filesys/extended/dir-under-file-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-under-file.ck:# -*- perl -*-
tests/filesys/extended/dir-under-file.ck:(dir-under-file) begin
tests/filesys/extended/dir-under-file.ck:(dir-under-file) create "abc"
tests/filesys/extended/dir-under-file.ck:(dir-under-file) mkdir "abc" (must return false)
tests/filesys/extended/dir-under-file.ck:(dir-under-file) end
tests/filesys/extended/dir-vine-persistence.ck:# -*- perl -*-
tests/filesys/extended/dir-vine-persistence.ck:# 40642 dir-vine
tests/filesys/extended/dir-vine-persistence.ck:    $dir->{"file$i"} = ["contents $i\n"];
tests/filesys/extended/dir-vine-persistence.ck:    $dir = $dir->{"dir$i"} = {};
tests/filesys/extended/dir-vine.c:  while (i-- > 10) 
tests/filesys/extended/dir-vine.ck:# -*- perl -*-
tests/filesys/extended/dir-vine.ck:(dir-vine) begin
tests/filesys/extended/dir-vine.ck:(dir-vine) creating many levels of files and directories...
tests/filesys/extended/dir-vine.ck:(dir-vine) removing all but top 10 levels of files and directories...
tests/filesys/extended/dir-vine.ck:(dir-vine) end
tests/filesys/extended/grow-create-persistence.ck:# -*- perl -*-
tests/filesys/extended/grow-create.ck:# -*- perl -*-
tests/filesys/extended/grow-create.ck:(grow-create) begin
tests/filesys/extended/grow-create.ck:(grow-create) create "blargle"
tests/filesys/extended/grow-create.ck:(grow-create) open "blargle" for verification
tests/filesys/extended/grow-create.ck:(grow-create) verified contents of "blargle"
tests/filesys/extended/grow-create.ck:(grow-create) close "blargle"
tests/filesys/extended/grow-create.ck:(grow-create) end
tests/filesys/extended/grow-dir-lg-persistence.ck:# -*- perl -*-
tests/filesys/extended/grow-dir-lg-persistence.ck:$fs->{'x'}{"file$_"} = [random_bytes (512)] foreach 0...49;
tests/filesys/extended/grow-dir-lg.c:#include "tests/filesys/extended/grow-dir.inc"
tests/filesys/extended/grow-dir-lg.ck:# -*- perl -*-
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) begin
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) mkdir /x
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file0"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file1"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file2"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file3"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file4"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file5"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file6"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file7"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file8"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file9"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file10"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file11"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file12"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file13"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file14"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file15"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file16"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file17"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file18"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file19"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file20"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file21"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file22"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file23"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file24"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file25"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file26"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file27"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file28"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file29"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file30"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file31"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file32"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file33"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file34"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file35"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file36"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file37"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file38"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file39"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file40"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file41"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file42"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file43"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file44"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file45"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file46"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file47"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file48"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) creating and checking "/x/file49"
tests/filesys/extended/grow-dir-lg.ck:(grow-dir-lg) end
tests/filesys/extended/grow-dir.inc:/* -*- c -*- */
tests/filesys/extended/grow-dir.inc:#include "tests/filesys/seq-test.h"
tests/filesys/extended/grow-file-size-persistence.ck:# -*- perl -*-
tests/filesys/extended/grow-file-size.c:#include "tests/filesys/seq-test.h"
tests/filesys/extended/grow-file-size.ck:# -*- perl -*-
tests/filesys/extended/grow-file-size.ck:(grow-file-size) begin
tests/filesys/extended/grow-file-size.ck:(grow-file-size) create "testfile"
tests/filesys/extended/grow-file-size.ck:(grow-file-size) open "testfile"
tests/filesys/extended/grow-file-size.ck:(grow-file-size) writing "testfile"
tests/filesys/extended/grow-file-size.ck:(grow-file-size) close "testfile"
tests/filesys/extended/grow-file-size.ck:(grow-file-size) open "testfile" for verification
tests/filesys/extended/grow-file-size.ck:(grow-file-size) verified contents of "testfile"
tests/filesys/extended/grow-file-size.ck:(grow-file-size) close "testfile"
tests/filesys/extended/grow-file-size.ck:(grow-file-size) end
tests/filesys/extended/grow-root-lg-persistence.ck:# -*- perl -*-
tests/filesys/extended/grow-root-lg-persistence.ck:$fs->{"file$_"} = [random_bytes (512)] foreach 0...49;
tests/filesys/extended/grow-root-lg.c:#include "tests/filesys/extended/grow-dir.inc"
tests/filesys/extended/grow-root-lg.ck:# -*- perl -*-
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) begin
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file0"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file1"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file2"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file3"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file4"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file5"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file6"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file7"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file8"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file9"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file10"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file11"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file12"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file13"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file14"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file15"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file16"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file17"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file18"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file19"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file20"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file21"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file22"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file23"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file24"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file25"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file26"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file27"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file28"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file29"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file30"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file31"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file32"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file33"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file34"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file35"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file36"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file37"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file38"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file39"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file40"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file41"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file42"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file43"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file44"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file45"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file46"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file47"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file48"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) creating and checking "file49"
tests/filesys/extended/grow-root-lg.ck:(grow-root-lg) end
tests/filesys/extended/grow-root-sm-persistence.ck:# -*- perl -*-
tests/filesys/extended/grow-root-sm-persistence.ck:$fs->{"file$_"} = [random_bytes (512)] foreach 0...19;
tests/filesys/extended/grow-root-sm.c:#include "tests/filesys/extended/grow-dir.inc"
tests/filesys/extended/grow-root-sm.ck:# -*- perl -*-
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) begin
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file0"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file1"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file2"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file3"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file4"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file5"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file6"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file7"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file8"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file9"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file10"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file11"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file12"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file13"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file14"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file15"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file16"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file17"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file18"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) creating and checking "file19"
tests/filesys/extended/grow-root-sm.ck:(grow-root-sm) end
tests/filesys/extended/grow-seq-lg-persistence.ck:# -*- perl -*-
tests/filesys/extended/grow-seq-lg.c:#include "tests/filesys/extended/grow-seq.inc"
tests/filesys/extended/grow-seq-lg.ck:# -*- perl -*-
tests/filesys/extended/grow-seq-lg.ck:(grow-seq-lg) begin
tests/filesys/extended/grow-seq-lg.ck:(grow-seq-lg) create "testme"
tests/filesys/extended/grow-seq-lg.ck:(grow-seq-lg) open "testme"
tests/filesys/extended/grow-seq-lg.ck:(grow-seq-lg) writing "testme"
tests/filesys/extended/grow-seq-lg.ck:(grow-seq-lg) close "testme"
tests/filesys/extended/grow-seq-lg.ck:(grow-seq-lg) open "testme" for verification
tests/filesys/extended/grow-seq-lg.ck:(grow-seq-lg) verified contents of "testme"
tests/filesys/extended/grow-seq-lg.ck:(grow-seq-lg) close "testme"
tests/filesys/extended/grow-seq-lg.ck:(grow-seq-lg) end
tests/filesys/extended/grow-seq-sm-persistence.ck:# -*- perl -*-
tests/filesys/extended/grow-seq-sm.c:#include "tests/filesys/extended/grow-seq.inc"
tests/filesys/extended/grow-seq-sm.ck:# -*- perl -*-
tests/filesys/extended/grow-seq-sm.ck:(grow-seq-sm) begin
tests/filesys/extended/grow-seq-sm.ck:(grow-seq-sm) create "testme"
tests/filesys/extended/grow-seq-sm.ck:(grow-seq-sm) open "testme"
tests/filesys/extended/grow-seq-sm.ck:(grow-seq-sm) writing "testme"
tests/filesys/extended/grow-seq-sm.ck:(grow-seq-sm) close "testme"
tests/filesys/extended/grow-seq-sm.ck:(grow-seq-sm) open "testme" for verification
tests/filesys/extended/grow-seq-sm.ck:(grow-seq-sm) verified contents of "testme"
tests/filesys/extended/grow-seq-sm.ck:(grow-seq-sm) close "testme"
tests/filesys/extended/grow-seq-sm.ck:(grow-seq-sm) end
tests/filesys/extended/grow-seq.inc:/* -*- c -*- */
tests/filesys/extended/grow-seq.inc:#include "tests/filesys/seq-test.h"
tests/filesys/extended/grow-sparse-persistence.ck:# -*- perl -*-
tests/filesys/extended/grow-sparse.c:  seek (fd, sizeof buf - 1);
tests/filesys/extended/grow-sparse.ck:# -*- perl -*-
tests/filesys/extended/grow-sparse.ck:(grow-sparse) begin
tests/filesys/extended/grow-sparse.ck:(grow-sparse) create "testfile"
tests/filesys/extended/grow-sparse.ck:(grow-sparse) open "testfile"
tests/filesys/extended/grow-sparse.ck:(grow-sparse) seek "testfile"
tests/filesys/extended/grow-sparse.ck:(grow-sparse) write "testfile"
tests/filesys/extended/grow-sparse.ck:(grow-sparse) close "testfile"
tests/filesys/extended/grow-sparse.ck:(grow-sparse) open "testfile" for verification
tests/filesys/extended/grow-sparse.ck:(grow-sparse) verified contents of "testfile"
tests/filesys/extended/grow-sparse.ck:(grow-sparse) close "testfile"
tests/filesys/extended/grow-sparse.ck:(grow-sparse) end
tests/filesys/extended/grow-tell-persistence.ck:# -*- perl -*-
tests/filesys/extended/grow-tell.c:#include "tests/filesys/seq-test.h"
tests/filesys/extended/grow-tell.ck:# -*- perl -*-
tests/filesys/extended/grow-tell.ck:(grow-tell) begin
tests/filesys/extended/grow-tell.ck:(grow-tell) create "foobar"
tests/filesys/extended/grow-tell.ck:(grow-tell) open "foobar"
tests/filesys/extended/grow-tell.ck:(grow-tell) writing "foobar"
tests/filesys/extended/grow-tell.ck:(grow-tell) close "foobar"
tests/filesys/extended/grow-tell.ck:(grow-tell) open "foobar" for verification
tests/filesys/extended/grow-tell.ck:(grow-tell) verified contents of "foobar"
tests/filesys/extended/grow-tell.ck:(grow-tell) close "foobar"
tests/filesys/extended/grow-tell.ck:(grow-tell) end
tests/filesys/extended/grow-two-files-persistence.ck:# -*- perl -*-
tests/filesys/extended/grow-two-files.c:      if (block_size > FILE_SIZE - *ofs)
tests/filesys/extended/grow-two-files.c:        block_size = FILE_SIZE - *ofs;
tests/filesys/extended/grow-two-files.ck:# -*- perl -*-
tests/filesys/extended/grow-two-files.ck:(grow-two-files) begin
tests/filesys/extended/grow-two-files.ck:(grow-two-files) create "a"
tests/filesys/extended/grow-two-files.ck:(grow-two-files) create "b"
tests/filesys/extended/grow-two-files.ck:(grow-two-files) open "a"
tests/filesys/extended/grow-two-files.ck:(grow-two-files) open "b"
tests/filesys/extended/grow-two-files.ck:(grow-two-files) write "a" and "b" alternately
tests/filesys/extended/grow-two-files.ck:(grow-two-files) close "a"
tests/filesys/extended/grow-two-files.ck:(grow-two-files) close "b"
tests/filesys/extended/grow-two-files.ck:(grow-two-files) open "a" for verification
tests/filesys/extended/grow-two-files.ck:(grow-two-files) verified contents of "a"
tests/filesys/extended/grow-two-files.ck:(grow-two-files) close "a"
tests/filesys/extended/grow-two-files.ck:(grow-two-files) open "b" for verification
tests/filesys/extended/grow-two-files.ck:(grow-two-files) verified contents of "b"
tests/filesys/extended/grow-two-files.ck:(grow-two-files) close "b"
tests/filesys/extended/grow-two-files.ck:(grow-two-files) end
tests/filesys/extended/Make.tests:# -*- makefile -*-
tests/filesys/extended/Make.tests:raw_tests = dir-empty-name dir-mk-tree dir-mkdir dir-open		\
tests/filesys/extended/Make.tests:dir-over-file dir-rm-cwd dir-rm-parent dir-rm-root dir-rm-tree		\
tests/filesys/extended/Make.tests:dir-rmdir dir-under-file dir-vine grow-create grow-dir-lg		\
tests/filesys/extended/Make.tests:grow-file-size grow-root-lg grow-root-sm grow-seq-lg grow-seq-sm	\
tests/filesys/extended/Make.tests:grow-sparse grow-tell grow-two-files syn-rw
tests/filesys/extended/Make.tests:tests/filesys/extended_EXTRA_GRADES = $(patsubst %,tests/filesys/extended/%-persistence,$(raw_tests))
tests/filesys/extended/Make.tests:tests/filesys/extended/child-syn-rw tests/filesys/extended/tar
tests/filesys/extended/Make.tests:	$(eval $(prog)_SRC += $(prog).c tests/lib.c tests/filesys/seq-test.c))
tests/filesys/extended/Make.tests:$(foreach test,$(tests/filesys/extended_TESTS),$(eval $(test).output: FILESYSSOURCE = --disk=tmp.dsk))
tests/filesys/extended/Make.tests:tests/filesys/extended/dir-mk-tree_SRC += tests/filesys/extended/mk-tree.c
tests/filesys/extended/Make.tests:tests/filesys/extended/dir-rm-tree_SRC += tests/filesys/extended/mk-tree.c
tests/filesys/extended/Make.tests:tests/filesys/extended/syn-rw_PUTFILES += tests/filesys/extended/child-syn-rw
tests/filesys/extended/Make.tests:tests/filesys/extended/dir-vine.output: TIMEOUT = 150
tests/filesys/extended/Make.tests:GETCMD = pintos -v -k -T $(GETTIMEOUT)
tests/filesys/extended/Make.tests:GETCMD += -g fs.tar -a $(TEST).tar
tests/filesys/extended/Make.tests:GETCMD += --swap-size=4
tests/filesys/extended/Make.tests:GETCMD += -- -q
tests/filesys/extended/Make.tests:GETCMD += 2> $(TEST)-persistence.errors $(if $(VERBOSE),|tee,>) $(TEST)-persistence.output
tests/filesys/extended/Make.tests:	rm -f tmp.dsk
tests/filesys/extended/Make.tests:	pintos-mkdisk tmp.dsk --filesys-size=2
tests/filesys/extended/Make.tests:	rm -f tmp.dsk
tests/filesys/extended/Make.tests:$(foreach raw_test,$(raw_tests),$(eval tests/filesys/extended/$(raw_test)-persistence.output: tests/filesys/extended/$(raw_test).output))
tests/filesys/extended/Make.tests:$(foreach raw_test,$(raw_tests),$(eval tests/filesys/extended/$(raw_test)-persistence.result: tests/filesys/extended/$(raw_test).result))
tests/filesys/extended/Make.tests:	rm -f $(TARS)
tests/filesys/extended/Make.tests:	rm -f tests/filesys/extended/can-rmdir-cwd
tests/filesys/extended/mk-tree.c:#include "tests/filesys/extended/mk-tree.h"
tests/filesys/extended/mk-tree.c:       at - 1, bt - 1, ct - 1, dt - 1);
tests/filesys/extended/mk-tree.c:  snprintf (try, sizeof try, "/%d/%d/%d/%d", 0, bt - 1, 0, dt - 1);
tests/filesys/extended/mk-tree.h:#endif /* tests/filesys/extended/mk-tree.h */
tests/filesys/extended/Rubric.functionality:- Test directory support.
tests/filesys/extended/Rubric.functionality:1	dir-mkdir
tests/filesys/extended/Rubric.functionality:3	dir-mk-tree
tests/filesys/extended/Rubric.functionality:1	dir-rmdir
tests/filesys/extended/Rubric.functionality:3	dir-rm-tree
tests/filesys/extended/Rubric.functionality:5	dir-vine
tests/filesys/extended/Rubric.functionality:- Test file growth.
tests/filesys/extended/Rubric.functionality:1	grow-create
tests/filesys/extended/Rubric.functionality:1	grow-seq-sm
tests/filesys/extended/Rubric.functionality:3	grow-seq-lg
tests/filesys/extended/Rubric.functionality:3	grow-sparse
tests/filesys/extended/Rubric.functionality:3	grow-two-files
tests/filesys/extended/Rubric.functionality:1	grow-tell
tests/filesys/extended/Rubric.functionality:1	grow-file-size
tests/filesys/extended/Rubric.functionality:- Test directory growth.
tests/filesys/extended/Rubric.functionality:1	grow-dir-lg
tests/filesys/extended/Rubric.functionality:1	grow-root-sm
tests/filesys/extended/Rubric.functionality:1	grow-root-lg
tests/filesys/extended/Rubric.functionality:- Test writing from multiple processes.
tests/filesys/extended/Rubric.functionality:5	syn-rw
tests/filesys/extended/Rubric.persistence:1	dir-empty-name-persistence
tests/filesys/extended/Rubric.persistence:1	dir-mk-tree-persistence
tests/filesys/extended/Rubric.persistence:1	dir-mkdir-persistence
tests/filesys/extended/Rubric.persistence:1	dir-open-persistence
tests/filesys/extended/Rubric.persistence:1	dir-over-file-persistence
tests/filesys/extended/Rubric.persistence:1	dir-rm-cwd-persistence
tests/filesys/extended/Rubric.persistence:1	dir-rm-parent-persistence
tests/filesys/extended/Rubric.persistence:1	dir-rm-root-persistence
tests/filesys/extended/Rubric.persistence:1	dir-rm-tree-persistence
tests/filesys/extended/Rubric.persistence:1	dir-rmdir-persistence
tests/filesys/extended/Rubric.persistence:1	dir-under-file-persistence
tests/filesys/extended/Rubric.persistence:1	dir-vine-persistence
tests/filesys/extended/Rubric.persistence:1	grow-create-persistence
tests/filesys/extended/Rubric.persistence:1	grow-dir-lg-persistence
tests/filesys/extended/Rubric.persistence:1	grow-file-size-persistence
tests/filesys/extended/Rubric.persistence:1	grow-root-lg-persistence
tests/filesys/extended/Rubric.persistence:1	grow-root-sm-persistence
tests/filesys/extended/Rubric.persistence:1	grow-seq-lg-persistence
tests/filesys/extended/Rubric.persistence:1	grow-seq-sm-persistence
tests/filesys/extended/Rubric.persistence:1	grow-sparse-persistence
tests/filesys/extended/Rubric.persistence:1	grow-tell-persistence
tests/filesys/extended/Rubric.persistence:1	grow-two-files-persistence
tests/filesys/extended/Rubric.persistence:1	syn-rw-persistence
tests/filesys/extended/Rubric.robustness:1	dir-empty-name
tests/filesys/extended/Rubric.robustness:1	dir-open
tests/filesys/extended/Rubric.robustness:1	dir-over-file
tests/filesys/extended/Rubric.robustness:1	dir-under-file
tests/filesys/extended/Rubric.robustness:3	dir-rm-cwd
tests/filesys/extended/Rubric.robustness:2	dir-rm-parent
tests/filesys/extended/Rubric.robustness:1	dir-rm-root
tests/filesys/extended/syn-rw-persistence.ck:# -*- perl -*-
tests/filesys/extended/syn-rw-persistence.ck:check_archive ({"child-syn-rw" => "tests/filesys/extended/child-syn-rw",
tests/filesys/extended/syn-rw.c:#include "tests/filesys/extended/syn-rw.h"
tests/filesys/extended/syn-rw.c:  exec_children ("child-syn-rw", children, CHILD_CNT);
tests/filesys/extended/syn-rw.ck:# -*- perl -*-
tests/filesys/extended/syn-rw.ck:(syn-rw) begin
tests/filesys/extended/syn-rw.ck:(syn-rw) create "logfile"
tests/filesys/extended/syn-rw.ck:(syn-rw) open "logfile"
tests/filesys/extended/syn-rw.ck:(syn-rw) exec child 1 of 4: "child-syn-rw 0"
tests/filesys/extended/syn-rw.ck:(syn-rw) exec child 2 of 4: "child-syn-rw 1"
tests/filesys/extended/syn-rw.ck:(syn-rw) exec child 3 of 4: "child-syn-rw 2"
tests/filesys/extended/syn-rw.ck:(syn-rw) exec child 4 of 4: "child-syn-rw 3"
tests/filesys/extended/syn-rw.ck:(syn-rw) wait for child 1 of 4 returned 0 (expected 0)
tests/filesys/extended/syn-rw.ck:(syn-rw) wait for child 2 of 4 returned 1 (expected 1)
tests/filesys/extended/syn-rw.ck:(syn-rw) wait for child 3 of 4 returned 2 (expected 2)
tests/filesys/extended/syn-rw.ck:(syn-rw) wait for child 4 of 4 returned 3 (expected 3)
tests/filesys/extended/syn-rw.ck:(syn-rw) end
tests/filesys/extended/syn-rw.h:#endif /* tests/filesys/extended/syn-rw.h */
tests/filesys/extended/tar.c:  return (make_tar_archive (argv[1], argv + 2, argc - 2)
tests/filesys/extended/tar.c:      memset (buf + bytes_read, 0, 512 - bytes_read);
tests/filesys/extended/tar.c:      file_size -= chunk_size;
tests/internal/list.c:          ASSERT (size ? list_entry (e, struct value, elem)->value == 0
tests/internal/list.c:          ASSERT (size ? list_entry (e, struct value, elem)->value == size - 1
tests/internal/list.c:              while (copies-- > 0) 
tests/internal/list.c:                  values[ofs].value = v->value;
tests/internal/list.c:      size_t j = i + random_ulong () % (cnt - i);
tests/internal/list.c:  return a->value < b->value;
tests/internal/list.c:      ASSERT (i == v->value);
tests/internal/list.c:      ASSERT (i == v->value);
tests/internal/stdio.c:  printf ("\"%s\" -> \"%s\": ", format, expect);
tests/internal/stdio.c:  checkf ("-1", "%'d", -1);
tests/internal/stdio.c:  checkf ("-12", "%'d", -12);
tests/internal/stdio.c:  checkf ("-123", "%'d", -123);
tests/internal/stdio.c:  checkf ("-1,234", "%'d", -1234);
tests/internal/stdio.c:  checkf ("-12,345", "%'d", -12345);
tests/internal/stdio.c:  checkf ("-123,456", "%'ld", -123456L);
tests/internal/stdio.c:  checkf ("-1,234,567", "%'ld", -1234567L);
tests/internal/stdio.c:  checkf ("-12,345,678", "%'ld", -12345678L);
tests/internal/stdio.c:  checkf ("-123,456,789", "%'ld", -123456789L);
tests/internal/stdio.c:  checkf ("-1,234,567,890", "%'ld", -1234567890L);
tests/internal/stdio.c:  checkf ("-12,345,678,901", "%'lld", -12345678901LL);
tests/internal/stdio.c:  checkf ("-123,456,789,012", "%'lld", -123456789012LL);
tests/internal/stdio.c:  checkf ("-1,234,567,890,123", "%'lld", -1234567890123LL);
tests/internal/stdio.c:  checkf ("-12,345,678,901,234", "%'lld", -12345678901234LL);
tests/internal/stdio.c:  checkf ("-123,456,789,012,345", "%'lld", -123456789012345LL);
tests/internal/stdio.c:  checkf ("-1,234,567,890,123,456", "%'lld", -1234567890123456LL);
tests/internal/stdio.c:  checkf ("-12,345,678,901,234,567", "%'lld", -12345678901234567LL);
tests/internal/stdio.c:  checkf ("-123,456,789,012,345,678", "%'lld", -123456789012345678LL);
tests/internal/stdio.c:  checkf ("-1,234,567,890,123,456,789", "%'lld", -1234567890123456789LL);
tests/internal/stdio.c:  checkf ("0    ", "%-5d", 0);
tests/internal/stdio.c:  checkf ("+0   ", "%+-5d", 0);
tests/internal/stdio.c:  checkf ("1    ", "%-5d", 1);
tests/internal/stdio.c:  checkf ("+1   ", "%+-5d", 1);
tests/internal/stdio.c:  checkf ("   -1", "%5d", -1);
tests/internal/stdio.c:  checkf ("-1   ", "%-5d", -1);
tests/internal/stdio.c:  checkf ("   -1", "%+5d", -1);
tests/internal/stdio.c:  checkf ("-1   ", "%+-5d", -1);
tests/internal/stdio.c:  checkf ("   -1", "% 5d", -1);
tests/internal/stdio.c:  checkf ("-0001", "%05d", -1);
tests/internal/stdio.c:  checkf ("   -1", "%5.0d", -1);
tests/internal/stdio.c:  checkf ("  -01", "%5.2d", -1);
tests/internal/stdio.c:  checkf ("-1", "%d", -1);
tests/internal/stdio.c:  checkf ("12345", "%-5d", 12345);
tests/internal/stdio.c:  checkf ("+12345", "%+-5d", 12345);
tests/internal/stdio.c:  checkf ("123456", "%-5d", 123456);
tests/internal/stdio.c:  checkf ("+123456", "%+-5d", 123456);
tests/internal/stdio.c:  checkf ("  left-right  ", "%6s%s%-7s", "left", "-", "right");
tests/internal/stdio.c:  checkf ("36657730000", "%- o", (unsigned) 036657730000);
tests/internal/stdio.c:  checkf ("4139757568", "%- u", (unsigned) 4139757568UL);
tests/internal/stdio.c:  checkf ("f6bfb000", "%- x", (unsigned) 0xf6bfb000);
tests/internal/stdio.c:  checkf ("36657730000", "%-to", (ptrdiff_t) 036657730000);
tests/internal/stdio.c:  checkf ("4139757568", "%-tu", (ptrdiff_t) 4139757568UL);
tests/internal/stdio.c:  checkf ("-155209728", "%-zi", (size_t) -155209728);
tests/internal/stdio.c:  checkf ("-155209728", "%-zd", (size_t) -155209728);
tests/internal/stdio.c:  checkf ("-155209728", "% zi", (size_t) -155209728);
tests/internal/stdio.c:  checkf ("-155209728", "% zd", (size_t) -155209728);
tests/internal/stdio.c:  checkf ("-155209728", "%#zd", (size_t) -155209728);
tests/internal/stdio.c:  checkf ("-155209728", "%0zi", (size_t) -155209728);
tests/internal/stdio.c:  checkf ("-155,209,728", "%-'d", -155209728);
tests/internal/stdio.c:  checkf ("-155209728", "%.zi", (size_t) -155209728);
tests/internal/stdio.c:  checkf ("-155209728", "%zi", (size_t) -155209728);
tests/internal/stdio.c:  checkf ("-155209728", "%zd", (size_t) -155209728);
tests/internal/stdio.c:  checkf ("-155209728", "%+zi", (size_t) -155209728);
tests/internal/stdlib.c:      size_t j = i + random_ulong () % (cnt - i);
tests/internal/stdlib.c:   -1 if *A is less than *B. */
tests/internal/stdlib.c:  return *a < *b ? -1 : *a > *b;
tests/internal/stdlib.c:/* Verifies that ARRAY contains the CNT ints 0...CNT-1. */
tests/internal/stdlib.c:   contain the values 0...CNT-1. */
tests/internal/stdlib.c:  int not_in_array[] = {0, -1, INT_MAX, MAX_CNT, MAX_CNT + 1, MAX_CNT * 2};
tests/threads/alarm-negative.c:/* Tests timer_sleep(-100).  Only requirement is that it not crash. */
tests/threads/alarm-negative.c:  timer_sleep (-100);
tests/threads/alarm-multiple.ck:# -*- perl -*-
tests/threads/alarm-negative.ck:# -*- perl -*-
tests/threads/alarm-negative.ck:(alarm-negative) begin
tests/threads/alarm-negative.ck:(alarm-negative) PASS
tests/threads/alarm-negative.ck:(alarm-negative) end
tests/threads/alarm-priority.c:   higher-priority threads run first. */
tests/threads/alarm-priority.c:      int priority = PRI_DEFAULT - (i + 5) % 10 - 1;
tests/threads/alarm-priority.c:  /* Busy-wait until the current time changes. */
tests/threads/alarm-priority.c:  timer_sleep (wake_time - timer_ticks ());
tests/threads/alarm-priority.c:  /* Print a message on wake-up. */
tests/threads/alarm-priority.ck:# -*- perl -*-
tests/threads/alarm-priority.ck:(alarm-priority) begin
tests/threads/alarm-priority.ck:(alarm-priority) Thread priority 30 woke up.
tests/threads/alarm-priority.ck:(alarm-priority) Thread priority 29 woke up.
tests/threads/alarm-priority.ck:(alarm-priority) Thread priority 28 woke up.
tests/threads/alarm-priority.ck:(alarm-priority) Thread priority 27 woke up.
tests/threads/alarm-priority.ck:(alarm-priority) Thread priority 26 woke up.
tests/threads/alarm-priority.ck:(alarm-priority) Thread priority 25 woke up.
tests/threads/alarm-priority.ck:(alarm-priority) Thread priority 24 woke up.
tests/threads/alarm-priority.ck:(alarm-priority) Thread priority 23 woke up.
tests/threads/alarm-priority.ck:(alarm-priority) Thread priority 22 woke up.
tests/threads/alarm-priority.ck:(alarm-priority) Thread priority 21 woke up.
tests/threads/alarm-priority.ck:(alarm-priority) end
tests/threads/alarm-simultaneous.c:   duration, M times.  Records the wake-up order and verifies
tests/threads/alarm-simultaneous.c:  for (i = 1; i < test.output_pos - output; i++) 
tests/threads/alarm-simultaneous.c:         i / thread_cnt, i % thread_cnt, output[i] - output[i - 1]);
tests/threads/alarm-simultaneous.c:  for (i = 1; i <= test->iterations; i++) 
tests/threads/alarm-simultaneous.c:      int64_t sleep_until = test->start + i * 10;
tests/threads/alarm-simultaneous.c:      timer_sleep (sleep_until - timer_ticks ());
tests/threads/alarm-simultaneous.c:      *test->output_pos++ = timer_ticks () - test->start;
tests/threads/alarm-simultaneous.ck:# -*- perl -*-
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) begin
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) Creating 3 threads to sleep 5 times each.
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) Each thread sleeps 10 ticks each time.
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) Within an iteration, all threads should wake up on the same tick.
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 0, thread 0: woke up after 10 ticks
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 0, thread 1: woke up 0 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 0, thread 2: woke up 0 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 1, thread 0: woke up 10 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 1, thread 1: woke up 0 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 1, thread 2: woke up 0 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 2, thread 0: woke up 10 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 2, thread 1: woke up 0 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 2, thread 2: woke up 0 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 3, thread 0: woke up 10 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 3, thread 1: woke up 0 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 3, thread 2: woke up 0 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 4, thread 0: woke up 10 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 4, thread 1: woke up 0 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) iteration 4, thread 2: woke up 0 ticks later
tests/threads/alarm-simultaneous.ck:(alarm-simultaneous) end
tests/threads/alarm-single.ck:# -*- perl -*-
tests/threads/alarm-wait.c:   duration, M times.  Records the wake-up order and verifies
tests/threads/alarm-wait.c:      t->test = &test;
tests/threads/alarm-wait.c:      t->id = i;
tests/threads/alarm-wait.c:      t->duration = (i + 1) * 10;
tests/threads/alarm-wait.c:      t->iterations = 0;
tests/threads/alarm-wait.c:      new_prod = ++t->iterations * t->duration;
tests/threads/alarm-wait.c:           t->id, t->duration, t->iterations, new_prod);
tests/threads/alarm-wait.c:              t->id, product, new_prod);
tests/threads/alarm-wait.c:  struct sleep_test *test = t->test;
tests/threads/alarm-wait.c:  for (i = 1; i <= test->iterations; i++) 
tests/threads/alarm-wait.c:      int64_t sleep_until = test->start + i * t->duration;
tests/threads/alarm-wait.c:      timer_sleep (sleep_until - timer_ticks ());
tests/threads/alarm-wait.c:      lock_acquire (&test->output_lock);
tests/threads/alarm-wait.c:      *test->output_pos++ = t->id;
tests/threads/alarm-wait.c:      lock_release (&test->output_lock);
tests/threads/alarm-zero.ck:# -*- perl -*-
tests/threads/alarm-zero.ck:(alarm-zero) begin
tests/threads/alarm-zero.ck:(alarm-zero) PASS
tests/threads/alarm-zero.ck:(alarm-zero) end
tests/threads/Make.tests:# -*- makefile -*-
tests/threads/Make.tests:tests/threads_TESTS = $(addprefix tests/threads/,alarm-single		\
tests/threads/Make.tests:alarm-multiple alarm-simultaneous alarm-priority alarm-zero		\
tests/threads/Make.tests:alarm-negative priority-change priority-donate-one			\
tests/threads/Make.tests:priority-donate-multiple priority-donate-multiple2			\
tests/threads/Make.tests:priority-donate-nest priority-donate-sema priority-donate-lower		\
tests/threads/Make.tests:priority-fifo priority-preempt priority-sema priority-condvar		\
tests/threads/Make.tests:priority-donate-chain                                                   \
tests/threads/Make.tests:mlfqs-load-1 mlfqs-load-60 mlfqs-load-avg mlfqs-recent-1 mlfqs-fair-2	\
tests/threads/Make.tests:mlfqs-fair-20 mlfqs-nice-2 mlfqs-nice-10 mlfqs-block)
tests/threads/Make.tests:tests/threads_SRC += tests/threads/alarm-wait.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/alarm-simultaneous.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/alarm-priority.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/alarm-zero.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/alarm-negative.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-change.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-donate-one.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-donate-multiple.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-donate-multiple2.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-donate-nest.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-donate-sema.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-donate-lower.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-fifo.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-preempt.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-sema.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-condvar.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/priority-donate-chain.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/mlfqs-load-1.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/mlfqs-load-60.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/mlfqs-load-avg.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/mlfqs-recent-1.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/mlfqs-fair.c
tests/threads/Make.tests:tests/threads_SRC += tests/threads/mlfqs-block.c
tests/threads/Make.tests:tests/threads/mlfqs-load-1.output		\
tests/threads/Make.tests:tests/threads/mlfqs-load-60.output		\
tests/threads/Make.tests:tests/threads/mlfqs-load-avg.output		\
tests/threads/Make.tests:tests/threads/mlfqs-recent-1.output		\
tests/threads/Make.tests:tests/threads/mlfqs-fair-2.output		\
tests/threads/Make.tests:tests/threads/mlfqs-fair-20.output		\
tests/threads/Make.tests:tests/threads/mlfqs-nice-2.output		\
tests/threads/Make.tests:tests/threads/mlfqs-nice-10.output		\
tests/threads/Make.tests:tests/threads/mlfqs-block.output
tests/threads/Make.tests:$(MLFQS_OUTPUTS): KERNELFLAGS += -mlfqs
tests/threads/mlfqs-block.ck:# -*- perl -*-
tests/threads/mlfqs-block.ck:(mlfqs-block) begin
tests/threads/mlfqs-block.ck:(mlfqs-block) Main thread acquiring lock.
tests/threads/mlfqs-block.ck:(mlfqs-block) Main thread creating block thread, sleeping 25 seconds...
tests/threads/mlfqs-block.ck:(mlfqs-block) Block thread spinning for 20 seconds...
tests/threads/mlfqs-block.ck:(mlfqs-block) Block thread acquiring lock...
tests/threads/mlfqs-block.ck:(mlfqs-block) Main thread spinning for 5 seconds...
tests/threads/mlfqs-block.ck:(mlfqs-block) Main thread releasing lock.
tests/threads/mlfqs-block.ck:(mlfqs-block) ...got it.
tests/threads/mlfqs-block.ck:(mlfqs-block) Block thread should have already acquired lock.
tests/threads/mlfqs-block.ck:(mlfqs-block) end
tests/threads/mlfqs-fair-2.ck:# -*- perl -*-
tests/threads/mlfqs-fair-20.ck:# -*- perl -*-
tests/threads/mlfqs-fair.c:   The mlfqs-nice-2 test runs 2 threads, one with nice 0, the
tests/threads/mlfqs-fair.c:   The mlfqs-nice-10 test runs 10 threads with nice 0 through 9.
tests/threads/mlfqs-fair.c:  ASSERT (nice_min >= -10);
tests/threads/mlfqs-fair.c:  ASSERT (nice_min + nice_step * (thread_cnt - 1) <= 20);
tests/threads/mlfqs-fair.c:  thread_set_nice (-20);
tests/threads/mlfqs-fair.c:      ti->start_time = start_time;
tests/threads/mlfqs-fair.c:      ti->tick_count = 0;
tests/threads/mlfqs-fair.c:      ti->nice = nice;
tests/threads/mlfqs-fair.c:  thread_set_nice (ti->nice);
tests/threads/mlfqs-fair.c:  timer_sleep (sleep_time - timer_elapsed (ti->start_time));
tests/threads/mlfqs-fair.c:  while (timer_elapsed (ti->start_time) < spin_time) 
tests/threads/mlfqs-fair.c:        ti->tick_count++;
tests/threads/mlfqs-load-1.c:   perl -e '$i++,$a=(59*$a+1)/60while$a<=.5;print "$i\n"'
tests/threads/mlfqs-load-1.ck:# -*- perl -*-
tests/threads/mlfqs-load-1.ck:  unless grep ($_ eq '(mlfqs-load-1) PASS', @output);
tests/threads/mlfqs-load-60.c:      timer_sleep (sleep_until - timer_ticks ());
tests/threads/mlfqs-load-60.c:  timer_sleep (sleep_time - timer_elapsed (start_time));
tests/threads/mlfqs-load-60.c:  timer_sleep (exit_time - timer_elapsed (start_time));
tests/threads/mlfqs-load-60.ck:# -*- perl -*-
tests/threads/mlfqs-load-avg.c:  thread_set_nice (-20);
tests/threads/mlfqs-load-avg.c:      timer_sleep (sleep_until - timer_ticks ());
tests/threads/mlfqs-load-avg.c:  timer_sleep (sleep_time - timer_elapsed (start_time));
tests/threads/mlfqs-load-avg.c:  timer_sleep (exit_time - timer_elapsed (start_time));
tests/threads/mlfqs-load-avg.ck:# -*- perl -*-
tests/threads/mlfqs-load-avg.ck:    my ($ready) = $t < 60 ? $t : $t < 120 ? 120 - $t : 0;
tests/threads/mlfqs-nice-10.ck:# -*- perl -*-
tests/threads/mlfqs-nice-2.ck:# -*- perl -*-
tests/threads/mlfqs-recent-1.c:      timer_sleep (DIV_ROUND_UP (start_time, TIMER_FREQ) - start_time
tests/threads/mlfqs-recent-1.ck:# -*- perl -*-
tests/threads/mlfqs.pm:# -*- perl -*-
tests/threads/mlfqs.pm:	$load_avg = (59/60) * $load_avg + (1/60) * $ready->[$i];
tests/threads/mlfqs.pm:	if (defined $recent_delta->[$i]) {
tests/threads/mlfqs.pm:	    $recent_cpu = ($recent_cpu + $recent_delta->[$i]) * $load_factor;
tests/threads/mlfqs.pm:	      foreach 0...($thread_cnt - 1);
tests/threads/mlfqs.pm:	foreach my $j (0...($thread_cnt - 1)) {
tests/threads/mlfqs.pm:	my ($actual) = $actual_ref->[$t];
tests/threads/mlfqs.pm:	my ($expected) = $expected_ref->[$t];
tests/threads/mlfqs.pm:	  if !defined ($actual) || abs ($actual - $expected) > $maxdiff + .01;
tests/threads/mlfqs.pm:    mlfqs_row ($indep_var, "actual", "<->", "expected", "explanation");
tests/threads/mlfqs.pm:    mlfqs_row ("------", "--------", "---", "--------", '-' x 40);
tests/threads/mlfqs.pm:	my ($actual) = $actual_ref->[$t];
tests/threads/mlfqs.pm:	my ($expected) = $expected_ref->[$t];
tests/threads/mlfqs.pm:	    my ($delta) = abs ($actual - $expected);
tests/threads/mlfqs.pm:		my ($excess) = $delta - $maxdiff;
tests/threads/mlfqs.pm:    printf "%6s %8s %3s %-8s %s\n", @_;
tests/threads/priority-change.c:   longer the highest-priority thread in the system causes it to
tests/threads/priority-change.c:  msg ("Creating a high-priority thread 2.");
tests/threads/priority-change.c:  thread_set_priority (PRI_DEFAULT - 2);
tests/threads/priority-change.c:  thread_set_priority (PRI_DEFAULT - 1);
tests/threads/priority-change.ck:# -*- perl -*-
tests/threads/priority-change.ck:(priority-change) begin
tests/threads/priority-change.ck:(priority-change) Creating a high-priority thread 2.
tests/threads/priority-change.ck:(priority-change) Thread 2 now lowering priority.
tests/threads/priority-change.ck:(priority-change) Thread 2 should have just lowered its priority.
tests/threads/priority-change.ck:(priority-change) Thread 2 exiting.
tests/threads/priority-change.ck:(priority-change) Thread 2 should have just exited.
tests/threads/priority-change.ck:(priority-change) end
tests/threads/priority-condvar.c:/* Tests that cond_signal() wakes up the highest-priority thread
tests/threads/priority-condvar.c:      int priority = PRI_DEFAULT - (i + 7) % 10 - 1;
tests/threads/priority-condvar.ck:# -*- perl -*-
tests/threads/priority-condvar.ck:(priority-condvar) begin
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 23 starting.
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 22 starting.
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 21 starting.
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 30 starting.
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 29 starting.
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 28 starting.
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 27 starting.
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 26 starting.
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 25 starting.
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 24 starting.
tests/threads/priority-condvar.ck:(priority-condvar) Signaling...
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 30 woke up.
tests/threads/priority-condvar.ck:(priority-condvar) Signaling...
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 29 woke up.
tests/threads/priority-condvar.ck:(priority-condvar) Signaling...
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 28 woke up.
tests/threads/priority-condvar.ck:(priority-condvar) Signaling...
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 27 woke up.
tests/threads/priority-condvar.ck:(priority-condvar) Signaling...
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 26 woke up.
tests/threads/priority-condvar.ck:(priority-condvar) Signaling...
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 25 woke up.
tests/threads/priority-condvar.ck:(priority-condvar) Signaling...
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 24 woke up.
tests/threads/priority-condvar.ck:(priority-condvar) Signaling...
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 23 woke up.
tests/threads/priority-condvar.ck:(priority-condvar) Signaling...
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 22 woke up.
tests/threads/priority-condvar.ck:(priority-condvar) Signaling...
tests/threads/priority-condvar.ck:(priority-condvar) Thread priority 21 woke up.
tests/threads/priority-condvar.ck:(priority-condvar) end
tests/threads/priority-donate-chain.c:   Subsequently, thread[i] attempts to acquire lock[i-1], which is held by
tests/threads/priority-donate-chain.c:   thread[i-1], except for lock[0], which is held by the main thread.
tests/threads/priority-donate-chain.c:   Because the lock is held, thread[i] donates its priority to thread[i-1],
tests/threads/priority-donate-chain.c:   which donates to thread[i-2], and so on until the main thread
tests/threads/priority-donate-chain.c:  struct lock locks[NESTING_DEPTH - 1];
tests/threads/priority-donate-chain.c:  for (i = 0; i < NESTING_DEPTH - 1; i++)
tests/threads/priority-donate-chain.c:      lock_pairs[i].first = i < NESTING_DEPTH - 1 ? locks + i: NULL;
tests/threads/priority-donate-chain.c:      lock_pairs[i].second = locks + i - 1;
tests/threads/priority-donate-chain.c:      thread_create (name, thread_priority - 1, interloper_thread_func, NULL);
tests/threads/priority-donate-chain.c:  if (locks->first)
tests/threads/priority-donate-chain.c:    lock_acquire (locks->first);
tests/threads/priority-donate-chain.c:  lock_acquire (locks->second);
tests/threads/priority-donate-chain.c:  lock_release (locks->second);
tests/threads/priority-donate-chain.c:        thread_name (), (NESTING_DEPTH - 1) * 3,
tests/threads/priority-donate-chain.c:  if (locks->first)
tests/threads/priority-donate-chain.c:    lock_release (locks->first);
tests/threads/priority-donate-chain.ck:# -*- perl -*-
tests/threads/priority-donate-chain.ck:(priority-donate-chain) begin
tests/threads/priority-donate-chain.ck:(priority-donate-chain) main got lock.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) main should have priority 3.  Actual priority: 3.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) main should have priority 6.  Actual priority: 6.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) main should have priority 9.  Actual priority: 9.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) main should have priority 12.  Actual priority: 12.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) main should have priority 15.  Actual priority: 15.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) main should have priority 18.  Actual priority: 18.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) main should have priority 21.  Actual priority: 21.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 1 got lock
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 1 should have priority 21. Actual priority: 21
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 2 got lock
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 2 should have priority 21. Actual priority: 21
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 3 got lock
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 3 should have priority 21. Actual priority: 21
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 4 got lock
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 4 should have priority 21. Actual priority: 21
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 5 got lock
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 5 should have priority 21. Actual priority: 21
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 6 got lock
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 6 should have priority 21. Actual priority: 21
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 7 got lock
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 7 should have priority 21. Actual priority: 21
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 7 finishing with priority 21.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) interloper 7 finished.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 6 finishing with priority 18.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) interloper 6 finished.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 5 finishing with priority 15.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) interloper 5 finished.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 4 finishing with priority 12.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) interloper 4 finished.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 3 finishing with priority 9.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) interloper 3 finished.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 2 finishing with priority 6.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) interloper 2 finished.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) thread 1 finishing with priority 3.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) interloper 1 finished.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) main finishing with priority 0.
tests/threads/priority-donate-chain.ck:(priority-donate-chain) end
tests/threads/priority-donate-lower.c:   higher-priority thread that blocks acquiring the lock, causing
tests/threads/priority-donate-lower.c:  thread_set_priority (PRI_DEFAULT - 10);
tests/threads/priority-donate-lower.c:       PRI_DEFAULT - 10, thread_get_priority ());
tests/threads/priority-donate-lower.ck:# -*- perl -*-
tests/threads/priority-donate-lower.ck:(priority-donate-lower) begin
tests/threads/priority-donate-lower.ck:(priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
tests/threads/priority-donate-lower.ck:(priority-donate-lower) Lowering base priority...
tests/threads/priority-donate-lower.ck:(priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
tests/threads/priority-donate-lower.ck:(priority-donate-lower) acquire: got the lock
tests/threads/priority-donate-lower.ck:(priority-donate-lower) acquire: done
tests/threads/priority-donate-lower.ck:(priority-donate-lower) acquire must already have finished.
tests/threads/priority-donate-lower.ck:(priority-donate-lower) Main thread should have priority 21.  Actual priority: 21.
tests/threads/priority-donate-lower.ck:(priority-donate-lower) end
tests/threads/priority-donate-multiple.c:   higher-priority threads.  Each of these threads blocks
tests/threads/priority-donate-multiple.ck:# -*- perl -*-
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) begin
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) Main thread should have priority 32.  Actual priority: 32.
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) Main thread should have priority 33.  Actual priority: 33.
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) Thread b acquired lock b.
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) Thread b finished.
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) Thread b should have just finished.
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) Main thread should have priority 32.  Actual priority: 32.
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) Thread a acquired lock a.
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) Thread a finished.
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) Thread a should have just finished.
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) Main thread should have priority 31.  Actual priority: 31.
tests/threads/priority-donate-multiple.ck:(priority-donate-multiple) end
tests/threads/priority-donate-multiple2.c:   higher-priority threads.  The first two of these threads block
tests/threads/priority-donate-multiple2.c:   order compared to priority-donate-multiple.c.
tests/threads/priority-donate-multiple2.ck:# -*- perl -*-
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) begin
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) Main thread should have priority 34.  Actual priority: 34.
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 36.
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 36.
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) Thread b acquired lock b.
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) Thread b finished.
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) Thread a acquired lock a.
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) Thread a finished.
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) Thread c finished.
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) Threads b, a, c should have just finished, in that order.
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) Main thread should have priority 31.  Actual priority: 31.
tests/threads/priority-donate-multiple2.ck:(priority-donate-multiple2) end
tests/threads/priority-donate-nest.c:/* Low-priority main thread L acquires lock A.  Medium-priority
tests/threads/priority-donate-nest.c:   High-priority thread H then blocks on acquiring lock B.  Thus,
tests/threads/priority-donate-nest.c:  lock_acquire (locks->b);
tests/threads/priority-donate-nest.c:  lock_acquire (locks->a);
tests/threads/priority-donate-nest.c:  lock_release (locks->a);
tests/threads/priority-donate-nest.c:  lock_release (locks->b);
tests/threads/priority-donate-nest.ck:# -*- perl -*-
tests/threads/priority-donate-nest.ck:(priority-donate-nest) begin
tests/threads/priority-donate-nest.ck:(priority-donate-nest) Low thread should have priority 32.  Actual priority: 32.
tests/threads/priority-donate-nest.ck:(priority-donate-nest) Low thread should have priority 33.  Actual priority: 33.
tests/threads/priority-donate-nest.ck:(priority-donate-nest) Medium thread should have priority 33.  Actual priority: 33.
tests/threads/priority-donate-nest.ck:(priority-donate-nest) Medium thread got the lock.
tests/threads/priority-donate-nest.ck:(priority-donate-nest) High thread got the lock.
tests/threads/priority-donate-nest.ck:(priority-donate-nest) High thread finished.
tests/threads/priority-donate-nest.ck:(priority-donate-nest) High thread should have just finished.
tests/threads/priority-donate-nest.ck:(priority-donate-nest) Middle thread finished.
tests/threads/priority-donate-nest.ck:(priority-donate-nest) Medium thread should just have finished.
tests/threads/priority-donate-nest.ck:(priority-donate-nest) Low thread should have priority 31.  Actual priority: 31.
tests/threads/priority-donate-nest.ck:(priority-donate-nest) end
tests/threads/priority-donate-one.c:   higher-priority threads that block acquiring the lock, causing
tests/threads/priority-donate-one.ck:# -*- perl -*-
tests/threads/priority-donate-one.ck:(priority-donate-one) begin
tests/threads/priority-donate-one.ck:(priority-donate-one) This thread should have priority 32.  Actual priority: 32.
tests/threads/priority-donate-one.ck:(priority-donate-one) This thread should have priority 33.  Actual priority: 33.
tests/threads/priority-donate-one.ck:(priority-donate-one) acquire2: got the lock
tests/threads/priority-donate-one.ck:(priority-donate-one) acquire2: done
tests/threads/priority-donate-one.ck:(priority-donate-one) acquire1: got the lock
tests/threads/priority-donate-one.ck:(priority-donate-one) acquire1: done
tests/threads/priority-donate-one.ck:(priority-donate-one) acquire2, acquire1 must already have finished, in that order.
tests/threads/priority-donate-one.ck:(priority-donate-one) This should be the last line before finishing this test.
tests/threads/priority-donate-one.ck:(priority-donate-one) end
tests/threads/priority-donate-sema.c:  lock_acquire (&ls->lock);
tests/threads/priority-donate-sema.c:  sema_down (&ls->sema);
tests/threads/priority-donate-sema.c:  lock_release (&ls->lock);
tests/threads/priority-donate-sema.c:  sema_down (&ls->sema);
tests/threads/priority-donate-sema.c:  lock_acquire (&ls->lock);
tests/threads/priority-donate-sema.c:  sema_up (&ls->sema);
tests/threads/priority-donate-sema.c:  lock_release (&ls->lock);
tests/threads/priority-donate-sema.ck:# -*- perl -*-
tests/threads/priority-donate-sema.ck:(priority-donate-sema) begin
tests/threads/priority-donate-sema.ck:(priority-donate-sema) Thread L acquired lock.
tests/threads/priority-donate-sema.ck:(priority-donate-sema) Thread L downed semaphore.
tests/threads/priority-donate-sema.ck:(priority-donate-sema) Thread H acquired lock.
tests/threads/priority-donate-sema.ck:(priority-donate-sema) Thread H finished.
tests/threads/priority-donate-sema.ck:(priority-donate-sema) Thread M finished.
tests/threads/priority-donate-sema.ck:(priority-donate-sema) Thread L finished.
tests/threads/priority-donate-sema.ck:(priority-donate-sema) Main thread finished.
tests/threads/priority-donate-sema.ck:(priority-donate-sema) end
tests/threads/priority-fifo.c:   that they consistently run in the same round-robin order.
tests/threads/priority-fifo.c:      d->id = i;
tests/threads/priority-fifo.c:      d->iterations = 0;
tests/threads/priority-fifo.c:      d->lock = &lock;
tests/threads/priority-fifo.c:      d->op = &op;
tests/threads/priority-fifo.c:        printf ("(priority-fifo) iteration:");
tests/threads/priority-fifo.c:      printf (" %d", d->id);
tests/threads/priority-fifo.c:      d->iterations++;
tests/threads/priority-fifo.c:      lock_acquire (data->lock);
tests/threads/priority-fifo.c:      *(*data->op)++ = data->id;
tests/threads/priority-fifo.c:      lock_release (data->lock);
tests/threads/priority-fifo.ck:# -*- perl -*-
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:# (priority-fifo) iteration: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
tests/threads/priority-fifo.ck:my (@t) = (-1) x $thread_cnt;
tests/threads/priority-preempt.c:/* Ensures that a high-priority thread really preempts.
tests/threads/priority-preempt.c:  thread_create ("high-priority", PRI_DEFAULT + 1, simple_thread_func, NULL);
tests/threads/priority-preempt.c:  msg ("The high-priority thread should have already completed.");
tests/threads/priority-preempt.ck:# -*- perl -*-
tests/threads/priority-preempt.ck:(priority-preempt) begin
tests/threads/priority-preempt.ck:(priority-preempt) Thread high-priority iteration 0
tests/threads/priority-preempt.ck:(priority-preempt) Thread high-priority iteration 1
tests/threads/priority-preempt.ck:(priority-preempt) Thread high-priority iteration 2
tests/threads/priority-preempt.ck:(priority-preempt) Thread high-priority iteration 3
tests/threads/priority-preempt.ck:(priority-preempt) Thread high-priority iteration 4
tests/threads/priority-preempt.ck:(priority-preempt) Thread high-priority done!
tests/threads/priority-preempt.ck:(priority-preempt) The high-priority thread should have already completed.
tests/threads/priority-preempt.ck:(priority-preempt) end
tests/threads/priority-sema.c:/* Tests that the highest-priority thread waiting on a semaphore
tests/threads/priority-sema.c:      int priority = PRI_DEFAULT - (i + 3) % 10 - 1;
tests/threads/priority-sema.ck:# -*- perl -*-
tests/threads/priority-sema.ck:(priority-sema) begin
tests/threads/priority-sema.ck:(priority-sema) Thread priority 30 woke up.
tests/threads/priority-sema.ck:(priority-sema) Back in main thread.
tests/threads/priority-sema.ck:(priority-sema) Thread priority 29 woke up.
tests/threads/priority-sema.ck:(priority-sema) Back in main thread.
tests/threads/priority-sema.ck:(priority-sema) Thread priority 28 woke up.
tests/threads/priority-sema.ck:(priority-sema) Back in main thread.
tests/threads/priority-sema.ck:(priority-sema) Thread priority 27 woke up.
tests/threads/priority-sema.ck:(priority-sema) Back in main thread.
tests/threads/priority-sema.ck:(priority-sema) Thread priority 26 woke up.
tests/threads/priority-sema.ck:(priority-sema) Back in main thread.
tests/threads/priority-sema.ck:(priority-sema) Thread priority 25 woke up.
tests/threads/priority-sema.ck:(priority-sema) Back in main thread.
tests/threads/priority-sema.ck:(priority-sema) Thread priority 24 woke up.
tests/threads/priority-sema.ck:(priority-sema) Back in main thread.
tests/threads/priority-sema.ck:(priority-sema) Thread priority 23 woke up.
tests/threads/priority-sema.ck:(priority-sema) Back in main thread.
tests/threads/priority-sema.ck:(priority-sema) Thread priority 22 woke up.
tests/threads/priority-sema.ck:(priority-sema) Back in main thread.
tests/threads/priority-sema.ck:(priority-sema) Thread priority 21 woke up.
tests/threads/priority-sema.ck:(priority-sema) Back in main thread.
tests/threads/priority-sema.ck:(priority-sema) end
tests/threads/Rubric.alarm:4	alarm-single
tests/threads/Rubric.alarm:4	alarm-multiple
tests/threads/Rubric.alarm:4	alarm-simultaneous
tests/threads/Rubric.alarm:4	alarm-priority
tests/threads/Rubric.alarm:1	alarm-zero
tests/threads/Rubric.alarm:1	alarm-negative
tests/threads/Rubric.mlfqs:5	mlfqs-load-1
tests/threads/Rubric.mlfqs:5	mlfqs-load-60
tests/threads/Rubric.mlfqs:3	mlfqs-load-avg
tests/threads/Rubric.mlfqs:5	mlfqs-recent-1
tests/threads/Rubric.mlfqs:5	mlfqs-fair-2
tests/threads/Rubric.mlfqs:3	mlfqs-fair-20
tests/threads/Rubric.mlfqs:4	mlfqs-nice-2
tests/threads/Rubric.mlfqs:2	mlfqs-nice-10
tests/threads/Rubric.mlfqs:5	mlfqs-block
tests/threads/Rubric.priority:3	priority-change
tests/threads/Rubric.priority:3	priority-preempt
tests/threads/Rubric.priority:3	priority-fifo
tests/threads/Rubric.priority:3	priority-sema
tests/threads/Rubric.priority:3	priority-condvar
tests/threads/Rubric.priority:3	priority-donate-one
tests/threads/Rubric.priority:3	priority-donate-multiple
tests/threads/Rubric.priority:3	priority-donate-multiple2
tests/threads/Rubric.priority:3	priority-donate-nest
tests/threads/Rubric.priority:5	priority-donate-chain
tests/threads/Rubric.priority:3	priority-donate-sema
tests/threads/Rubric.priority:3	priority-donate-lower
tests/threads/tests.c:    {"alarm-single", test_alarm_single},
tests/threads/tests.c:    {"alarm-multiple", test_alarm_multiple},
tests/threads/tests.c:    {"alarm-simultaneous", test_alarm_simultaneous},
tests/threads/tests.c:    {"alarm-priority", test_alarm_priority},
tests/threads/tests.c:    {"alarm-zero", test_alarm_zero},
tests/threads/tests.c:    {"alarm-negative", test_alarm_negative},
tests/threads/tests.c:    {"priority-change", test_priority_change},
tests/threads/tests.c:    {"priority-donate-one", test_priority_donate_one},
tests/threads/tests.c:    {"priority-donate-multiple", test_priority_donate_multiple},
tests/threads/tests.c:    {"priority-donate-multiple2", test_priority_donate_multiple2},
tests/threads/tests.c:    {"priority-donate-nest", test_priority_donate_nest},
tests/threads/tests.c:    {"priority-donate-sema", test_priority_donate_sema},
tests/threads/tests.c:    {"priority-donate-lower", test_priority_donate_lower},
tests/threads/tests.c:    {"priority-donate-chain", test_priority_donate_chain},
tests/threads/tests.c:    {"priority-fifo", test_priority_fifo},
tests/threads/tests.c:    {"priority-preempt", test_priority_preempt},
tests/threads/tests.c:    {"priority-sema", test_priority_sema},
tests/threads/tests.c:    {"priority-condvar", test_priority_condvar},
tests/threads/tests.c:    {"mlfqs-load-1", test_mlfqs_load_1},
tests/threads/tests.c:    {"mlfqs-load-60", test_mlfqs_load_60},
tests/threads/tests.c:    {"mlfqs-load-avg", test_mlfqs_load_avg},
tests/threads/tests.c:    {"mlfqs-recent-1", test_mlfqs_recent_1},
tests/threads/tests.c:    {"mlfqs-fair-2", test_mlfqs_fair_2},
tests/threads/tests.c:    {"mlfqs-fair-20", test_mlfqs_fair_20},
tests/threads/tests.c:    {"mlfqs-nice-2", test_mlfqs_nice_2},
tests/threads/tests.c:    {"mlfqs-nice-10", test_mlfqs_nice_10},
tests/threads/tests.c:    {"mlfqs-block", test_mlfqs_block},
tests/threads/tests.c:    if (!strcmp (name, t->name))
tests/threads/tests.c:        t->function ();
tests/threads/tests.c:   and following it with a new-line character. */
tests/threads/tests.c:   and following it with a new-line character,
tests/userprog/args-many.ck:# -*- perl -*-
tests/userprog/args-many.ck:(args) argv[0] = 'args-many'
tests/userprog/args-many.ck:args-many: exit(0)
tests/userprog/args-dbl-space.ck:# -*- perl -*-
tests/userprog/args-dbl-space.ck:(args) argv[0] = 'args-dbl-space'
tests/userprog/args-dbl-space.ck:args-dbl-space: exit(0)
tests/userprog/args-multiple.ck:# -*- perl -*-
tests/userprog/args-multiple.ck:(args) argv[0] = 'args-multiple'
tests/userprog/args-multiple.ck:args-multiple: exit(0)
tests/userprog/args-none.ck:# -*- perl -*-
tests/userprog/args-none.ck:(args) argv[0] = 'args-none'
tests/userprog/args-none.ck:args-none: exit(0)
tests/userprog/args-single.ck:# -*- perl -*-
tests/userprog/args-single.ck:(args) argv[0] = 'args-single'
tests/userprog/args-single.ck:args-single: exit(0)
tests/userprog/args.c:/* Prints the command-line arguments.
tests/userprog/args.c:   This program is used for all of the args-* tests.  Grading is
tests/userprog/args.c:   done differently for each of the args-* tests based on the
tests/userprog/bad-jump.c:   This should terminate the process with a -1 exit code. */
tests/userprog/bad-jump.c:  msg ("Congratulations - you have successfully called NULL: %d", 
tests/userprog/bad-jump.c:  fail ("should have exited with -1");
tests/userprog/bad-jump.ck:# -*- perl -*-
tests/userprog/bad-jump.ck:(bad-jump) begin
tests/userprog/bad-jump.ck:bad-jump: exit(-1)
tests/userprog/bad-jump2.c:   This should terminate the process with a -1 exit code. */
tests/userprog/bad-jump2.c:  msg ("Congratulations - you have successfully called kernel code: %d", 
tests/userprog/bad-jump2.c:  fail ("should have exited with -1");
tests/userprog/bad-jump2.ck:# -*- perl -*-
tests/userprog/bad-jump2.ck:(bad-jump2) begin
tests/userprog/bad-jump2.ck:bad-jump2: exit(-1)
tests/userprog/bad-read.c:   This should terminate the process with a -1 exit code. */
tests/userprog/bad-read.c:  msg ("Congratulations - you have successfully dereferenced NULL: %d", 
tests/userprog/bad-read.c:  fail ("should have exited with -1");
tests/userprog/bad-read.ck:# -*- perl -*-
tests/userprog/bad-read.ck:(bad-read) begin
tests/userprog/bad-read.ck:bad-read: exit(-1)
tests/userprog/bad-read2.c:   This should terminate the process with a -1 exit code. */
tests/userprog/bad-read2.c:  msg ("Congratulations - you have successfully read kernel memory: %d", 
tests/userprog/bad-read2.c:  fail ("should have exited with -1");
tests/userprog/bad-read2.ck:# -*- perl -*-
tests/userprog/bad-read2.ck:(bad-read2) begin
tests/userprog/bad-read2.ck:bad-read2: exit(-1)
tests/userprog/bad-write.c:   This should terminate the process with a -1 exit code. */
tests/userprog/bad-write.c:  fail ("should have exited with -1");
tests/userprog/bad-write.ck:# -*- perl -*-
tests/userprog/bad-write.ck:(bad-write) begin
tests/userprog/bad-write.ck:bad-write: exit(-1)
tests/userprog/bad-write2.c:   This should terminate the process with a -1 exit code. */
tests/userprog/bad-write2.c:  fail ("should have exited with -1");
tests/userprog/bad-write2.ck:# -*- perl -*-
tests/userprog/bad-write2.ck:(bad-write2) begin
tests/userprog/bad-write2.ck:bad-write2: exit(-1)
tests/userprog/boundary.c:  if (p - dst < 2048)
tests/userprog/boundary.c:  p -= strlen (src) < 4096 ? strlen (src) / 2 : 4096;
tests/userprog/boundary.c:  return (void *) ROUND_UP ((uintptr_t) (dst + sizeof(dst) - 1), 4096);
tests/userprog/child-bad.c:/* Child process run by wait-killed test.
tests/userprog/child-bad.c:   -1 exit code. */
tests/userprog/child-bad.c:  fail ("should have exited with -1");
tests/userprog/child-close.c:/* Child process run by multi-child-fd test.
tests/userprog/child-close.c:   command-line argument.  This is invalid, because file
tests/userprog/child-close.c:   -1 exit code. */
tests/userprog/child-close.c:  test_name = "child-close";
tests/userprog/child-close.c:    fail ("bad command-line arguments");
tests/userprog/child-rox.c:/* Child process run by rox-child and rox-multichild tests.
tests/userprog/child-rox.c:   first command-line argument. */
tests/userprog/child-rox.c:  CHECK ((handle = open ("child-rox")) > 1, "open \"child-rox\"");
tests/userprog/child-rox.c:         "try to write \"child-rox\"");
tests/userprog/child-rox.c:  test_name = "child-rox";
tests/userprog/child-rox.c:    fail ("bad command-line arguments");
tests/userprog/child-rox.c:      snprintf (cmd, sizeof cmd, "child-rox %d", atoi (argv[1]) - 1);
tests/userprog/child-rox.c:      CHECK ((child = exec (cmd)) != -1, "exec \"%s\"", cmd);
tests/userprog/child-rox.c:      CHECK (wait (child) == 12, "wait for \"child-rox\"");
tests/userprog/child-simple.c:/* Child process run by exec-multiple, exec-one, wait-simple, and
tests/userprog/child-simple.c:   wait-twice tests.
tests/userprog/child-simple.c:  test_name = "child-simple";
tests/userprog/close-bad-fd.c:   or terminate with exit code -1. */
tests/userprog/close-bad-fd.ck:# -*- perl -*-
tests/userprog/close-bad-fd.ck:(close-bad-fd) begin
tests/userprog/close-bad-fd.ck:(close-bad-fd) end
tests/userprog/close-bad-fd.ck:close-bad-fd: exit(0)
tests/userprog/close-bad-fd.ck:(close-bad-fd) begin
tests/userprog/close-bad-fd.ck:close-bad-fd: exit(-1)
tests/userprog/close-normal.ck:# -*- perl -*-
tests/userprog/close-normal.ck:(close-normal) begin
tests/userprog/close-normal.ck:(close-normal) open "sample.txt"
tests/userprog/close-normal.ck:(close-normal) close "sample.txt"
tests/userprog/close-normal.ck:(close-normal) end
tests/userprog/close-normal.ck:close-normal: exit(0)
tests/userprog/close-stdin.c:   fail silently or terminate with exit code -1. */
tests/userprog/close-stdin.ck:# -*- perl -*-
tests/userprog/close-stdin.ck:(close-stdin) begin
tests/userprog/close-stdin.ck:(close-stdin) end
tests/userprog/close-stdin.ck:close-stdin: exit(0)
tests/userprog/close-stdin.ck:(close-stdin) begin
tests/userprog/close-stdin.ck:close-stdin: exit(-1)
tests/userprog/close-stdout.c:   fail silently or terminate with exit code -1. */
tests/userprog/close-stdout.ck:# -*- perl -*-
tests/userprog/close-stdout.ck:(close-stdout) begin
tests/userprog/close-stdout.ck:(close-stdout) end
tests/userprog/close-stdout.ck:close-stdout: exit(0)
tests/userprog/close-stdout.ck:(close-stdout) begin
tests/userprog/close-stdout.ck:close-stdout: exit(-1)
tests/userprog/close-twice.c:   -1. */
tests/userprog/close-twice.ck:# -*- perl -*-
tests/userprog/close-twice.ck:(close-twice) begin
tests/userprog/close-twice.ck:(close-twice) open "sample.txt"
tests/userprog/close-twice.ck:(close-twice) close "sample.txt"
tests/userprog/close-twice.ck:(close-twice) close "sample.txt" again
tests/userprog/close-twice.ck:(close-twice) end
tests/userprog/close-twice.ck:close-twice: exit(0)
tests/userprog/close-twice.ck:(close-twice) begin
tests/userprog/close-twice.ck:(close-twice) open "sample.txt"
tests/userprog/close-twice.ck:(close-twice) close "sample.txt"
tests/userprog/close-twice.ck:(close-twice) close "sample.txt" again
tests/userprog/close-twice.ck:close-twice: exit(-1)
tests/userprog/create-bad-ptr.c:   -1. */
tests/userprog/create-bad-ptr.ck:# -*- perl -*-
tests/userprog/create-bad-ptr.ck:(create-bad-ptr) begin
tests/userprog/create-bad-ptr.ck:create-bad-ptr: exit(-1)
tests/userprog/create-bound.ck:# -*- perl -*-
tests/userprog/create-bound.ck:(create-bound) begin
tests/userprog/create-bound.ck:(create-bound) create("quux.dat"): 1
tests/userprog/create-bound.ck:(create-bound) end
tests/userprog/create-bound.ck:create-bound: exit(0)
tests/userprog/create-empty.ck:# -*- perl -*-
tests/userprog/create-empty.ck:(create-empty) begin
tests/userprog/create-empty.ck:(create-empty) create(""): 0
tests/userprog/create-empty.ck:(create-empty) end
tests/userprog/create-empty.ck:create-empty: exit(0)
tests/userprog/create-empty.ck:(create-empty) begin
tests/userprog/create-empty.ck:create-empty: exit(-1)
tests/userprog/create-exists.c:  CHECK (!create ("quux.dat", 0), "try to re-create quux.dat");
tests/userprog/create-exists.c:  CHECK (!create ("warble.dat", 0), "try to re-create quux.dat");
tests/userprog/create-exists.ck:# -*- perl -*-
tests/userprog/create-exists.ck:(create-exists) begin
tests/userprog/create-exists.ck:(create-exists) create quux.dat
tests/userprog/create-exists.ck:(create-exists) create warble.dat
tests/userprog/create-exists.ck:(create-exists) try to re-create quux.dat
tests/userprog/create-exists.ck:(create-exists) create baffle.dat
tests/userprog/create-exists.ck:(create-exists) try to re-create quux.dat
tests/userprog/create-exists.ck:(create-exists) end
tests/userprog/create-exists.ck:create-exists: exit(0)
tests/userprog/create-long.c:  name[sizeof name - 1] = '\0';
tests/userprog/create-long.ck:# -*- perl -*-
tests/userprog/create-long.ck:(create-long) begin
tests/userprog/create-long.ck:(create-long) create("x..."): 0
tests/userprog/create-long.ck:(create-long) end
tests/userprog/create-long.ck:create-long: exit(0)
tests/userprog/create-normal.ck:# -*- perl -*-
tests/userprog/create-normal.ck:(create-normal) begin
tests/userprog/create-normal.ck:(create-normal) create quux.dat
tests/userprog/create-normal.ck:(create-normal) end
tests/userprog/create-normal.ck:create-normal: exit(0)
tests/userprog/create-null.c:   The process must be terminated with exit code -1. */
tests/userprog/create-null.ck:# -*- perl -*-
tests/userprog/create-null.ck:(create-null) begin
tests/userprog/create-null.ck:create-null: exit(-1)
tests/userprog/exec-arg.c:  wait (exec ("child-args childarg"));
tests/userprog/exec-arg.ck:# -*- perl -*-
tests/userprog/exec-arg.ck:(exec-arg) begin
tests/userprog/exec-arg.ck:(args) argv[0] = 'child-args'
tests/userprog/exec-arg.ck:child-args: exit(0)
tests/userprog/exec-arg.ck:(exec-arg) end
tests/userprog/exec-arg.ck:exec-arg: exit(0)
tests/userprog/exec-bad-ptr.c:   The process must be terminated with -1 exit code. */
tests/userprog/exec-bad-ptr.ck:# -*- perl -*-
tests/userprog/exec-bad-ptr.ck:(exec-bad-ptr) begin
tests/userprog/exec-bad-ptr.ck:(exec-bad-ptr) end
tests/userprog/exec-bad-ptr.ck:exec-bad-ptr: exit(0)
tests/userprog/exec-bad-ptr.ck:(exec-bad-ptr) begin
tests/userprog/exec-bad-ptr.ck:exec-bad-ptr: exit(-1)
tests/userprog/exec-bound-2.c:   positioned such that only its first byte is valid  memory (bytes 1-3
tests/userprog/exec-bound-2.c:#include <syscall-nr.h>
tests/userprog/exec-bound-2.c:  char *p = get_bad_boundary () - 5;
tests/userprog/exec-bound-2.ck:# -*- perl -*-
tests/userprog/exec-bound-2.ck:(exec-bound-2) begin
tests/userprog/exec-bound-2.ck:exec-bound-2: exit(-1)
tests/userprog/exec-bound-3.c:#include <syscall-nr.h>
tests/userprog/exec-bound-3.c:  char *p = get_bad_boundary () - 1;
tests/userprog/exec-bound-3.ck:# -*- perl -*-
tests/userprog/exec-bound-3.ck:(exec-bound-3) begin
tests/userprog/exec-bound-3.ck:exec-bound-3: exit(-1)
tests/userprog/exec-bound.c:  wait (exec (copy_string_across_boundary("child-args arg1 arg2")));
tests/userprog/exec-bound.ck:# -*- perl -*-
tests/userprog/exec-bound.ck:(exec-bound) begin
tests/userprog/exec-bound.ck:(args) argv[0] = 'child-args'
tests/userprog/exec-bound.ck:child-args: exit(0)
tests/userprog/exec-bound.ck:(exec-bound) end
tests/userprog/exec-bound.ck:exec-bound: exit(0)
tests/userprog/exec-missing.c:   The exec system call must return -1. */
tests/userprog/exec-missing.c:  msg ("exec(\"no-such-file\"): %d", exec ("no-such-file"));
tests/userprog/exec-missing.ck:# -*- perl -*-
tests/userprog/exec-missing.ck:(exec-missing) begin
tests/userprog/exec-missing.ck:load: no-such-file: open failed
tests/userprog/exec-missing.ck:(exec-missing) exec("no-such-file"): -1
tests/userprog/exec-missing.ck:(exec-missing) end
tests/userprog/exec-missing.ck:exec-missing: exit(0)
tests/userprog/exec-missing.ck:(exec-missing) begin
tests/userprog/exec-missing.ck:(exec-missing) exec("no-such-file"): -1
tests/userprog/exec-missing.ck:(exec-missing) end
tests/userprog/exec-missing.ck:exec-missing: exit(0)
tests/userprog/exec-missing.ck:(exec-missing) begin
tests/userprog/exec-missing.ck:load: no-such-file: open failed
tests/userprog/exec-missing.ck:no-such-file: exit(-1)
tests/userprog/exec-missing.ck:(exec-missing) exec("no-such-file"): -1
tests/userprog/exec-missing.ck:(exec-missing) end
tests/userprog/exec-missing.ck:exec-missing: exit(0)
tests/userprog/exec-missing.ck:(exec-missing) begin
tests/userprog/exec-missing.ck:load: no-such-file: open failed
tests/userprog/exec-missing.ck:(exec-missing) exec("no-such-file"): -1
tests/userprog/exec-missing.ck:no-such-file: exit(-1)
tests/userprog/exec-missing.ck:(exec-missing) end
tests/userprog/exec-missing.ck:exec-missing: exit(0)
tests/userprog/exec-multiple.c:  wait (exec ("child-simple"));
tests/userprog/exec-multiple.c:  wait (exec ("child-simple"));
tests/userprog/exec-multiple.c:  wait (exec ("child-simple"));
tests/userprog/exec-multiple.c:  wait (exec ("child-simple"));
tests/userprog/exec-multiple.ck:# -*- perl -*-
tests/userprog/exec-multiple.ck:(exec-multiple) begin
tests/userprog/exec-multiple.ck:(child-simple) run
tests/userprog/exec-multiple.ck:child-simple: exit(81)
tests/userprog/exec-multiple.ck:(child-simple) run
tests/userprog/exec-multiple.ck:child-simple: exit(81)
tests/userprog/exec-multiple.ck:(child-simple) run
tests/userprog/exec-multiple.ck:child-simple: exit(81)
tests/userprog/exec-multiple.ck:(child-simple) run
tests/userprog/exec-multiple.ck:child-simple: exit(81)
tests/userprog/exec-multiple.ck:(exec-multiple) end
tests/userprog/exec-multiple.ck:exec-multiple: exit(0)
tests/userprog/exec-once.c:  wait (exec ("child-simple"));
tests/userprog/exec-once.ck:# -*- perl -*-
tests/userprog/exec-once.ck:(exec-once) begin
tests/userprog/exec-once.ck:(child-simple) run
tests/userprog/exec-once.ck:child-simple: exit(81)
tests/userprog/exec-once.ck:(exec-once) end
tests/userprog/exec-once.ck:exec-once: exit(0)
tests/userprog/exit.ck:# -*- perl -*-
tests/userprog/Grading:10%	tests/userprog/no-vm/Rubric
tests/userprog/halt.ck:# -*- perl -*-
tests/userprog/halt.ck:fail "found 'fail' message--halt didn't really halt\n"
tests/userprog/Make.tests:# -*- makefile -*-
tests/userprog/Make.tests:tests/%.output: FILESYSSOURCE = --filesys-size=2
tests/userprog/Make.tests:tests/%.output: PUTFILES = $(filter-out kernel.bin loader.bin, $^)
tests/userprog/Make.tests:tests/userprog_TESTS = $(addprefix tests/userprog/,args-none            \
tests/userprog/Make.tests:args-single args-multiple args-many args-dbl-space sc-bad-sp            \
tests/userprog/Make.tests:sc-bad-arg sc-boundary sc-boundary-2 sc-boundary-3 halt exit            \
tests/userprog/Make.tests:create-normal create-empty create-null create-bad-ptr create-long       \
tests/userprog/Make.tests:create-exists create-bound open-normal open-missing open-boundary       \
tests/userprog/Make.tests:open-empty open-null open-bad-ptr open-twice close-normal               \
tests/userprog/Make.tests:close-twice close-stdin close-stdout close-bad-fd read-normal           \
tests/userprog/Make.tests:read-bad-ptr read-boundary read-zero read-stdout read-bad-fd            \
tests/userprog/Make.tests:write-normal write-bad-ptr write-boundary write-zero write-stdin        \
tests/userprog/Make.tests:write-bad-fd exec-once exec-arg exec-bound exec-bound-2                 \
tests/userprog/Make.tests:exec-bound-3 exec-multiple exec-missing exec-bad-ptr wait-simple        \
tests/userprog/Make.tests:wait-twice wait-killed wait-bad-pid multi-recurse multi-child-fd        \
tests/userprog/Make.tests:rox-simple rox-child rox-multichild bad-read bad-write bad-read2        \
tests/userprog/Make.tests:bad-write2 bad-jump bad-jump2)
tests/userprog/Make.tests:tests/userprog/,child-simple child-args child-bad child-close child-rox)
tests/userprog/Make.tests:tests/userprog/args-none_SRC = tests/userprog/args.c
tests/userprog/Make.tests:tests/userprog/args-single_SRC = tests/userprog/args.c
tests/userprog/Make.tests:tests/userprog/args-multiple_SRC = tests/userprog/args.c
tests/userprog/Make.tests:tests/userprog/args-many_SRC = tests/userprog/args.c
tests/userprog/Make.tests:tests/userprog/args-dbl-space_SRC = tests/userprog/args.c
tests/userprog/Make.tests:tests/userprog/sc-bad-sp_SRC = tests/userprog/sc-bad-sp.c tests/main.c
tests/userprog/Make.tests:tests/userprog/sc-bad-arg_SRC = tests/userprog/sc-bad-arg.c tests/main.c
tests/userprog/Make.tests:tests/userprog/bad-read_SRC = tests/userprog/bad-read.c tests/main.c
tests/userprog/Make.tests:tests/userprog/bad-write_SRC = tests/userprog/bad-write.c tests/main.c
tests/userprog/Make.tests:tests/userprog/bad-jump_SRC = tests/userprog/bad-jump.c tests/main.c
tests/userprog/Make.tests:tests/userprog/bad-read2_SRC = tests/userprog/bad-read2.c tests/main.c
tests/userprog/Make.tests:tests/userprog/bad-write2_SRC = tests/userprog/bad-write2.c tests/main.c
tests/userprog/Make.tests:tests/userprog/bad-jump2_SRC = tests/userprog/bad-jump2.c tests/main.c
tests/userprog/Make.tests:tests/userprog/sc-boundary_SRC = tests/userprog/sc-boundary.c           \
tests/userprog/Make.tests:tests/userprog/sc-boundary-2_SRC = tests/userprog/sc-boundary-2.c	\
tests/userprog/Make.tests:tests/userprog/sc-boundary-3_SRC = tests/userprog/sc-boundary-3.c	\
tests/userprog/Make.tests:tests/userprog/create-normal_SRC = tests/userprog/create-normal.c tests/main.c
tests/userprog/Make.tests:tests/userprog/create-empty_SRC = tests/userprog/create-empty.c tests/main.c
tests/userprog/Make.tests:tests/userprog/create-null_SRC = tests/userprog/create-null.c tests/main.c
tests/userprog/Make.tests:tests/userprog/create-bad-ptr_SRC = tests/userprog/create-bad-ptr.c	\
tests/userprog/Make.tests:tests/userprog/create-long_SRC = tests/userprog/create-long.c tests/main.c
tests/userprog/Make.tests:tests/userprog/create-exists_SRC = tests/userprog/create-exists.c tests/main.c
tests/userprog/Make.tests:tests/userprog/create-bound_SRC = tests/userprog/create-bound.c	\
tests/userprog/Make.tests:tests/userprog/open-normal_SRC = tests/userprog/open-normal.c tests/main.c
tests/userprog/Make.tests:tests/userprog/open-missing_SRC = tests/userprog/open-missing.c tests/main.c
tests/userprog/Make.tests:tests/userprog/open-boundary_SRC = tests/userprog/open-boundary.c	\
tests/userprog/Make.tests:tests/userprog/open-empty_SRC = tests/userprog/open-empty.c tests/main.c
tests/userprog/Make.tests:tests/userprog/open-null_SRC = tests/userprog/open-null.c tests/main.c
tests/userprog/Make.tests:tests/userprog/open-bad-ptr_SRC = tests/userprog/open-bad-ptr.c tests/main.c
tests/userprog/Make.tests:tests/userprog/open-twice_SRC = tests/userprog/open-twice.c tests/main.c
tests/userprog/Make.tests:tests/userprog/close-normal_SRC = tests/userprog/close-normal.c tests/main.c
tests/userprog/Make.tests:tests/userprog/close-twice_SRC = tests/userprog/close-twice.c tests/main.c
tests/userprog/Make.tests:tests/userprog/close-stdin_SRC = tests/userprog/close-stdin.c tests/main.c
tests/userprog/Make.tests:tests/userprog/close-stdout_SRC = tests/userprog/close-stdout.c tests/main.c
tests/userprog/Make.tests:tests/userprog/close-bad-fd_SRC = tests/userprog/close-bad-fd.c tests/main.c
tests/userprog/Make.tests:tests/userprog/read-normal_SRC = tests/userprog/read-normal.c tests/main.c
tests/userprog/Make.tests:tests/userprog/read-bad-ptr_SRC = tests/userprog/read-bad-ptr.c tests/main.c
tests/userprog/Make.tests:tests/userprog/read-boundary_SRC = tests/userprog/read-boundary.c	\
tests/userprog/Make.tests:tests/userprog/read-zero_SRC = tests/userprog/read-zero.c tests/main.c
tests/userprog/Make.tests:tests/userprog/read-stdout_SRC = tests/userprog/read-stdout.c tests/main.c
tests/userprog/Make.tests:tests/userprog/read-bad-fd_SRC = tests/userprog/read-bad-fd.c tests/main.c
tests/userprog/Make.tests:tests/userprog/write-normal_SRC = tests/userprog/write-normal.c tests/main.c
tests/userprog/Make.tests:tests/userprog/write-bad-ptr_SRC = tests/userprog/write-bad-ptr.c tests/main.c
tests/userprog/Make.tests:tests/userprog/write-boundary_SRC = tests/userprog/write-boundary.c	\
tests/userprog/Make.tests:tests/userprog/write-zero_SRC = tests/userprog/write-zero.c tests/main.c
tests/userprog/Make.tests:tests/userprog/write-stdin_SRC = tests/userprog/write-stdin.c tests/main.c
tests/userprog/Make.tests:tests/userprog/write-bad-fd_SRC = tests/userprog/write-bad-fd.c tests/main.c
tests/userprog/Make.tests:tests/userprog/exec-once_SRC = tests/userprog/exec-once.c tests/main.c
tests/userprog/Make.tests:tests/userprog/exec-arg_SRC = tests/userprog/exec-arg.c tests/main.c
tests/userprog/Make.tests:tests/userprog/exec-bound_SRC = tests/userprog/exec-bound.c       \
tests/userprog/Make.tests:tests/userprog/exec-bound-2_SRC = tests/userprog/exec-bound-2.c         \
tests/userprog/Make.tests:tests/userprog/exec-bound-3_SRC = tests/userprog/exec-bound-3.c         \
tests/userprog/Make.tests:tests/userprog/exec-multiple_SRC = tests/userprog/exec-multiple.c tests/main.c
tests/userprog/Make.tests:tests/userprog/exec-missing_SRC = tests/userprog/exec-missing.c tests/main.c
tests/userprog/Make.tests:tests/userprog/exec-bad-ptr_SRC = tests/userprog/exec-bad-ptr.c tests/main.c
tests/userprog/Make.tests:tests/userprog/wait-simple_SRC = tests/userprog/wait-simple.c tests/main.c
tests/userprog/Make.tests:tests/userprog/wait-twice_SRC = tests/userprog/wait-twice.c tests/main.c
tests/userprog/Make.tests:tests/userprog/wait-killed_SRC = tests/userprog/wait-killed.c tests/main.c
tests/userprog/Make.tests:tests/userprog/wait-bad-pid_SRC = tests/userprog/wait-bad-pid.c tests/main.c
tests/userprog/Make.tests:tests/userprog/multi-recurse_SRC = tests/userprog/multi-recurse.c
tests/userprog/Make.tests:tests/userprog/multi-child-fd_SRC = tests/userprog/multi-child-fd.c	\
tests/userprog/Make.tests:tests/userprog/rox-simple_SRC = tests/userprog/rox-simple.c tests/main.c
tests/userprog/Make.tests:tests/userprog/rox-child_SRC = tests/userprog/rox-child.c tests/main.c
tests/userprog/Make.tests:tests/userprog/rox-multichild_SRC = tests/userprog/rox-multichild.c	\
tests/userprog/Make.tests:tests/userprog/child-simple_SRC = tests/userprog/child-simple.c
tests/userprog/Make.tests:tests/userprog/child-args_SRC = tests/userprog/args.c
tests/userprog/Make.tests:tests/userprog/child-bad_SRC = tests/userprog/child-bad.c tests/main.c
tests/userprog/Make.tests:tests/userprog/child-close_SRC = tests/userprog/child-close.c
tests/userprog/Make.tests:tests/userprog/child-rox_SRC = tests/userprog/child-rox.c
tests/userprog/Make.tests:tests/userprog/args-single_ARGS = onearg
tests/userprog/Make.tests:tests/userprog/args-multiple_ARGS = some arguments for you!
tests/userprog/Make.tests:tests/userprog/args-many_ARGS = a b c d e f g h i j k l m n o p q r s t u v
tests/userprog/Make.tests:tests/userprog/args-dbl-space_ARGS = two  spaces!
tests/userprog/Make.tests:tests/userprog/multi-recurse_ARGS = 15
tests/userprog/Make.tests:tests/userprog/open-normal_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/open-boundary_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/open-twice_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/close-normal_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/close-twice_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/read-normal_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/read-bad-ptr_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/read-boundary_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/read-zero_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/write-normal_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/write-bad-ptr_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/write-boundary_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/write-zero_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/multi-child-fd_PUTFILES += tests/userprog/sample.txt
tests/userprog/Make.tests:tests/userprog/exec-once_PUTFILES += tests/userprog/child-simple
tests/userprog/Make.tests:tests/userprog/exec-multiple_PUTFILES += tests/userprog/child-simple
tests/userprog/Make.tests:tests/userprog/wait-simple_PUTFILES += tests/userprog/child-simple
tests/userprog/Make.tests:tests/userprog/wait-twice_PUTFILES += tests/userprog/child-simple
tests/userprog/Make.tests:tests/userprog/exec-arg_PUTFILES += tests/userprog/child-args
tests/userprog/Make.tests:tests/userprog/exec-bound_PUTFILES += tests/userprog/child-args
tests/userprog/Make.tests:tests/userprog/multi-child-fd_PUTFILES += tests/userprog/child-close
tests/userprog/Make.tests:tests/userprog/wait-killed_PUTFILES += tests/userprog/child-bad
tests/userprog/Make.tests:tests/userprog/rox-child_PUTFILES += tests/userprog/child-rox
tests/userprog/Make.tests:tests/userprog/rox-multichild_PUTFILES += tests/userprog/child-rox
tests/userprog/Make.tests:tests/userprog/multi-recurse.output: TIMEOUT = 360
tests/userprog/multi-child-fd.c:  snprintf (child_cmd, sizeof child_cmd, "child-close %d", handle);
tests/userprog/multi-child-fd.c:  check_file_handle (handle, "sample.txt", sample, sizeof sample - 1);
tests/userprog/multi-child-fd.ck:# -*- perl -*-
tests/userprog/multi-child-fd.ck:(multi-child-fd) begin
tests/userprog/multi-child-fd.ck:(multi-child-fd) open "sample.txt"
tests/userprog/multi-child-fd.ck:(child-close) begin
tests/userprog/multi-child-fd.ck:(child-close) end
tests/userprog/multi-child-fd.ck:child-close: exit(0)
tests/userprog/multi-child-fd.ck:(multi-child-fd) wait(exec()) = 0
tests/userprog/multi-child-fd.ck:(multi-child-fd) verified contents of "sample.txt"
tests/userprog/multi-child-fd.ck:(multi-child-fd) end
tests/userprog/multi-child-fd.ck:multi-child-fd: exit(0)
tests/userprog/multi-child-fd.ck:(multi-child-fd) begin
tests/userprog/multi-child-fd.ck:(multi-child-fd) open "sample.txt"
tests/userprog/multi-child-fd.ck:(child-close) begin
tests/userprog/multi-child-fd.ck:child-close: exit(-1)
tests/userprog/multi-child-fd.ck:(multi-child-fd) wait(exec()) = -1
tests/userprog/multi-child-fd.ck:(multi-child-fd) verified contents of "sample.txt"
tests/userprog/multi-child-fd.ck:(multi-child-fd) end
tests/userprog/multi-child-fd.ck:multi-child-fd: exit(0)
tests/userprog/multi-recurse.c:   first command-line argument. */
tests/userprog/multi-recurse.c:  test_name = "multi-recurse";
tests/userprog/multi-recurse.c:      snprintf (child_cmd, sizeof child_cmd, "multi-recurse %d", n - 1);
tests/userprog/multi-recurse.c:      CHECK ((child_pid = exec (child_cmd)) != -1, "exec(\"%s\")", child_cmd);
tests/userprog/multi-recurse.c:      if (code != n - 1)
tests/userprog/multi-recurse.ck:# -*- perl -*-
tests/userprog/multi-recurse.ck:(multi-recurse) begin 15
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 14")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 14
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 13")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 13
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 12")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 12
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 11")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 11
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 10")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 10
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 9")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 9
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 8")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 8
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 7")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 7
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 6")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 6
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 5")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 5
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 4")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 4
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 3")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 3
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 2")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 2
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 1")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 1
tests/userprog/multi-recurse.ck:(multi-recurse) exec("multi-recurse 0")
tests/userprog/multi-recurse.ck:(multi-recurse) begin 0
tests/userprog/multi-recurse.ck:(multi-recurse) end 0
tests/userprog/multi-recurse.ck:multi-recurse: exit(0)
tests/userprog/multi-recurse.ck:(multi-recurse) end 1
tests/userprog/multi-recurse.ck:multi-recurse: exit(1)
tests/userprog/multi-recurse.ck:(multi-recurse) end 2
tests/userprog/multi-recurse.ck:multi-recurse: exit(2)
tests/userprog/multi-recurse.ck:(multi-recurse) end 3
tests/userprog/multi-recurse.ck:multi-recurse: exit(3)
tests/userprog/multi-recurse.ck:(multi-recurse) end 4
tests/userprog/multi-recurse.ck:multi-recurse: exit(4)
tests/userprog/multi-recurse.ck:(multi-recurse) end 5
tests/userprog/multi-recurse.ck:multi-recurse: exit(5)
tests/userprog/multi-recurse.ck:(multi-recurse) end 6
tests/userprog/multi-recurse.ck:multi-recurse: exit(6)
tests/userprog/multi-recurse.ck:(multi-recurse) end 7
tests/userprog/multi-recurse.ck:multi-recurse: exit(7)
tests/userprog/multi-recurse.ck:(multi-recurse) end 8
tests/userprog/multi-recurse.ck:multi-recurse: exit(8)
tests/userprog/multi-recurse.ck:(multi-recurse) end 9
tests/userprog/multi-recurse.ck:multi-recurse: exit(9)
tests/userprog/multi-recurse.ck:(multi-recurse) end 10
tests/userprog/multi-recurse.ck:multi-recurse: exit(10)
tests/userprog/multi-recurse.ck:(multi-recurse) end 11
tests/userprog/multi-recurse.ck:multi-recurse: exit(11)
tests/userprog/multi-recurse.ck:(multi-recurse) end 12
tests/userprog/multi-recurse.ck:multi-recurse: exit(12)
tests/userprog/multi-recurse.ck:(multi-recurse) end 13
tests/userprog/multi-recurse.ck:multi-recurse: exit(13)
tests/userprog/multi-recurse.ck:(multi-recurse) end 14
tests/userprog/multi-recurse.ck:multi-recurse: exit(14)
tests/userprog/multi-recurse.ck:(multi-recurse) end 15
tests/userprog/multi-recurse.ck:multi-recurse: exit(15)
tests/userprog/null.ck:# -*- perl -*-
tests/userprog/open-bad-ptr.c:   The process must be terminated with -1 exit code. */
tests/userprog/open-bad-ptr.c:  fail ("should have called exit(-1)");
tests/userprog/open-bad-ptr.ck:# -*- perl -*-
tests/userprog/open-bad-ptr.ck:(open-bad-ptr) begin
tests/userprog/open-bad-ptr.ck:(open-bad-ptr) end
tests/userprog/open-bad-ptr.ck:open-bad-ptr: exit(0)
tests/userprog/open-bad-ptr.ck:(open-bad-ptr) begin
tests/userprog/open-bad-ptr.ck:open-bad-ptr: exit(-1)
tests/userprog/open-boundary.ck:# -*- perl -*-
tests/userprog/open-boundary.ck:(open-boundary) begin
tests/userprog/open-boundary.ck:(open-boundary) open "sample.txt"
tests/userprog/open-boundary.ck:(open-boundary) end
tests/userprog/open-boundary.ck:open-boundary: exit(0)
tests/userprog/open-empty.c:  if (handle != -1)
tests/userprog/open-empty.c:    fail ("open() returned %d instead of -1", handle);
tests/userprog/open-empty.ck:# -*- perl -*-
tests/userprog/open-empty.ck:(open-empty) begin
tests/userprog/open-empty.ck:(open-empty) end
tests/userprog/open-empty.ck:open-empty: exit(0)
tests/userprog/open-missing.c:  int handle = open ("no-such-file");
tests/userprog/open-missing.c:  if (handle != -1)
tests/userprog/open-missing.ck:# -*- perl -*-
tests/userprog/open-missing.ck:(open-missing) begin
tests/userprog/open-missing.ck:(open-missing) end
tests/userprog/open-missing.ck:open-missing: exit(0)
tests/userprog/open-normal.ck:# -*- perl -*-
tests/userprog/open-normal.ck:(open-normal) begin
tests/userprog/open-normal.ck:(open-normal) end
tests/userprog/open-normal.ck:open-normal: exit(0)
tests/userprog/open-null.c:   The process must be terminated with exit code -1. */
tests/userprog/open-null.ck:# -*- perl -*-
tests/userprog/open-null.ck:(open-null) begin
tests/userprog/open-null.ck:(open-null) end
tests/userprog/open-null.ck:open-null: exit(0)
tests/userprog/open-null.ck:(open-null) begin
tests/userprog/open-null.ck:open-null: exit(-1)
tests/userprog/open-twice.ck:# -*- perl -*-
tests/userprog/open-twice.ck:(open-twice) begin
tests/userprog/open-twice.ck:(open-twice) open "sample.txt" once
tests/userprog/open-twice.ck:(open-twice) open "sample.txt" again
tests/userprog/open-twice.ck:(open-twice) end
tests/userprog/open-twice.ck:open-twice: exit(0)
tests/userprog/read-bad-fd.c:   exit code -1. */
tests/userprog/read-bad-fd.c:  read (-1, &buf, 1);
tests/userprog/read-bad-fd.c:  read (-1024, &buf, 1);
tests/userprog/read-bad-fd.ck:# -*- perl -*-
tests/userprog/read-bad-fd.ck:(read-bad-fd) begin
tests/userprog/read-bad-fd.ck:(read-bad-fd) end
tests/userprog/read-bad-fd.ck:read-bad-fd: exit(0)
tests/userprog/read-bad-fd.ck:(read-bad-fd) begin
tests/userprog/read-bad-fd.ck:read-bad-fd: exit(-1)
tests/userprog/read-bad-ptr.c:   The process must be terminated with -1 exit code. */
tests/userprog/read-bad-ptr.ck:# -*- perl -*-
tests/userprog/read-bad-ptr.ck:(read-bad-ptr) begin
tests/userprog/read-bad-ptr.ck:(read-bad-ptr) open "sample.txt"
tests/userprog/read-bad-ptr.ck:(read-bad-ptr) end
tests/userprog/read-bad-ptr.ck:read-bad-ptr: exit(0)
tests/userprog/read-bad-ptr.ck:(read-bad-ptr) begin
tests/userprog/read-bad-ptr.ck:(read-bad-ptr) open "sample.txt"
tests/userprog/read-bad-ptr.ck:read-bad-ptr: exit(-1)
tests/userprog/read-boundary.c:  buffer = get_boundary_area () - sizeof sample / 2;
tests/userprog/read-boundary.c:  byte_cnt = read (handle, buffer, sizeof sample - 1);
tests/userprog/read-boundary.c:  if (byte_cnt != sizeof sample - 1)
tests/userprog/read-boundary.c:    fail ("read() returned %d instead of %zu", byte_cnt, sizeof sample - 1);
tests/userprog/read-boundary.ck:# -*- perl -*-
tests/userprog/read-boundary.ck:(read-boundary) begin
tests/userprog/read-boundary.ck:(read-boundary) open "sample.txt"
tests/userprog/read-boundary.ck:(read-boundary) end
tests/userprog/read-boundary.ck:read-boundary: exit(0)
tests/userprog/read-normal.c:  check_file ("sample.txt", sample, sizeof sample - 1);
tests/userprog/read-normal.ck:# -*- perl -*-
tests/userprog/read-normal.ck:(read-normal) begin
tests/userprog/read-normal.ck:(read-normal) open "sample.txt" for verification
tests/userprog/read-normal.ck:(read-normal) verified contents of "sample.txt"
tests/userprog/read-normal.ck:(read-normal) close "sample.txt"
tests/userprog/read-normal.ck:(read-normal) end
tests/userprog/read-normal.ck:read-normal: exit(0)
tests/userprog/read-stdout.c:   which may just fail or terminate the process with -1 exit
tests/userprog/read-stdout.ck:# -*- perl -*-
tests/userprog/read-stdout.ck:(read-stdout) begin
tests/userprog/read-stdout.ck:(read-stdout) end
tests/userprog/read-stdout.ck:read-stdout: exit(0)
tests/userprog/read-stdout.ck:(read-stdout) begin
tests/userprog/read-stdout.ck:read-stdout: exit(-1)
tests/userprog/read-zero.c:/* Try a 0-byte read, which should return 0 without reading
tests/userprog/read-zero.c:    fail ("0-byte read() modified buffer");
tests/userprog/read-zero.ck:# -*- perl -*-
tests/userprog/read-zero.ck:(read-zero) begin
tests/userprog/read-zero.ck:(read-zero) open "sample.txt"
tests/userprog/read-zero.ck:(read-zero) end
tests/userprog/read-zero.ck:read-zero: exit(0)
tests/userprog/rox-child.c:#include "tests/userprog/rox-child.inc"
tests/userprog/rox-child.ck:# -*- perl -*-
tests/userprog/rox-child.ck:(rox-child) begin
tests/userprog/rox-child.ck:(rox-child) open "child-rox"
tests/userprog/rox-child.ck:(rox-child) read "child-rox"
tests/userprog/rox-child.ck:(rox-child) write "child-rox"
tests/userprog/rox-child.ck:(rox-child) exec "child-rox 1"
tests/userprog/rox-child.ck:(child-rox) begin
tests/userprog/rox-child.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-child.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-child.ck:(child-rox) end
tests/userprog/rox-child.ck:child-rox: exit(12)
tests/userprog/rox-child.ck:(rox-child) write "child-rox"
tests/userprog/rox-child.ck:(rox-child) end
tests/userprog/rox-child.ck:rox-child: exit(0)
tests/userprog/rox-child.inc:/* -*- c -*- */
tests/userprog/rox-child.inc:  const char *child_cmd = "child-rox " CHILD_CNT;
tests/userprog/rox-child.inc:  /* Open child-rox, read from it, write back same data. */
tests/userprog/rox-child.inc:  CHECK ((handle = open ("child-rox")) > 1, "open \"child-rox\"");
tests/userprog/rox-child.inc:         "read \"child-rox\"");
tests/userprog/rox-child.inc:         "write \"child-rox\"");
tests/userprog/rox-child.inc:  /* Execute child-rox and wait for it. */
tests/userprog/rox-child.inc:  CHECK ((child = exec (child_cmd)) != -1, "exec \"%s\"", child_cmd);
tests/userprog/rox-child.inc:  /* Write to child-rox again. */
tests/userprog/rox-child.inc:         "write \"child-rox\"");
tests/userprog/rox-multichild.c:#include "tests/userprog/rox-child.inc"
tests/userprog/rox-multichild.ck:# -*- perl -*-
tests/userprog/rox-multichild.ck:(rox-multichild) begin
tests/userprog/rox-multichild.ck:(rox-multichild) open "child-rox"
tests/userprog/rox-multichild.ck:(rox-multichild) read "child-rox"
tests/userprog/rox-multichild.ck:(rox-multichild) write "child-rox"
tests/userprog/rox-multichild.ck:(rox-multichild) exec "child-rox 5"
tests/userprog/rox-multichild.ck:(child-rox) begin
tests/userprog/rox-multichild.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-multichild.ck:(child-rox) exec "child-rox 4"
tests/userprog/rox-multichild.ck:(child-rox) begin
tests/userprog/rox-multichild.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-multichild.ck:(child-rox) exec "child-rox 3"
tests/userprog/rox-multichild.ck:(child-rox) begin
tests/userprog/rox-multichild.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-multichild.ck:(child-rox) exec "child-rox 2"
tests/userprog/rox-multichild.ck:(child-rox) begin
tests/userprog/rox-multichild.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-multichild.ck:(child-rox) exec "child-rox 1"
tests/userprog/rox-multichild.ck:(child-rox) begin
tests/userprog/rox-multichild.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-multichild.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-multichild.ck:(child-rox) end
tests/userprog/rox-multichild.ck:child-rox: exit(12)
tests/userprog/rox-multichild.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-multichild.ck:(child-rox) end
tests/userprog/rox-multichild.ck:child-rox: exit(12)
tests/userprog/rox-multichild.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-multichild.ck:(child-rox) end
tests/userprog/rox-multichild.ck:child-rox: exit(12)
tests/userprog/rox-multichild.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-multichild.ck:(child-rox) end
tests/userprog/rox-multichild.ck:child-rox: exit(12)
tests/userprog/rox-multichild.ck:(child-rox) try to write "child-rox"
tests/userprog/rox-multichild.ck:(child-rox) end
tests/userprog/rox-multichild.ck:child-rox: exit(12)
tests/userprog/rox-multichild.ck:(rox-multichild) write "child-rox"
tests/userprog/rox-multichild.ck:(rox-multichild) end
tests/userprog/rox-multichild.ck:rox-multichild: exit(0)
tests/userprog/rox-simple.c:  CHECK ((handle = open ("rox-simple")) > 1, "open \"rox-simple\"");
tests/userprog/rox-simple.c:         "read \"rox-simple\"");
tests/userprog/rox-simple.c:         "try to write \"rox-simple\"");
tests/userprog/rox-simple.ck:# -*- perl -*-
tests/userprog/rox-simple.ck:(rox-simple) begin
tests/userprog/rox-simple.ck:(rox-simple) open "rox-simple"
tests/userprog/rox-simple.ck:(rox-simple) read "rox-simple"
tests/userprog/rox-simple.ck:(rox-simple) try to write "rox-simple"
tests/userprog/rox-simple.ck:(rox-simple) end
tests/userprog/rox-simple.ck:rox-simple: exit(0)
tests/userprog/Rubric.functionality:- Test argument passing on Pintos command line.
tests/userprog/Rubric.functionality:3	args-none
tests/userprog/Rubric.functionality:3	args-single
tests/userprog/Rubric.functionality:3	args-multiple
tests/userprog/Rubric.functionality:3	args-many
tests/userprog/Rubric.functionality:3	args-dbl-space
tests/userprog/Rubric.functionality:- Test "create" system call.
tests/userprog/Rubric.functionality:3	create-empty
tests/userprog/Rubric.functionality:3	create-long
tests/userprog/Rubric.functionality:3	create-normal
tests/userprog/Rubric.functionality:3	create-exists
tests/userprog/Rubric.functionality:- Test "open" system call.
tests/userprog/Rubric.functionality:3	open-missing
tests/userprog/Rubric.functionality:3	open-normal
tests/userprog/Rubric.functionality:3	open-twice
tests/userprog/Rubric.functionality:- Test "read" system call.
tests/userprog/Rubric.functionality:3	read-normal
tests/userprog/Rubric.functionality:3	read-zero
tests/userprog/Rubric.functionality:- Test "write" system call.
tests/userprog/Rubric.functionality:3	write-normal
tests/userprog/Rubric.functionality:3	write-zero
tests/userprog/Rubric.functionality:- Test "close" system call.
tests/userprog/Rubric.functionality:3	close-normal
tests/userprog/Rubric.functionality:- Test "exec" system call.
tests/userprog/Rubric.functionality:5	exec-once
tests/userprog/Rubric.functionality:5	exec-multiple
tests/userprog/Rubric.functionality:5	exec-arg
tests/userprog/Rubric.functionality:- Test "wait" system call.
tests/userprog/Rubric.functionality:5	wait-simple
tests/userprog/Rubric.functionality:5	wait-twice
tests/userprog/Rubric.functionality:- Test "exit" system call.
tests/userprog/Rubric.functionality:- Test "halt" system call.
tests/userprog/Rubric.functionality:- Test recursive execution of user programs.
tests/userprog/Rubric.functionality:15	multi-recurse
tests/userprog/Rubric.functionality:- Test read-only executable feature.
tests/userprog/Rubric.functionality:3	rox-simple
tests/userprog/Rubric.functionality:3	rox-child
tests/userprog/Rubric.functionality:3	rox-multichild
tests/userprog/Rubric.robustness:- Test robustness of file descriptor handling.
tests/userprog/Rubric.robustness:2	close-stdin
tests/userprog/Rubric.robustness:2	close-stdout
tests/userprog/Rubric.robustness:2	close-bad-fd
tests/userprog/Rubric.robustness:2	close-twice
tests/userprog/Rubric.robustness:2	read-bad-fd
tests/userprog/Rubric.robustness:2	read-stdout
tests/userprog/Rubric.robustness:2	write-bad-fd
tests/userprog/Rubric.robustness:2	write-stdin
tests/userprog/Rubric.robustness:2	multi-child-fd
tests/userprog/Rubric.robustness:- Test robustness of pointer handling.
tests/userprog/Rubric.robustness:3	create-bad-ptr
tests/userprog/Rubric.robustness:3	exec-bad-ptr
tests/userprog/Rubric.robustness:3	open-bad-ptr
tests/userprog/Rubric.robustness:3	read-bad-ptr
tests/userprog/Rubric.robustness:3	write-bad-ptr
tests/userprog/Rubric.robustness:- Test robustness of buffer copying across page boundaries.
tests/userprog/Rubric.robustness:3	create-bound
tests/userprog/Rubric.robustness:3	open-boundary
tests/userprog/Rubric.robustness:3	read-boundary
tests/userprog/Rubric.robustness:3	write-boundary
tests/userprog/Rubric.robustness:- Test handling of null pointer and empty strings.
tests/userprog/Rubric.robustness:2	create-null
tests/userprog/Rubric.robustness:2	open-null
tests/userprog/Rubric.robustness:2	open-empty
tests/userprog/Rubric.robustness:- Test robustness of system call implementation.
tests/userprog/Rubric.robustness:3	sc-bad-arg
tests/userprog/Rubric.robustness:3	sc-bad-sp
tests/userprog/Rubric.robustness:5	sc-boundary
tests/userprog/Rubric.robustness:5	sc-boundary-2
tests/userprog/Rubric.robustness:- Test robustness of "exec" and "wait" system calls.
tests/userprog/Rubric.robustness:5	exec-missing
tests/userprog/Rubric.robustness:5	wait-bad-pid
tests/userprog/Rubric.robustness:5	wait-killed
tests/userprog/Rubric.robustness:- Test robustness of exception handling.
tests/userprog/Rubric.robustness:1	bad-read
tests/userprog/Rubric.robustness:1	bad-write
tests/userprog/Rubric.robustness:1	bad-jump
tests/userprog/Rubric.robustness:1	bad-read2
tests/userprog/Rubric.robustness:1	bad-write2
tests/userprog/Rubric.robustness:1	bad-jump2
tests/userprog/sample.inc:  " have carpeting.\" --Dave Barry\n" 
tests/userprog/sample.txt: have carpeting." --Dave Barry
tests/userprog/sc-bad-arg.c:   with -1 exit code because the argument to the system call
tests/userprog/sc-bad-arg.c:#include <syscall-nr.h>
tests/userprog/sc-bad-arg.c:  fail ("should have called exit(-1)");
tests/userprog/sc-bad-arg.ck:# -*- perl -*-
tests/userprog/sc-bad-arg.ck:(sc-bad-arg) begin
tests/userprog/sc-bad-arg.ck:sc-bad-arg: exit(-1)
tests/userprog/sc-bad-sp.c:   bad address.  The process must be terminated with -1 exit
tests/userprog/sc-bad-sp.c:  asm volatile ("movl $.-(64*1024*1024), %esp; int $0x30");
tests/userprog/sc-bad-sp.c:  fail ("should have called exit(-1)");
tests/userprog/sc-bad-sp.ck:# -*- perl -*-
tests/userprog/sc-bad-sp.ck:(sc-bad-sp) begin
tests/userprog/sc-bad-sp.ck:sc-bad-sp: exit(-1)
tests/userprog/sc-boundary-2.c:#include <syscall-nr.h>
tests/userprog/sc-boundary-2.c:  int *p = (int *) ((char *) get_boundary_area () - 7);
tests/userprog/sc-boundary-2.ck:# -*- perl -*-
tests/userprog/sc-boundary-2.ck:(sc-boundary-2) begin
tests/userprog/sc-boundary-2.ck:sc-boundary-2: exit(67)
tests/userprog/sc-boundary-3.c:#include <syscall-nr.h>
tests/userprog/sc-boundary-3.c:  p--;
tests/userprog/sc-boundary-3.ck:# -*- perl -*-
tests/userprog/sc-boundary-3.ck:(sc-boundary-3) begin
tests/userprog/sc-boundary-3.ck:sc-boundary-3: exit(-1)
tests/userprog/sc-boundary.c:#include <syscall-nr.h>
tests/userprog/sc-boundary.c:  p--;
tests/userprog/sc-boundary.ck:# -*- perl -*-
tests/userprog/sc-boundary.ck:(sc-boundary) begin
tests/userprog/sc-boundary.ck:sc-boundary: exit(42)
tests/userprog/wait-bad-pid.c:   process with -1 exit code. */
tests/userprog/wait-bad-pid.ck:# -*- perl -*-
tests/userprog/wait-bad-pid.ck:(wait-bad-pid) begin
tests/userprog/wait-bad-pid.ck:(wait-bad-pid) end
tests/userprog/wait-bad-pid.ck:wait-bad-pid: exit(0)
tests/userprog/wait-bad-pid.ck:(wait-bad-pid) begin
tests/userprog/wait-bad-pid.ck:wait-bad-pid: exit(-1)
tests/userprog/wait-killed.c:  msg ("wait(exec()) = %d", wait (exec ("child-bad")));
tests/userprog/wait-killed.ck:# -*- perl -*-
tests/userprog/wait-killed.ck:(wait-killed) begin
tests/userprog/wait-killed.ck:(child-bad) begin
tests/userprog/wait-killed.ck:child-bad: exit(-1)
tests/userprog/wait-killed.ck:(wait-killed) wait(exec()) = -1
tests/userprog/wait-killed.ck:(wait-killed) end
tests/userprog/wait-killed.ck:wait-killed: exit(0)
tests/userprog/wait-simple.c:  msg ("wait(exec()) = %d", wait (exec ("child-simple")));
tests/userprog/wait-simple.ck:# -*- perl -*-
tests/userprog/wait-simple.ck:(wait-simple) begin
tests/userprog/wait-simple.ck:(child-simple) run
tests/userprog/wait-simple.ck:child-simple: exit(81)
tests/userprog/wait-simple.ck:(wait-simple) wait(exec()) = 81
tests/userprog/wait-simple.ck:(wait-simple) end
tests/userprog/wait-simple.ck:wait-simple: exit(0)
tests/userprog/wait-twice.c:   The second wait call must return -1 immediately. */
tests/userprog/wait-twice.c:  pid_t child = exec ("child-simple");
tests/userprog/wait-twice.ck:# -*- perl -*-
tests/userprog/wait-twice.ck:(wait-twice) begin
tests/userprog/wait-twice.ck:(child-simple) run
tests/userprog/wait-twice.ck:child-simple: exit(81)
tests/userprog/wait-twice.ck:(wait-twice) wait(exec()) = 81
tests/userprog/wait-twice.ck:(wait-twice) wait(exec()) = -1
tests/userprog/wait-twice.ck:(wait-twice) end
tests/userprog/wait-twice.ck:wait-twice: exit(0)
tests/userprog/write-bad-fd.c:   exit code -1. */
tests/userprog/write-bad-fd.c:  write (-5, &buf, 1);
tests/userprog/write-bad-fd.c:  write (-8192, &buf, 1);
tests/userprog/write-bad-fd.c:  write (INT_MAX - 1, &buf, 1);
tests/userprog/write-bad-fd.ck:# -*- perl -*-
tests/userprog/write-bad-fd.ck:(write-bad-fd) begin
tests/userprog/write-bad-fd.ck:(write-bad-fd) end
tests/userprog/write-bad-fd.ck:write-bad-fd: exit(0)
tests/userprog/write-bad-fd.ck:(write-bad-fd) begin
tests/userprog/write-bad-fd.ck:write-bad-fd: exit(-1)
tests/userprog/write-bad-ptr.c:   The process must be terminated with -1 exit code. */
tests/userprog/write-bad-ptr.c:  fail ("should have exited with -1");
tests/userprog/write-bad-ptr.ck:# -*- perl -*-
tests/userprog/write-bad-ptr.ck:(write-bad-ptr) begin
tests/userprog/write-bad-ptr.ck:(write-bad-ptr) open "sample.txt"
tests/userprog/write-bad-ptr.ck:(write-bad-ptr) end
tests/userprog/write-bad-ptr.ck:write-bad-ptr: exit(0)
tests/userprog/write-bad-ptr.ck:(write-bad-ptr) begin
tests/userprog/write-bad-ptr.ck:(write-bad-ptr) open "sample.txt"
tests/userprog/write-bad-ptr.ck:write-bad-ptr: exit(-1)
tests/userprog/write-boundary.c:  byte_cnt = write (handle, sample_p, sizeof sample - 1);
tests/userprog/write-boundary.c:  if (byte_cnt != sizeof sample - 1)
tests/userprog/write-boundary.c:    fail ("write() returned %d instead of %zu", byte_cnt, sizeof sample - 1);
tests/userprog/write-boundary.ck:# -*- perl -*-
tests/userprog/write-boundary.ck:(write-boundary) begin
tests/userprog/write-boundary.ck:(write-boundary) open "sample.txt"
tests/userprog/write-boundary.ck:(write-boundary) end
tests/userprog/write-boundary.ck:write-boundary: exit(0)
tests/userprog/write-normal.c:  CHECK (create ("test.txt", sizeof sample - 1), "create \"test.txt\"");
tests/userprog/write-normal.c:  byte_cnt = write (handle, sample, sizeof sample - 1);
tests/userprog/write-normal.c:  if (byte_cnt != sizeof sample - 1)
tests/userprog/write-normal.c:    fail ("write() returned %d instead of %zu", byte_cnt, sizeof sample - 1);
tests/userprog/write-normal.ck:# -*- perl -*-
tests/userprog/write-normal.ck:(write-normal) begin
tests/userprog/write-normal.ck:(write-normal) create "test.txt"
tests/userprog/write-normal.ck:(write-normal) open "test.txt"
tests/userprog/write-normal.ck:(write-normal) end
tests/userprog/write-normal.ck:write-normal: exit(0)
tests/userprog/write-stdin.c:   which may just fail or terminate the process with -1 exit
tests/userprog/write-stdin.ck:# -*- perl -*-
tests/userprog/write-stdin.ck:(write-stdin) begin
tests/userprog/write-stdin.ck:(write-stdin) end
tests/userprog/write-stdin.ck:write-stdin: exit(0)
tests/userprog/write-stdin.ck:(write-stdin) begin
tests/userprog/write-stdin.ck:write-stdin: exit(-1)
tests/userprog/write-zero.c:/* Try a 0-byte write, which should return 0 without writing
tests/userprog/write-zero.ck:# -*- perl -*-
tests/userprog/write-zero.ck:(write-zero) begin
tests/userprog/write-zero.ck:(write-zero) open "sample.txt"
tests/userprog/write-zero.ck:(write-zero) end
tests/userprog/write-zero.ck:write-zero: exit(0)
tests/userprog/no-vm/Make.tests:# -*- makefile -*-
tests/userprog/no-vm/Make.tests:tests/userprog/no-vm_TESTS = tests/userprog/no-vm/multi-oom
tests/userprog/no-vm/Make.tests:tests/userprog/no-vm_PROGS = $(tests/userprog/no-vm_TESTS)
tests/userprog/no-vm/Make.tests:tests/userprog/no-vm/multi-oom_SRC = tests/userprog/no-vm/multi-oom.c	\
tests/userprog/no-vm/Make.tests:tests/userprog/no-vm/multi-oom.output: TIMEOUT = 360
tests/userprog/no-vm/multi-oom.c:   return -1, not a valid PID.
tests/userprog/no-vm/multi-oom.c:            "%s %d %s", test_name, c, mode == CRASH ? "-k" : "");
tests/userprog/no-vm/multi-oom.c:     A low-memory condition in open() should not lead to the
tests/userprog/no-vm/multi-oom.c:    if (open (test_name) == -1)
tests/userprog/no-vm/multi-oom.c:        exit (-1);
tests/userprog/no-vm/multi-oom.c:   Some children are started with the '-k' flag, which will
tests/userprog/no-vm/multi-oom.c:  test_name = "multi-oom";
tests/userprog/no-vm/multi-oom.c:  /* If -k is passed, crash this process. */
tests/userprog/no-vm/multi-oom.c:  if (argc > 2 && !strcmp(argv[2], "-k"))
tests/userprog/no-vm/multi-oom.c:  int i, expected_depth = -1;
tests/userprog/no-vm/multi-oom.c:          if (child_pid != -1)
tests/userprog/no-vm/multi-oom.c:              if (wait (child_pid) != -1)
tests/userprog/no-vm/multi-oom.c:                fail ("crashed child should return -1.");
tests/userprog/no-vm/multi-oom.c:      if (child_pid == -1)
tests/userprog/no-vm/multi-oom.c:      if (reached_depth == -1)
tests/userprog/no-vm/multi-oom.c:        fail ("wait returned -1.");
tests/userprog/no-vm/multi-oom.ck:# -*- perl -*-
tests/userprog/no-vm/multi-oom.ck:(multi-oom) begin
tests/userprog/no-vm/multi-oom.ck:(multi-oom) success. program forked 10 times.
tests/userprog/no-vm/multi-oom.ck:(multi-oom) end
tests/userprog/no-vm/Rubric:1	multi-oom
tests/vm/child-inherit.c:/* Child process for mmap-inherit test.
tests/vm/child-inherit.c:   The process must be terminated with -1 exit code. */
tests/vm/child-linear.c:/* Child process of page-parallel.
tests/vm/child-linear.c:  const char *key = argv[argc - 1];
tests/vm/child-linear.c:  test_name = "child-linear";
tests/vm/child-mm-wrt.c:/* Child process of mmap-exit.
tests/vm/child-qsort-mm.c:   a multi-pass divide and conquer algorithm.  */
tests/vm/child-qsort-mm.c:  test_name = "child-qsort-mm";
tests/vm/child-qsort.c:   it, using quick sort, a multi-pass divide and conquer
tests/vm/child-qsort.c:   in-place. */
tests/vm/child-qsort.c:  test_name = "child-qsort";
tests/vm/child-sort.c:   it, using counting sort, a single-pass algorithm.  The sorted
tests/vm/child-sort.c:   data is written back to the same file in-place. */
tests/vm/child-sort.c:  test_name = "child-sort";
tests/vm/child-sort.c:      while (j-- > 0)
tests/vm/Make.tests:# -*- makefile -*-
tests/vm/Make.tests:tests/vm_TESTS = $(addprefix tests/vm/,pt-grow-stack pt-grow-pusha	\
tests/vm/Make.tests:pt-grow-bad pt-big-stk-obj pt-bad-addr pt-bad-read pt-write-code	\
tests/vm/Make.tests:pt-write-code2 pt-grow-stk-sc page-linear page-parallel page-merge-seq	\
tests/vm/Make.tests:page-merge-par page-merge-stk page-merge-mm page-shuffle mmap-read	\
tests/vm/Make.tests:mmap-close mmap-unmap mmap-overlap mmap-twice mmap-write mmap-exit	\
tests/vm/Make.tests:mmap-shuffle mmap-bad-fd mmap-clean mmap-inherit mmap-misalign		\
tests/vm/Make.tests:mmap-null mmap-over-code mmap-over-data mmap-over-stk mmap-remove	\
tests/vm/Make.tests:mmap-zero)
tests/vm/Make.tests:tests/vm_PROGS = $(tests/vm_TESTS) $(addprefix tests/vm/,child-linear	\
tests/vm/Make.tests:child-sort child-qsort child-qsort-mm child-mm-wrt child-inherit)
tests/vm/Make.tests:tests/vm/pt-grow-stack_SRC = tests/vm/pt-grow-stack.c tests/arc4.c	\
tests/vm/Make.tests:tests/vm/pt-grow-pusha_SRC = tests/vm/pt-grow-pusha.c tests/lib.c	\
tests/vm/Make.tests:tests/vm/pt-grow-bad_SRC = tests/vm/pt-grow-bad.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/pt-big-stk-obj_SRC = tests/vm/pt-big-stk-obj.c tests/arc4.c	\
tests/vm/Make.tests:tests/vm/pt-bad-addr_SRC = tests/vm/pt-bad-addr.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/pt-bad-read_SRC = tests/vm/pt-bad-read.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/pt-write-code_SRC = tests/vm/pt-write-code.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/pt-write-code2_SRC = tests/vm/pt-write-code-2.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/pt-grow-stk-sc_SRC = tests/vm/pt-grow-stk-sc.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/page-linear_SRC = tests/vm/page-linear.c tests/arc4.c	\
tests/vm/Make.tests:tests/vm/page-parallel_SRC = tests/vm/page-parallel.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/page-merge-seq_SRC = tests/vm/page-merge-seq.c tests/arc4.c	\
tests/vm/Make.tests:tests/vm/page-merge-par_SRC = tests/vm/page-merge-par.c \
tests/vm/Make.tests:tests/vm/parallel-merge.c tests/arc4.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/page-merge-stk_SRC = tests/vm/page-merge-stk.c \
tests/vm/Make.tests:tests/vm/parallel-merge.c tests/arc4.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/page-merge-mm_SRC = tests/vm/page-merge-mm.c \
tests/vm/Make.tests:tests/vm/parallel-merge.c tests/arc4.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/page-shuffle_SRC = tests/vm/page-shuffle.c tests/arc4.c	\
tests/vm/Make.tests:tests/vm/mmap-read_SRC = tests/vm/mmap-read.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-close_SRC = tests/vm/mmap-close.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-unmap_SRC = tests/vm/mmap-unmap.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-overlap_SRC = tests/vm/mmap-overlap.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-twice_SRC = tests/vm/mmap-twice.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-write_SRC = tests/vm/mmap-write.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-exit_SRC = tests/vm/mmap-exit.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-shuffle_SRC = tests/vm/mmap-shuffle.c tests/arc4.c	\
tests/vm/Make.tests:tests/vm/mmap-bad-fd_SRC = tests/vm/mmap-bad-fd.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-clean_SRC = tests/vm/mmap-clean.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-inherit_SRC = tests/vm/mmap-inherit.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-misalign_SRC = tests/vm/mmap-misalign.c tests/lib.c	\
tests/vm/Make.tests:tests/vm/mmap-null_SRC = tests/vm/mmap-null.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-over-code_SRC = tests/vm/mmap-over-code.c tests/lib.c	\
tests/vm/Make.tests:tests/vm/mmap-over-data_SRC = tests/vm/mmap-over-data.c tests/lib.c	\
tests/vm/Make.tests:tests/vm/mmap-over-stk_SRC = tests/vm/mmap-over-stk.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-remove_SRC = tests/vm/mmap-remove.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/mmap-zero_SRC = tests/vm/mmap-zero.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/child-linear_SRC = tests/vm/child-linear.c tests/arc4.c tests/lib.c
tests/vm/Make.tests:tests/vm/child-qsort_SRC = tests/vm/child-qsort.c tests/vm/qsort.c tests/lib.c
tests/vm/Make.tests:tests/vm/child-qsort-mm_SRC = tests/vm/child-qsort-mm.c tests/vm/qsort.c \
tests/vm/Make.tests:tests/vm/child-sort_SRC = tests/vm/child-sort.c tests/lib.c
tests/vm/Make.tests:tests/vm/child-mm-wrt_SRC = tests/vm/child-mm-wrt.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/child-inherit_SRC = tests/vm/child-inherit.c tests/lib.c tests/main.c
tests/vm/Make.tests:tests/vm/pt-bad-read_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/pt-write-code2_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-close_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-read_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-unmap_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-twice_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-overlap_PUTFILES = tests/vm/zeros
tests/vm/Make.tests:tests/vm/mmap-exit_PUTFILES = tests/vm/child-mm-wrt
tests/vm/Make.tests:tests/vm/page-parallel_PUTFILES = tests/vm/child-linear
tests/vm/Make.tests:tests/vm/page-merge-seq_PUTFILES = tests/vm/child-sort
tests/vm/Make.tests:tests/vm/page-merge-par_PUTFILES = tests/vm/child-sort
tests/vm/Make.tests:tests/vm/page-merge-stk_PUTFILES = tests/vm/child-qsort
tests/vm/Make.tests:tests/vm/page-merge-mm_PUTFILES = tests/vm/child-qsort-mm
tests/vm/Make.tests:tests/vm/mmap-clean_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-inherit_PUTFILES = tests/vm/sample.txt tests/vm/child-inherit
tests/vm/Make.tests:tests/vm/mmap-misalign_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-null_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-over-code_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-over-data_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-over-stk_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/mmap-remove_PUTFILES = tests/vm/sample.txt
tests/vm/Make.tests:tests/vm/page-linear.output: TIMEOUT = 300
tests/vm/Make.tests:tests/vm/page-shuffle.output: TIMEOUT = 600
tests/vm/Make.tests:tests/vm/mmap-shuffle.output: TIMEOUT = 600
tests/vm/Make.tests:tests/vm/page-merge-seq.output: TIMEOUT = 600
tests/vm/Make.tests:tests/vm/page-merge-par.output: TIMEOUT = 600
tests/vm/Make.tests:	rm -f tests/vm/zeros
tests/vm/mmap-bad-fd.c:   exit code -1. */
tests/vm/mmap-bad-fd.ck:# -*- perl -*-
tests/vm/mmap-bad-fd.ck:(mmap-bad-fd) begin
tests/vm/mmap-bad-fd.ck:(mmap-bad-fd) try to mmap invalid fd
tests/vm/mmap-bad-fd.ck:(mmap-bad-fd) end
tests/vm/mmap-bad-fd.ck:mmap-bad-fd: exit(0)
tests/vm/mmap-bad-fd.ck:(mmap-bad-fd) begin
tests/vm/mmap-bad-fd.ck:(mmap-bad-fd) try to mmap invalid fd
tests/vm/mmap-bad-fd.ck:mmap-bad-fd: exit(-1)
tests/vm/mmap-clean.c:  static char buffer[sizeof sample - 1];
tests/vm/mmap-clean.c:                 strlen (sample) - strlen (overwrite))) 
tests/vm/mmap-clean.ck:# -*- perl -*-
tests/vm/mmap-clean.ck:(mmap-clean) begin
tests/vm/mmap-clean.ck:(mmap-clean) open "sample.txt"
tests/vm/mmap-clean.ck:(mmap-clean) mmap "sample.txt"
tests/vm/mmap-clean.ck:(mmap-clean) write "sample.txt"
tests/vm/mmap-clean.ck:(mmap-clean) munmap "sample.txt"
tests/vm/mmap-clean.ck:(mmap-clean) seek "sample.txt"
tests/vm/mmap-clean.ck:(mmap-clean) read "sample.txt"
tests/vm/mmap-clean.ck:(mmap-clean) file change was retained after munmap
tests/vm/mmap-clean.ck:(mmap-clean) end
tests/vm/mmap-close.ck:# -*- perl -*-
tests/vm/mmap-close.ck:(mmap-close) begin
tests/vm/mmap-close.ck:(mmap-close) open "sample.txt"
tests/vm/mmap-close.ck:(mmap-close) mmap "sample.txt"
tests/vm/mmap-close.ck:(mmap-close) end
tests/vm/mmap-exit.c:/* Executes child-mm-wrt and verifies that the writes that should
tests/vm/mmap-exit.c:  CHECK ((child = exec ("child-mm-wrt")) != -1, "exec \"child-mm-wrt\"");
tests/vm/mmap-exit.ck:# -*- perl -*-
tests/vm/mmap-exit.ck:(mmap-exit) begin
tests/vm/mmap-exit.ck:(child-mm-wrt) begin
tests/vm/mmap-exit.ck:(child-mm-wrt) create "sample.txt"
tests/vm/mmap-exit.ck:(child-mm-wrt) open "sample.txt"
tests/vm/mmap-exit.ck:(child-mm-wrt) mmap "sample.txt"
tests/vm/mmap-exit.ck:(child-mm-wrt) end
tests/vm/mmap-exit.ck:(mmap-exit) open "sample.txt" for verification
tests/vm/mmap-exit.ck:(mmap-exit) verified contents of "sample.txt"
tests/vm/mmap-exit.ck:(mmap-exit) close "sample.txt"
tests/vm/mmap-exit.ck:(mmap-exit) end
tests/vm/mmap-inherit.c:/* Maps a file into memory and runs child-inherit to verify that
tests/vm/mmap-inherit.c:  CHECK ((child = exec ("child-inherit")) != -1, "exec \"child-inherit\"");
tests/vm/mmap-inherit.c:  CHECK (wait (child) == -1, "wait for child (should return -1)");
tests/vm/mmap-inherit.ck:# -*- perl -*-
tests/vm/mmap-inherit.ck:(mmap-inherit) begin
tests/vm/mmap-inherit.ck:(mmap-inherit) open "sample.txt"
tests/vm/mmap-inherit.ck:(mmap-inherit) mmap "sample.txt"
tests/vm/mmap-inherit.ck:(mmap-inherit) exec "child-inherit"
tests/vm/mmap-inherit.ck:(child-inherit) begin
tests/vm/mmap-inherit.ck:child-inherit: exit(-1)
tests/vm/mmap-inherit.ck:(mmap-inherit) checking that mmap'd file still has same data
tests/vm/mmap-inherit.ck:(mmap-inherit) end
tests/vm/mmap-inherit.ck:mmap-inherit: exit(0)
tests/vm/mmap-misalign.ck:# -*- perl -*-
tests/vm/mmap-misalign.ck:(mmap-misalign) begin
tests/vm/mmap-misalign.ck:(mmap-misalign) open "sample.txt"
tests/vm/mmap-misalign.ck:(mmap-misalign) try to mmap at misaligned address
tests/vm/mmap-misalign.ck:(mmap-misalign) end
tests/vm/mmap-null.ck:# -*- perl -*-
tests/vm/mmap-null.ck:(mmap-null) begin
tests/vm/mmap-null.ck:(mmap-null) open "sample.txt"
tests/vm/mmap-null.ck:(mmap-null) try to mmap at address 0
tests/vm/mmap-null.ck:(mmap-null) end
tests/vm/mmap-over-code.ck:# -*- perl -*-
tests/vm/mmap-over-code.ck:(mmap-over-code) begin
tests/vm/mmap-over-code.ck:(mmap-over-code) open "sample.txt"
tests/vm/mmap-over-code.ck:(mmap-over-code) try to mmap over code segment
tests/vm/mmap-over-code.ck:(mmap-over-code) end
tests/vm/mmap-over-data.ck:# -*- perl -*-
tests/vm/mmap-over-data.ck:(mmap-over-data) begin
tests/vm/mmap-over-data.ck:(mmap-over-data) open "sample.txt"
tests/vm/mmap-over-data.ck:(mmap-over-data) try to mmap over data segment
tests/vm/mmap-over-data.ck:(mmap-over-data) end
tests/vm/mmap-over-stk.ck:# -*- perl -*-
tests/vm/mmap-over-stk.ck:(mmap-over-stk) begin
tests/vm/mmap-over-stk.ck:(mmap-over-stk) open "sample.txt"
tests/vm/mmap-over-stk.ck:(mmap-over-stk) try to mmap over stack segment
tests/vm/mmap-over-stk.ck:(mmap-over-stk) end
tests/vm/mmap-overlap.ck:# -*- perl -*-
tests/vm/mmap-overlap.ck:(mmap-overlap) begin
tests/vm/mmap-overlap.ck:(mmap-overlap) open "zeros" once
tests/vm/mmap-overlap.ck:(mmap-overlap) mmap "zeros"
tests/vm/mmap-overlap.ck:(mmap-overlap) open "zeros" again
tests/vm/mmap-overlap.ck:(mmap-overlap) try to mmap "zeros" again
tests/vm/mmap-overlap.ck:(mmap-overlap) end
tests/vm/mmap-read.ck:# -*- perl -*-
tests/vm/mmap-read.ck:(mmap-read) begin
tests/vm/mmap-read.ck:(mmap-read) open "sample.txt"
tests/vm/mmap-read.ck:(mmap-read) mmap "sample.txt"
tests/vm/mmap-read.ck:(mmap-read) end
tests/vm/mmap-remove.c:  CHECK (open ("sample.txt") == -1, "try to open \"sample.txt\"");
tests/vm/mmap-remove.ck:# -*- perl -*-
tests/vm/mmap-remove.ck:(mmap-remove) begin
tests/vm/mmap-remove.ck:(mmap-remove) open "sample.txt"
tests/vm/mmap-remove.ck:(mmap-remove) mmap "sample.txt"
tests/vm/mmap-remove.ck:(mmap-remove) remove "sample.txt"
tests/vm/mmap-remove.ck:(mmap-remove) try to open "sample.txt"
tests/vm/mmap-remove.ck:(mmap-remove) create "another"
tests/vm/mmap-remove.ck:(mmap-remove) end
tests/vm/mmap-shuffle.ck:# -*- perl -*-
tests/vm/mmap-shuffle.ck:    for my $i (0...128 * 1024 - 1) {
tests/vm/mmap-shuffle.ck:(mmap-shuffle) begin
tests/vm/mmap-shuffle.ck:(mmap-shuffle) create "buffer"
tests/vm/mmap-shuffle.ck:(mmap-shuffle) open "buffer"
tests/vm/mmap-shuffle.ck:(mmap-shuffle) mmap "buffer"
tests/vm/mmap-shuffle.ck:(mmap-shuffle) init: cksum=$init
tests/vm/mmap-shuffle.ck:(mmap-shuffle) shuffle 0: cksum=$shuffle[0]
tests/vm/mmap-shuffle.ck:(mmap-shuffle) shuffle 1: cksum=$shuffle[1]
tests/vm/mmap-shuffle.ck:(mmap-shuffle) shuffle 2: cksum=$shuffle[2]
tests/vm/mmap-shuffle.ck:(mmap-shuffle) shuffle 3: cksum=$shuffle[3]
tests/vm/mmap-shuffle.ck:(mmap-shuffle) shuffle 4: cksum=$shuffle[4]
tests/vm/mmap-shuffle.ck:(mmap-shuffle) shuffle 5: cksum=$shuffle[5]
tests/vm/mmap-shuffle.ck:(mmap-shuffle) shuffle 6: cksum=$shuffle[6]
tests/vm/mmap-shuffle.ck:(mmap-shuffle) shuffle 7: cksum=$shuffle[7]
tests/vm/mmap-shuffle.ck:(mmap-shuffle) shuffle 8: cksum=$shuffle[8]
tests/vm/mmap-shuffle.ck:(mmap-shuffle) shuffle 9: cksum=$shuffle[9]
tests/vm/mmap-shuffle.ck:(mmap-shuffle) end
tests/vm/mmap-twice.ck:# -*- perl -*-
tests/vm/mmap-twice.ck:(mmap-twice) begin
tests/vm/mmap-twice.ck:(mmap-twice) open "sample.txt" #0
tests/vm/mmap-twice.ck:(mmap-twice) mmap "sample.txt" #0 at 0x10000000
tests/vm/mmap-twice.ck:(mmap-twice) open "sample.txt" #1
tests/vm/mmap-twice.ck:(mmap-twice) mmap "sample.txt" #1 at 0x20000000
tests/vm/mmap-twice.ck:(mmap-twice) compare mmap'd file 0 against data
tests/vm/mmap-twice.ck:(mmap-twice) compare mmap'd file 1 against data
tests/vm/mmap-twice.ck:(mmap-twice) end
tests/vm/mmap-unmap.ck:# -*- perl -*-
tests/vm/mmap-unmap.ck:check_process_death ('mmap-unmap');
tests/vm/mmap-write.ck:# -*- perl -*-
tests/vm/mmap-write.ck:(mmap-write) begin
tests/vm/mmap-write.ck:(mmap-write) create "sample.txt"
tests/vm/mmap-write.ck:(mmap-write) open "sample.txt"
tests/vm/mmap-write.ck:(mmap-write) mmap "sample.txt"
tests/vm/mmap-write.ck:(mmap-write) compare read data against written data
tests/vm/mmap-write.ck:(mmap-write) end
tests/vm/mmap-zero.c:/* Tries to map a zero-length file, which may or may not work but
tests/vm/mmap-zero.c:   and the process must be terminated with -1 exit code. */
tests/vm/mmap-zero.ck:# -*- perl -*-
tests/vm/mmap-zero.ck:(mmap-zero) begin
tests/vm/mmap-zero.ck:(mmap-zero) create empty file "empty"
tests/vm/mmap-zero.ck:(mmap-zero) open "empty"
tests/vm/mmap-zero.ck:(mmap-zero) mmap "empty"
tests/vm/mmap-zero.ck:mmap-zero: exit(-1)
tests/vm/page-linear.ck:# -*- perl -*-
tests/vm/page-linear.ck:(page-linear) begin
tests/vm/page-linear.ck:(page-linear) initialize
tests/vm/page-linear.ck:(page-linear) read pass
tests/vm/page-linear.ck:(page-linear) read/modify/write pass one
tests/vm/page-linear.ck:(page-linear) read/modify/write pass two
tests/vm/page-linear.ck:(page-linear) read pass
tests/vm/page-linear.ck:(page-linear) end
tests/vm/page-merge-mm.c:#include "tests/vm/parallel-merge.h"
tests/vm/page-merge-mm.c:  parallel_merge ("child-qsort-mm", 80);
tests/vm/page-merge-mm.ck:# -*- perl -*-
tests/vm/page-merge-mm.ck:(page-merge-mm) begin
tests/vm/page-merge-mm.ck:(page-merge-mm) init
tests/vm/page-merge-mm.ck:(page-merge-mm) sort chunk 0
tests/vm/page-merge-mm.ck:(page-merge-mm) sort chunk 1
tests/vm/page-merge-mm.ck:(page-merge-mm) sort chunk 2
tests/vm/page-merge-mm.ck:(page-merge-mm) sort chunk 3
tests/vm/page-merge-mm.ck:(page-merge-mm) sort chunk 4
tests/vm/page-merge-mm.ck:(page-merge-mm) sort chunk 5
tests/vm/page-merge-mm.ck:(page-merge-mm) sort chunk 6
tests/vm/page-merge-mm.ck:(page-merge-mm) sort chunk 7
tests/vm/page-merge-mm.ck:(page-merge-mm) wait for child 0
tests/vm/page-merge-mm.ck:(page-merge-mm) wait for child 1
tests/vm/page-merge-mm.ck:(page-merge-mm) wait for child 2
tests/vm/page-merge-mm.ck:(page-merge-mm) wait for child 3
tests/vm/page-merge-mm.ck:(page-merge-mm) wait for child 4
tests/vm/page-merge-mm.ck:(page-merge-mm) wait for child 5
tests/vm/page-merge-mm.ck:(page-merge-mm) wait for child 6
tests/vm/page-merge-mm.ck:(page-merge-mm) wait for child 7
tests/vm/page-merge-mm.ck:(page-merge-mm) merge
tests/vm/page-merge-mm.ck:(page-merge-mm) verify
tests/vm/page-merge-mm.ck:(page-merge-mm) success, buf_idx=1,048,576
tests/vm/page-merge-mm.ck:(page-merge-mm) end
tests/vm/page-merge-par.c:#include "tests/vm/parallel-merge.h"
tests/vm/page-merge-par.c:  parallel_merge ("child-sort", 123);
tests/vm/page-merge-par.ck:# -*- perl -*-
tests/vm/page-merge-par.ck:(page-merge-par) begin
tests/vm/page-merge-par.ck:(page-merge-par) init
tests/vm/page-merge-par.ck:(page-merge-par) sort chunk 0
tests/vm/page-merge-par.ck:(page-merge-par) sort chunk 1
tests/vm/page-merge-par.ck:(page-merge-par) sort chunk 2
tests/vm/page-merge-par.ck:(page-merge-par) sort chunk 3
tests/vm/page-merge-par.ck:(page-merge-par) sort chunk 4
tests/vm/page-merge-par.ck:(page-merge-par) sort chunk 5
tests/vm/page-merge-par.ck:(page-merge-par) sort chunk 6
tests/vm/page-merge-par.ck:(page-merge-par) sort chunk 7
tests/vm/page-merge-par.ck:(page-merge-par) wait for child 0
tests/vm/page-merge-par.ck:(page-merge-par) wait for child 1
tests/vm/page-merge-par.ck:(page-merge-par) wait for child 2
tests/vm/page-merge-par.ck:(page-merge-par) wait for child 3
tests/vm/page-merge-par.ck:(page-merge-par) wait for child 4
tests/vm/page-merge-par.ck:(page-merge-par) wait for child 5
tests/vm/page-merge-par.ck:(page-merge-par) wait for child 6
tests/vm/page-merge-par.ck:(page-merge-par) wait for child 7
tests/vm/page-merge-par.ck:(page-merge-par) merge
tests/vm/page-merge-par.ck:(page-merge-par) verify
tests/vm/page-merge-par.ck:(page-merge-par) success, buf_idx=1,048,576
tests/vm/page-merge-par.ck:(page-merge-par) end
tests/vm/page-merge-seq.c:      CHECK ((child = exec ("child-sort buffer")) != -1,
tests/vm/page-merge-seq.c:             "exec \"child-sort buffer\"");
tests/vm/page-merge-seq.c:      CHECK (wait (child) == 123, "wait for child-sort");
tests/vm/page-merge-seq.c:      if ((++mp[min] - buf1) % CHUNK_SIZE == 0)
tests/vm/page-merge-seq.c:        mp[min] = mp[--mp_left]; 
tests/vm/page-merge-seq.c:      while (histogram[hist_idx]-- > 0) 
tests/vm/page-merge-seq.ck:# -*- perl -*-
tests/vm/page-merge-seq.ck:(page-merge-seq) begin
tests/vm/page-merge-seq.ck:(page-merge-seq) init
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 0
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 1
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 2
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 3
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 4
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 5
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 6
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 7
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 8
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 9
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 10
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 11
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 12
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 13
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 14
tests/vm/page-merge-seq.ck:(page-merge-seq) sort chunk 15
tests/vm/page-merge-seq.ck:(page-merge-seq) merge
tests/vm/page-merge-seq.ck:(page-merge-seq) verify
tests/vm/page-merge-seq.ck:(page-merge-seq) success, buf_idx=1,032,192
tests/vm/page-merge-seq.ck:(page-merge-seq) end
tests/vm/page-merge-stk.c:#include "tests/vm/parallel-merge.h"
tests/vm/page-merge-stk.c:  parallel_merge ("child-qsort", 72);
tests/vm/page-merge-stk.ck:# -*- perl -*-
tests/vm/page-merge-stk.ck:(page-merge-stk) begin
tests/vm/page-merge-stk.ck:(page-merge-stk) init
tests/vm/page-merge-stk.ck:(page-merge-stk) sort chunk 0
tests/vm/page-merge-stk.ck:(page-merge-stk) sort chunk 1
tests/vm/page-merge-stk.ck:(page-merge-stk) sort chunk 2
tests/vm/page-merge-stk.ck:(page-merge-stk) sort chunk 3
tests/vm/page-merge-stk.ck:(page-merge-stk) sort chunk 4
tests/vm/page-merge-stk.ck:(page-merge-stk) sort chunk 5
tests/vm/page-merge-stk.ck:(page-merge-stk) sort chunk 6
tests/vm/page-merge-stk.ck:(page-merge-stk) sort chunk 7
tests/vm/page-merge-stk.ck:(page-merge-stk) wait for child 0
tests/vm/page-merge-stk.ck:(page-merge-stk) wait for child 1
tests/vm/page-merge-stk.ck:(page-merge-stk) wait for child 2
tests/vm/page-merge-stk.ck:(page-merge-stk) wait for child 3
tests/vm/page-merge-stk.ck:(page-merge-stk) wait for child 4
tests/vm/page-merge-stk.ck:(page-merge-stk) wait for child 5
tests/vm/page-merge-stk.ck:(page-merge-stk) wait for child 6
tests/vm/page-merge-stk.ck:(page-merge-stk) wait for child 7
tests/vm/page-merge-stk.ck:(page-merge-stk) merge
tests/vm/page-merge-stk.ck:(page-merge-stk) verify
tests/vm/page-merge-stk.ck:(page-merge-stk) success, buf_idx=1,048,576
tests/vm/page-merge-stk.ck:(page-merge-stk) end
tests/vm/page-parallel.c:/* Runs 4 child-linear processes at once. */
tests/vm/page-parallel.c:    CHECK ((children[i] = exec ("child-linear")) != -1,
tests/vm/page-parallel.c:           "exec \"child-linear\"");
tests/vm/page-parallel.ck:# -*- perl -*-
tests/vm/page-parallel.ck:(page-parallel) begin
tests/vm/page-parallel.ck:(page-parallel) exec "child-linear"
tests/vm/page-parallel.ck:(page-parallel) exec "child-linear"
tests/vm/page-parallel.ck:(page-parallel) exec "child-linear"
tests/vm/page-parallel.ck:(page-parallel) exec "child-linear"
tests/vm/page-parallel.ck:(page-parallel) wait for child 0
tests/vm/page-parallel.ck:(page-parallel) wait for child 1
tests/vm/page-parallel.ck:(page-parallel) wait for child 2
tests/vm/page-parallel.ck:(page-parallel) wait for child 3
tests/vm/page-parallel.ck:(page-parallel) end
tests/vm/page-shuffle.ck:# -*- perl -*-
tests/vm/page-shuffle.ck:    for my $i (0...128 * 1024 - 1) {
tests/vm/page-shuffle.ck:(page-shuffle) begin
tests/vm/page-shuffle.ck:(page-shuffle) init: cksum=$init
tests/vm/page-shuffle.ck:(page-shuffle) shuffle 0: cksum=$shuffle[0]
tests/vm/page-shuffle.ck:(page-shuffle) shuffle 1: cksum=$shuffle[1]
tests/vm/page-shuffle.ck:(page-shuffle) shuffle 2: cksum=$shuffle[2]
tests/vm/page-shuffle.ck:(page-shuffle) shuffle 3: cksum=$shuffle[3]
tests/vm/page-shuffle.ck:(page-shuffle) shuffle 4: cksum=$shuffle[4]
tests/vm/page-shuffle.ck:(page-shuffle) shuffle 5: cksum=$shuffle[5]
tests/vm/page-shuffle.ck:(page-shuffle) shuffle 6: cksum=$shuffle[6]
tests/vm/page-shuffle.ck:(page-shuffle) shuffle 7: cksum=$shuffle[7]
tests/vm/page-shuffle.ck:(page-shuffle) shuffle 8: cksum=$shuffle[8]
tests/vm/page-shuffle.ck:(page-shuffle) shuffle 9: cksum=$shuffle[9]
tests/vm/page-shuffle.ck:(page-shuffle) end
tests/vm/parallel-merge.c:#include "tests/vm/parallel-merge.h"
tests/vm/parallel-merge.c:      CHECK ((children[i] = exec (cmd)) != -1, "exec \"%s\"", cmd);
tests/vm/parallel-merge.c:      if ((++mp[min] - buf1) % CHUNK_SIZE == 0) 
tests/vm/parallel-merge.c:        mp[min] = mp[--mp_left];
tests/vm/parallel-merge.c:      while (histogram[hist_idx]-- > 0) 
tests/vm/parallel-merge.h:#endif /* tests/vm/parallel-merge.h */
tests/vm/pt-bad-addr.c:   The process must be terminated with -1 exit code. */
tests/vm/process_death.pm:# -*- perl -*-
tests/vm/process_death.pm:    fail "Output missing '$proc_name: exit(-1)' message.\n"
tests/vm/process_death.pm:      if !grep ("$proc_name: exit(-1)" eq $_, @output);
tests/vm/pt-bad-addr.ck:# -*- perl -*-
tests/vm/pt-bad-addr.ck:check_process_death ('pt-bad-addr');
tests/vm/pt-bad-read.c:   The process must be terminated with -1 exit code. */
tests/vm/pt-bad-read.c:  read (handle, (char *) &handle - 4096, 1);
tests/vm/pt-bad-read.ck:# -*- perl -*-
tests/vm/pt-bad-read.ck:(pt-bad-read) begin
tests/vm/pt-bad-read.ck:(pt-bad-read) open "sample.txt"
tests/vm/pt-bad-read.ck:pt-bad-read: exit(-1)
tests/vm/pt-big-stk-obj.ck:# -*- perl -*-
tests/vm/pt-big-stk-obj.ck:(pt-big-stk-obj) begin
tests/vm/pt-big-stk-obj.ck:(pt-big-stk-obj) cksum: 3256410166
tests/vm/pt-big-stk-obj.ck:(pt-big-stk-obj) end
tests/vm/pt-grow-bad.c:   The process must be terminated with -1 exit code. */
tests/vm/pt-grow-bad.c:  asm volatile ("movl -4096(%esp), %eax");
tests/vm/pt-grow-bad.ck:# -*- perl -*-
tests/vm/pt-grow-bad.ck:(pt-grow-bad) begin
tests/vm/pt-grow-bad.ck:pt-grow-bad: exit(-1)
tests/vm/pt-grow-pusha.ck:# -*- perl -*-
tests/vm/pt-grow-pusha.ck:(pt-grow-pusha) begin
tests/vm/pt-grow-pusha.ck:(pt-grow-pusha) end
tests/vm/pt-grow-stack.ck:# -*- perl -*-
tests/vm/pt-grow-stack.ck:(pt-grow-stack) begin
tests/vm/pt-grow-stack.ck:(pt-grow-stack) cksum: 3424492700
tests/vm/pt-grow-stack.ck:(pt-grow-stack) end
tests/vm/pt-grow-stk-sc.ck:# -*- perl -*-
tests/vm/pt-grow-stk-sc.ck:(pt-grow-stk-sc) begin
tests/vm/pt-grow-stk-sc.ck:(pt-grow-stk-sc) create "sample.txt"
tests/vm/pt-grow-stk-sc.ck:(pt-grow-stk-sc) open "sample.txt"
tests/vm/pt-grow-stk-sc.ck:(pt-grow-stk-sc) write "sample.txt"
tests/vm/pt-grow-stk-sc.ck:(pt-grow-stk-sc) 2nd open "sample.txt"
tests/vm/pt-grow-stk-sc.ck:(pt-grow-stk-sc) read "sample.txt"
tests/vm/pt-grow-stk-sc.ck:(pt-grow-stk-sc) compare written data against read data
tests/vm/pt-grow-stk-sc.ck:(pt-grow-stk-sc) end
tests/vm/pt-write-code-2.c:   The process must be terminated with -1 exit code. */
tests/vm/pt-write-code.c:   The process must be terminated with -1 exit code. */
tests/vm/pt-write-code.ck:# -*- perl -*-
tests/vm/pt-write-code.ck:check_process_death ('pt-write-code');
tests/vm/pt-write-code2.ck:# -*- perl -*-
tests/vm/pt-write-code2.ck:(pt-write-code2) begin
tests/vm/pt-write-code2.ck:(pt-write-code2) open "sample.txt"
tests/vm/pt-write-code2.ck:pt-write-code2: exit(-1)
tests/vm/qsort.c:   SIZE - LEFT_SIZE elements all greater than or equal to
tests/vm/qsort.c:/* Partitions ARRAY in-place in an initial run of bytes all less
tests/vm/qsort.c:      left_size--;
tests/vm/qsort.c:          last--;
tests/vm/qsort.c:            left_size--;
tests/vm/qsort.c:    if (buf[i - 1] > buf[i])
tests/vm/qsort.c:   the quick-sort algorithm. */
tests/vm/qsort.c:      size_t right_size = size - left_size;
tests/vm/Rubric.functionality:- Test stack growth.
tests/vm/Rubric.functionality:3	pt-grow-stack
tests/vm/Rubric.functionality:3	pt-grow-stk-sc
tests/vm/Rubric.functionality:3	pt-big-stk-obj
tests/vm/Rubric.functionality:3	pt-grow-pusha
tests/vm/Rubric.functionality:- Test paging behavior.
tests/vm/Rubric.functionality:3	page-linear
tests/vm/Rubric.functionality:3	page-parallel
tests/vm/Rubric.functionality:3	page-shuffle
tests/vm/Rubric.functionality:4	page-merge-seq
tests/vm/Rubric.functionality:4	page-merge-par
tests/vm/Rubric.functionality:4	page-merge-mm
tests/vm/Rubric.functionality:4	page-merge-stk
tests/vm/Rubric.functionality:- Test "mmap" system call.
tests/vm/Rubric.functionality:2	mmap-read
tests/vm/Rubric.functionality:2	mmap-write
tests/vm/Rubric.functionality:2	mmap-shuffle
tests/vm/Rubric.functionality:2	mmap-twice
tests/vm/Rubric.functionality:2	mmap-unmap
tests/vm/Rubric.functionality:1	mmap-exit
tests/vm/Rubric.functionality:3	mmap-clean
tests/vm/Rubric.functionality:2	mmap-close
tests/vm/Rubric.functionality:2	mmap-remove
tests/vm/Rubric.robustness:- Test robustness of page table support.
tests/vm/Rubric.robustness:2	pt-bad-addr
tests/vm/Rubric.robustness:3	pt-bad-read
tests/vm/Rubric.robustness:2	pt-write-code
tests/vm/Rubric.robustness:3	pt-write-code2
tests/vm/Rubric.robustness:4	pt-grow-bad
tests/vm/Rubric.robustness:- Test robustness of "mmap" system call.
tests/vm/Rubric.robustness:1	mmap-bad-fd
tests/vm/Rubric.robustness:1	mmap-inherit
tests/vm/Rubric.robustness:1	mmap-null
tests/vm/Rubric.robustness:1	mmap-zero
tests/vm/Rubric.robustness:2	mmap-misalign
tests/vm/Rubric.robustness:2	mmap-over-code
tests/vm/Rubric.robustness:2	mmap-over-data
tests/vm/Rubric.robustness:2	mmap-over-stk
tests/vm/Rubric.robustness:2	mmap-overlap
tests/vm/sample.inc:  "trouble to figure out if the object is carcdr-able anyway, we figured\n"
tests/vm/sample.inc:  "code shows how to destructure a cons (SOME-CONS) into its two slots\n"
tests/vm/sample.inc:  "(THE-CAR and THE-CDR):\n"
tests/vm/sample.inc:  "        (MULTIPLE-VALUE-BIND (THE-CAR THE-CDR) (CAR SOME-CONS) ...)\n"
tests/vm/sample.inc:  "the object.  In a related change, the functions MAKE-ARRAY and CONS\n"
tests/vm/sample.txt:trouble to figure out if the object is carcdr-able anyway, we figured
tests/vm/sample.txt:code shows how to destructure a cons (SOME-CONS) into its two slots
tests/vm/sample.txt:(THE-CAR and THE-CDR):
tests/vm/sample.txt:        (MULTIPLE-VALUE-BIND (THE-CAR THE-CDR) (CAR SOME-CONS) ...)
tests/vm/sample.txt:the object.  In a related change, the functions MAKE-ARRAY and CONS
threads/init.c:/* -f: Format the file system? */
threads/init.c:/* -filesys, -scratch, -swap: Names of block devices to use,
threads/init.c:/* -ul: Maximum number of pages to put into palloc's user pool. */
threads/init.c:  memset (&_start_bss, 0, &_end_bss - &_start_bss);
threads/init.c:     new page tables immediately.  See [IA32-v2a] "MOV--Move
threads/init.c:     to/from Control Registers" and [IA32-v3a] 3.7.5 "Base Address
threads/init.c:   an argv-like array. */
threads/init.c:      p += strnlen (p, end - p) + 1;
threads/init.c:   and returns the first non-option argument. */
threads/init.c:  for (; *argv != NULL && **argv == '-'; argv++)
threads/init.c:      if (!strcmp (name, "-h"))
threads/init.c:      else if (!strcmp (name, "-q"))
threads/init.c:      else if (!strcmp (name, "-r"))
threads/init.c:      else if (!strcmp (name, "-f"))
threads/init.c:      else if (!strcmp (name, "-filesys"))
threads/init.c:      else if (!strcmp (name, "-scratch"))
threads/init.c:      else if (!strcmp (name, "-swap"))
threads/init.c:      else if (!strcmp (name, "-rs"))
threads/init.c:      else if (!strcmp (name, "-mlfqs"))
threads/init.c:      else if (!strcmp (name, "-ul"))
threads/init.c:        PANIC ("unknown option `%s' (use -h for help)", name);
threads/init.c:     time.  This has no effect if an "-rs" option was specified.
threads/init.c:     for reproducibility.  To fix this, give the "-r" option to
threads/init.c:     the pintos script to request real-time execution. */
threads/init.c:        if (a->name == NULL)
threads/init.c:          PANIC ("unknown action `%s' (use -h for help)", *argv);
threads/init.c:        else if (!strcmp (*argv, a->name))
threads/init.c:      for (i = 1; i < a->argc; i++)
threads/init.c:          PANIC ("action `%s' requires %d argument(s)", *argv, a->argc - 1);
threads/init.c:      a->function (argv);
threads/init.c:      argv += a->argc;
threads/init.c:          "Use these actions indirectly via `pintos' -g and -p options:\n"
threads/init.c:          "  -h                 Print this help message and power off.\n"
threads/init.c:          "  -q                 Power off VM after actions or on panic.\n"
threads/init.c:          "  -r                 Reboot after actions.\n"
threads/init.c:          "  -f                 Format file system device during startup.\n"
threads/init.c:          "  -filesys=BDEV      Use BDEV for file system instead of default.\n"
threads/init.c:          "  -scratch=BDEV      Use BDEV for scratch instead of default.\n"
threads/init.c:          "  -swap=BDEV         Use BDEV for swap instead of default.\n"
threads/init.c:          "  -rs=SEED           Set random number seed to SEED.\n"
threads/init.c:          "  -mlfqs             Use multi-level feedback queue scheduler.\n"
threads/init.c:          "  -ul=COUNT          Limit user memory to COUNT pages.\n"
threads/init.c:   block device with the given NAME, if NAME is non-null,
threads/interrupt.c:#include "threads/intr-stubs.h"
threads/interrupt.c:   the CPU.  See [IA32-v3a] sections 5.10 "Interrupt Descriptor
threads/interrupt.c:   Exception- or Interrupt-Handler Procedure". */
threads/interrupt.c:   pre-empted.  Handlers for external interrupts also may not
threads/interrupt.c:     value off the stack into `flags'.  See [IA32-v2b] "PUSHF"
threads/interrupt.c:     and "POP" and [IA32-v3a] 5.8.1 "Masking Maskable Hardware
threads/interrupt.c:     See [IA32-v2b] "STI" and [IA32-v3a] 5.8.1 "Masking Maskable
threads/interrupt.c:     See [IA32-v2b] "CLI" and [IA32-v3a] 5.8.1 "Masking Maskable
threads/interrupt.c:     See [IA32-v2a] "LIDT" and [IA32-v3a] 5.10 "Interrupt
threads/interrupt.c:  idtr_operand = make_idtr_operand (sizeof idt - 1, idt);
threads/interrupt.c:  intr_names[14] = "#PF Page-Fault Exception";
threads/interrupt.c:  intr_names[16] = "#MF x87 FPU Floating-Point Error";
threads/interrupt.c:  intr_names[18] = "#MC Machine-Check Exception";
threads/interrupt.c:  intr_names[19] = "#XF SIMD Floating-Point Exception";
threads/interrupt.c:   the DPL or lower-numbered ring.  In practice, DPL==3 allows
threads/interrupt.c:   [IA32-v3a] sections 4.5 "Privilege Levels" and 4.8.1.1
threads/interrupt.c:  outb (PIC0_DATA, 0x20); /* ICW2: line IR0...7 -> irq 0x20...0x27. */
threads/interrupt.c:  outb (PIC0_DATA, 0x01); /* ICW4: 8086 mode, normal EOI, non-buffered. */
threads/interrupt.c:  outb (PIC1_DATA, 0x28); /* ICW2: line IR0...7 -> irq 0x28...0x2f. */
threads/interrupt.c:  outb (PIC1_DATA, 0x01); /* ICW4: 8086 mode, normal EOI, non-buffered. */
threads/interrupt.c:/* Sends an end-of-interrupt signal to the PIC for the given IRQ.
threads/interrupt.c:   or lower-numbered ring.  In practice, DPL==3 allows user mode
threads/interrupt.c:   DPL==0 to be invoked.  See [IA32-v3a] sections 4.5 "Privilege
threads/interrupt.c:   [IA32-v3a] section 5.12.1.2 "Flag Usage By Exception- or
threads/interrupt.c:   Interrupt-Handler Procedure" for discussion. */
threads/interrupt.c:   intr-stubs.S.  FRAME describes the interrupt and the
threads/interrupt.c:  external = frame->vec_no >= 0x20 && frame->vec_no < 0x30;
threads/interrupt.c:  handler = intr_handlers[frame->vec_no];
threads/interrupt.c:  else if (frame->vec_no == 0x27 || frame->vec_no == 0x2f)
threads/interrupt.c:      pic_end_of_interrupt (frame->vec_no); 
threads/interrupt.c:  unsigned int n = ++unexpected_cnt[f->vec_no];
threads/interrupt.c:  if ((n & (n - 1)) == 0)
threads/interrupt.c:    f->vec_no, intr_names[f->vec_no]);
threads/interrupt.c:     See [IA32-v2a] "MOV--Move to/from Control Registers" and
threads/interrupt.c:     [IA32-v3a] 5.14 "Interrupt 14--Page Fault Exception
threads/interrupt.c:          f->vec_no, intr_names[f->vec_no], f->eip);
threads/interrupt.c:  printf (" cr2=%08"PRIx32" error=%08"PRIx32"\n", cr2, f->error_code);
threads/interrupt.c:          f->eax, f->ebx, f->ecx, f->edx);
threads/interrupt.c:          f->esi, f->edi, (uint32_t) f->esp, f->ebp);
threads/interrupt.c:          f->cs, f->ds, f->es, f->ss);
threads/interrupt.h:    /* Pushed by intr_entry in intr-stubs.S.
threads/interrupt.h:    /* Pushed by intrNN_stub in intr-stubs.S. */
threads/interrupt.h:    /* Pushed by intrNN_stub in intr-stubs.S.
threads/intr-stubs.h:   These are little snippets of code in intr-stubs.S, one for
threads/intr-stubs.h:   See intr-stubs.S for more information.
threads/intr-stubs.h:#endif /* threads/intr-stubs.h */
threads/io.h:  /* See [IA32-v2a] "IN". */
threads/io.h:  /* See [IA32-v2a] "INS". */
threads/io.h:  /* See [IA32-v2a] "IN". */
threads/io.h:/* Reads CNT 16-bit (halfword) units from PORT, one after
threads/io.h:  /* See [IA32-v2a] "INS". */
threads/io.h:  /* See [IA32-v2a] "IN". */
threads/io.h:/* Reads CNT 32-bit (word) units from PORT, one after another,
threads/io.h:  /* See [IA32-v2a] "INS". */
threads/io.h:  /* See [IA32-v2b] "OUT". */
threads/io.h:/* Writes to PORT each byte of data in the CNT-byte buffer
threads/io.h:  /* See [IA32-v2b] "OUTS". */
threads/io.h:/* Writes the 16-bit DATA to PORT. */
threads/io.h:  /* See [IA32-v2b] "OUT". */
threads/io.h:/* Writes to PORT each 16-bit unit (halfword) of data in the
threads/io.h:   CNT-halfword buffer starting at ADDR. */
threads/io.h:  /* See [IA32-v2b] "OUTS". */
threads/io.h:/* Writes the 32-bit DATA to PORT. */
threads/io.h:  /* See [IA32-v2b] "OUT". */
threads/io.h:/* Writes to PORT each 32-bit unit (word) of data in the CNT-word
threads/io.h:  /* See [IA32-v2b] "OUTS". */
threads/kernel.lds.S:OUTPUT_FORMAT("elf32-i386")
threads/kernel.lds.S:  /* Kernel starts with code, followed by read-only data and writable data. */
threads/kernel.lds.S:  /* BSS (zero-initialized data) is after everything else. */
threads/kernel.lds.S:  ASSERT (_end - _start <= 512K, "Kernel image is too big.")
threads/loader.h:#define LOADER_SIG (LOADER_END - LOADER_SIG_LEN)   /* 0xaa55 BIOS signature. */
threads/loader.h:#define LOADER_PARTS (LOADER_SIG - LOADER_PARTS_LEN)     /* Partition table. */
threads/loader.h:#define LOADER_ARGS (LOADER_PARTS - LOADER_ARGS_LEN)   /* Command-line args. */
threads/loader.h:#define LOADER_ARG_CNT (LOADER_ARGS - LOADER_ARG_CNT_LEN) /* Number of args. */
threads/loader.S:#### 0x7c00-0x7e00 (512 bytes) and jumps to the beginning of it,
threads/loader.S:# Runs in real mode, which is a 16-bit segment.
threads/loader.S:	mov $0xe3, %al			# 9600 bps, N-8-1.
threads/loader.S:	# Print hd[a-z].
threads/loader.S:	add $'a' - 0x80, %al
threads/loader.S:	# Check for MBR signature--if not present, it's not a
threads/loader.S:	# Print [1-4].
threads/loader.S:	# easy-to-read field to identify its own size (see [ELF1]).
threads/loader.S:	mov %ax, %es			# ES:0000 -> load address
threads/loader.S:#### 32-bit linear address into a 16:16 segment:offset address for
threads/loader.S:#### subroutine takes its null-terminated string argument from the
threads/loader.S:#### general-purpose registers.
threads/loader.S:#### [IntrList]).  Preserves all general-purpose registers.
threads/loader.S:#### general-purpose registers.
threads/loader.S:	mov %sp, %si			# DS:SI -> packet
threads/loader.S:#### Command-line arguments and their count.
threads/loader.S:	.org LOADER_ARG_CNT - LOADER_BASE
threads/loader.S:	.org LOADER_ARGS - LOADER_BASE
threads/loader.S:	.org LOADER_PARTS - LOADER_BASE
threads/loader.S:#### Boot-sector signature for BIOS inspection.
threads/loader.S:	.org LOADER_SIG - LOADER_BASE
threads/Make.vars:# -*- makefile -*-
threads/Make.vars:SIMULATOR = --qemu
threads/malloc.c:   But if the arena that the block was in now has no in-use
threads/malloc.c:      d->block_size = block_size;
threads/malloc.c:      d->blocks_per_arena = (PGSIZE - sizeof (struct arena)) / block_size;
threads/malloc.c:      list_init (&d->free_list);
threads/malloc.c:      lock_init (&d->lock);
threads/malloc.c:  /* Find the smallest descriptor that satisfies a SIZE-byte
threads/malloc.c:    if (d->block_size >= size)
threads/malloc.c:      a->magic = ARENA_MAGIC;
threads/malloc.c:      a->desc = NULL;
threads/malloc.c:      a->free_cnt = page_cnt;
threads/malloc.c:  lock_acquire (&d->lock);
threads/malloc.c:  if (list_empty (&d->free_list))
threads/malloc.c:          lock_release (&d->lock);
threads/malloc.c:      a->magic = ARENA_MAGIC;
threads/malloc.c:      a->desc = d;
threads/malloc.c:      a->free_cnt = d->blocks_per_arena;
threads/malloc.c:      for (i = 0; i < d->blocks_per_arena; i++) 
threads/malloc.c:          list_push_back (&d->free_list, &b->free_elem);
threads/malloc.c:  b = list_entry (list_pop_front (&d->free_list), struct block, free_elem);
threads/malloc.c:  a->free_cnt--;
threads/malloc.c:  lock_release (&d->lock);
threads/malloc.c:  struct desc *d = a->desc;
threads/malloc.c:  return d != NULL ? d->block_size : PGSIZE * a->free_cnt - pg_ofs (block);
threads/malloc.c:      struct desc *d = a->desc;
threads/malloc.c:          /* Clear the block to help detect use-after-free bugs. */
threads/malloc.c:          memset (b, 0xcc, d->block_size);
threads/malloc.c:          lock_acquire (&d->lock);
threads/malloc.c:          list_push_front (&d->free_list, &b->free_elem);
threads/malloc.c:          if (++a->free_cnt >= d->blocks_per_arena) 
threads/malloc.c:              ASSERT (a->free_cnt == d->blocks_per_arena);
threads/malloc.c:              for (i = 0; i < d->blocks_per_arena; i++) 
threads/malloc.c:                  list_remove (&b->free_elem);
threads/malloc.c:          lock_release (&d->lock);
threads/malloc.c:          palloc_free_multiple (a, a->free_cnt);
threads/malloc.c:  ASSERT (a->magic == ARENA_MAGIC);
threads/malloc.c:  ASSERT (a->desc == NULL
threads/malloc.c:          || (pg_ofs (b) - sizeof *a) % a->desc->block_size == 0);
threads/malloc.c:  ASSERT (a->desc != NULL || pg_ofs (b) == sizeof *a);
threads/malloc.c:/* Returns the (IDX - 1)'th block within arena A. */
threads/malloc.c:  ASSERT (a->magic == ARENA_MAGIC);
threads/malloc.c:  ASSERT (idx < a->desc->blocks_per_arena);
threads/malloc.c:                           + idx * a->desc->block_size);
threads/palloc.c:/* Page allocator.  Hands out memory in page-size (or
threads/palloc.c:   page-multiple) chunks.  See malloc.h for an allocator that
threads/palloc.c:  size_t free_pages = (free_end - free_start) / PGSIZE;
threads/palloc.c:  kernel_pages = free_pages - user_pages;
threads/palloc.c:  lock_acquire (&pool->lock);
threads/palloc.c:  page_idx = bitmap_scan_and_flip (pool->used_map, 0, page_cnt, false);
threads/palloc.c:  lock_release (&pool->lock);
threads/palloc.c:    pages = pool->base + PGSIZE * page_idx;
threads/palloc.c:  page_idx = pg_no (pages) - pg_no (pool->base);
threads/palloc.c:  ASSERT (bitmap_all (pool->used_map, page_idx, page_cnt));
threads/palloc.c:  bitmap_set_multiple (pool->used_map, page_idx, page_cnt, false);
threads/palloc.c:  page_cnt -= bm_pages;
threads/palloc.c:  lock_init (&p->lock);
threads/palloc.c:  p->used_map = bitmap_create_in_buf (page_cnt, base, bm_pages * PGSIZE);
threads/palloc.c:  p->base = base + bm_pages * PGSIZE;
threads/palloc.c:  size_t start_page = pg_no (pool->base);
threads/palloc.c:  size_t end_page = start_page + bitmap_size (pool->used_map);
threads/pte.h:   +----------------------+----------------------+----------------------+
threads/pte.h:   +----------------------+----------------------+----------------------+
threads/pte.h:   Pintos reference guide chapter, or [IA32-v3a] 3.7.6
threads/pte.h:   "Page-Directory and Page-Table Entries".
threads/pte.h:   +------------------------------------+------------------------+
threads/pte.h:   +------------------------------------+------------------------+
threads/pte.h:#define PTE_W 0x2               /* 1=read/write, 0=read-only. */
threads/start.S:#### switches from real mode to 32-bit protected mode and calls
threads/start.S:#define CR0_EM 0x00000004      /* (Floating-point) Emulation. */
threads/start.S:#define CR0_WP 0x00010000      /* Write-Protect enable in kernel mode. */
threads/start.S:# The following code runs in real mode, which is a 16-bit code segment.
threads/start.S:#### which returns AX = (kB of physical memory) - 1024.  This only
threads/start.S:	addr32 movl %eax, init_ram_pages - LOADER_PHYS_BASE - 0x20000
threads/start.S:# See [IA32-v3a] section 3.7.6 "Page-Directory and Page-Table Entries"
threads/start.S:# Set up page tables for one-to-map linear to physical map for the
threads/start.S:# See [IA32-v3a] section 3.7.6 "Page-Directory and Page-Table Entries"
threads/start.S:# The CPU doesn't need an addr32 prefix but ELF doesn't do 16-bit
threads/start.S:	data32 addr32 lgdt gdtdesc - LOADER_PHYS_BASE - 0x20000
threads/start.S:#       write-protect bits in page tables (!).
threads/start.S:#    EM (Emulation): forces floating-point instructions to trap.
threads/start.S:# We're now in protected mode in a 16-bit segment.  The CPU still has
threads/start.S:# the real-mode code segment cached in %cs's segment descriptor.  We
threads/start.S:# Because we're not running in a 32-bit segment the data32 prefix is
threads/start.S:# needed to jump to a 32-bit offset in the target segment.
threads/start.S:# We're now in protected mode in a 32-bit segment.
threads/start.S:	movl $0, %ebp			# Null-terminate main()'s backtrace
threads/start.S:	.word	gdtdesc - gdt - 1	# Size of the GDT, minus 1 byte.
threads/switch.S:	# [SysV-ABI-386] pages 3-11 and 3-12 for details.
threads/synch.c:/* Copyright (c) 1992-1996 The Regents of the University of California.
threads/synch.c:   - down or "P": wait for the value to become positive, then
threads/synch.c:   - up or "V": increment the value (and wake up one waiting
threads/synch.c:  sema->value = value;
threads/synch.c:  list_init (&sema->waiters);
threads/synch.c:  while (sema->value == 0) 
threads/synch.c:      list_push_back (&sema->waiters, &thread_current ()->elem);
threads/synch.c:  sema->value--;
threads/synch.c:  if (sema->value > 0) 
threads/synch.c:      sema->value--;
threads/synch.c:  if (!list_empty (&sema->waiters)) 
threads/synch.c:    thread_unblock (list_entry (list_pop_front (&sema->waiters),
threads/synch.c:  sema->value++;
threads/synch.c:/* Self-test for semaphores that makes control "ping-pong"
threads/synch.c:  thread_create ("sema-test", PRI_DEFAULT, sema_test_helper, &sema);
threads/synch.c:  lock->holder = NULL;
threads/synch.c:  sema_init (&lock->semaphore, 1);
threads/synch.c:  sema_down (&lock->semaphore);
threads/synch.c:  lock->holder = thread_current ();
threads/synch.c:  success = sema_try_down (&lock->semaphore);
threads/synch.c:    lock->holder = thread_current ();
threads/synch.c:  lock->holder = NULL;
threads/synch.c:  sema_up (&lock->semaphore);
threads/synch.c:  return lock->holder == thread_current ();
threads/synch.c:  list_init (&cond->waiters);
threads/synch.c:   condition variables.  That is, there is a one-to-many mapping
threads/synch.c:  list_push_back (&cond->waiters, &waiter.elem);
threads/synch.c:  if (!list_empty (&cond->waiters)) 
threads/synch.c:    sema_up (&list_entry (list_pop_front (&cond->waiters),
threads/synch.c:                          struct semaphore_elem, elem)->semaphore);
threads/synch.c:  while (!list_empty (&cond->waiters))
threads/vaddr.h:#define BITMASK(SHIFT, CNT) (((1ul << (CNT)) - 1) << (SHIFT))
threads/vaddr.h:  return (void *) (((uintptr_t) va + PGSIZE - 1) & ~PGMASK);
threads/vaddr.h:/* Base address of the 1:1 physical-to-virtual mapping.  Physical
threads/vaddr.h:  return (uintptr_t) vaddr - (uintptr_t) PHYS_BASE;
Binary file threads/build/devices/pit.o matches
Binary file threads/build/devices/kbd.o matches
Binary file threads/build/devices/vga.o matches
Binary file threads/build/devices/block.o matches
Binary file threads/build/devices/partition.o matches
Binary file threads/build/devices/ide.o matches
Binary file threads/build/devices/input.o matches
Binary file threads/build/devices/rtc.o matches
Binary file threads/build/devices/speaker.o matches
Binary file threads/build/devices/timer.o matches
Binary file threads/build/devices/serial.o matches
Binary file threads/build/devices/intq.o matches
Binary file threads/build/devices/shutdown.o matches
Binary file threads/build/lib/kernel/list.o matches
Binary file threads/build/lib/kernel/bitmap.o matches
Binary file threads/build/lib/kernel/hash.o matches
Binary file threads/build/lib/kernel/console.o matches
Binary file threads/build/lib/kernel/debug.o matches
Binary file threads/build/lib/debug.o matches
Binary file threads/build/lib/random.o matches
Binary file threads/build/lib/stdio.o matches
Binary file threads/build/lib/stdlib.o matches
Binary file threads/build/lib/string.o matches
Binary file threads/build/lib/arithmetic.o matches
Binary file threads/build/lib/ustar.o matches
Binary file threads/build/tests/threads/tests.o matches
threads/build/tests/threads/alarm-wait.d:tests/threads/alarm-wait.o: ../../tests/threads/alarm-wait.c \
threads/build/tests/threads/alarm-simultaneous.d:tests/threads/alarm-simultaneous.o: \
threads/build/tests/threads/alarm-simultaneous.d: ../../tests/threads/alarm-simultaneous.c ../../lib/stdio.h \
threads/build/tests/threads/alarm-priority.d:tests/threads/alarm-priority.o: ../../tests/threads/alarm-priority.c \
threads/build/tests/threads/alarm-zero.d:tests/threads/alarm-zero.o: ../../tests/threads/alarm-zero.c \
threads/build/tests/threads/alarm-negative.d:tests/threads/alarm-negative.o: ../../tests/threads/alarm-negative.c \
threads/build/tests/threads/priority-change.d:tests/threads/priority-change.o: ../../tests/threads/priority-change.c \
threads/build/tests/threads/priority-donate-one.d:tests/threads/priority-donate-one.o: \
threads/build/tests/threads/priority-donate-one.d: ../../tests/threads/priority-donate-one.c ../../lib/stdio.h \
threads/build/tests/threads/priority-donate-multiple.d:tests/threads/priority-donate-multiple.o: \
threads/build/tests/threads/priority-donate-multiple.d: ../../tests/threads/priority-donate-multiple.c ../../lib/stdio.h \
threads/build/tests/threads/priority-donate-multiple2.d:tests/threads/priority-donate-multiple2.o: \
threads/build/tests/threads/priority-donate-multiple2.d: ../../tests/threads/priority-donate-multiple2.c ../../lib/stdio.h \
threads/build/tests/threads/priority-donate-nest.d:tests/threads/priority-donate-nest.o: \
threads/build/tests/threads/priority-donate-nest.d: ../../tests/threads/priority-donate-nest.c ../../lib/stdio.h \
threads/build/tests/threads/priority-donate-sema.d:tests/threads/priority-donate-sema.o: \
threads/build/tests/threads/priority-donate-sema.d: ../../tests/threads/priority-donate-sema.c ../../lib/stdio.h \
threads/build/tests/threads/priority-donate-lower.d:tests/threads/priority-donate-lower.o: \
threads/build/tests/threads/priority-donate-lower.d: ../../tests/threads/priority-donate-lower.c ../../lib/stdio.h \
threads/build/tests/threads/priority-fifo.d:tests/threads/priority-fifo.o: ../../tests/threads/priority-fifo.c \
threads/build/tests/threads/priority-preempt.d:tests/threads/priority-preempt.o: ../../tests/threads/priority-preempt.c \
threads/build/tests/threads/priority-sema.d:tests/threads/priority-sema.o: ../../tests/threads/priority-sema.c \
threads/build/tests/threads/priority-condvar.d:tests/threads/priority-condvar.o: ../../tests/threads/priority-condvar.c \
threads/build/tests/threads/priority-donate-chain.d:tests/threads/priority-donate-chain.o: \
threads/build/tests/threads/priority-donate-chain.d: ../../tests/threads/priority-donate-chain.c ../../lib/stdio.h \
threads/build/tests/threads/mlfqs-load-1.d:tests/threads/mlfqs-load-1.o: ../../tests/threads/mlfqs-load-1.c \
threads/build/tests/threads/mlfqs-load-60.d:tests/threads/mlfqs-load-60.o: ../../tests/threads/mlfqs-load-60.c \
threads/build/tests/threads/mlfqs-load-avg.d:tests/threads/mlfqs-load-avg.o: ../../tests/threads/mlfqs-load-avg.c \
threads/build/tests/threads/mlfqs-recent-1.d:tests/threads/mlfqs-recent-1.o: ../../tests/threads/mlfqs-recent-1.c \
threads/build/tests/threads/mlfqs-fair.d:tests/threads/mlfqs-fair.o: ../../tests/threads/mlfqs-fair.c \
threads/build/tests/threads/mlfqs-block.d:tests/threads/mlfqs-block.o: ../../tests/threads/mlfqs-block.c \
Binary file threads/build/tests/threads/alarm-wait.o matches
Binary file threads/build/tests/threads/alarm-simultaneous.o matches
Binary file threads/build/tests/threads/alarm-priority.o matches
Binary file threads/build/tests/threads/alarm-zero.o matches
Binary file threads/build/tests/threads/alarm-negative.o matches
Binary file threads/build/tests/threads/priority-change.o matches
Binary file threads/build/tests/threads/priority-donate-one.o matches
Binary file threads/build/tests/threads/priority-donate-multiple.o matches
Binary file threads/build/tests/threads/priority-donate-multiple2.o matches
Binary file threads/build/tests/threads/priority-donate-nest.o matches
Binary file threads/build/tests/threads/priority-donate-sema.o matches
Binary file threads/build/tests/threads/priority-donate-lower.o matches
Binary file threads/build/tests/threads/priority-fifo.o matches
Binary file threads/build/tests/threads/priority-preempt.o matches
Binary file threads/build/tests/threads/priority-sema.o matches
Binary file threads/build/tests/threads/priority-condvar.o matches
Binary file threads/build/tests/threads/priority-donate-chain.o matches
Binary file threads/build/tests/threads/mlfqs-load-1.o matches
Binary file threads/build/tests/threads/mlfqs-load-60.o matches
Binary file threads/build/tests/threads/mlfqs-load-avg.o matches
Binary file threads/build/tests/threads/mlfqs-recent-1.o matches
Binary file threads/build/tests/threads/mlfqs-fair.o matches
Binary file threads/build/tests/threads/mlfqs-block.o matches
threads/build/threads/kernel.lds.s:OUTPUT_FORMAT("elf32-i386")
threads/build/threads/kernel.lds.s:  ASSERT (_end - _start <= 512K, "Kernel image is too big.")
Binary file threads/build/threads/start.o matches
threads/build/threads/thread.d: ../../threads/interrupt.h ../../threads/intr-stubs.h \
Binary file threads/build/threads/switch.o matches
threads/build/threads/interrupt.d: ../../threads/intr-stubs.h ../../threads/io.h ../../threads/thread.h \
threads/build/threads/intr-stubs.d:threads/intr-stubs.o: ../../threads/intr-stubs.S ../../threads/loader.h
Binary file threads/build/threads/intr-stubs.o matches
Binary file threads/build/threads/palloc.o matches
Binary file threads/build/threads/malloc.o matches
Binary file threads/build/threads/loader.o matches
Binary file threads/build/threads/init.o matches
Binary file threads/build/threads/thread.o matches
Binary file threads/build/threads/interrupt.o matches
Binary file threads/build/threads/synch.o matches
threads/build/Makefile:# -*- makefile -*-
threads/build/Makefile:kernel.bin: CPPFLAGS += -I$(SRCDIR)/lib/kernel
threads/build/Makefile:threads_SRC += threads/intr-stubs.S	# Interrupt stubs.
threads/build/Makefile:devices_SRC += devices/rtc.c		# Real-time clock.
threads/build/Makefile:lib_SRC += lib/random.c			# Pseudo-random numbers.
threads/build/Makefile:lib_SRC += lib/arithmetic.c		# 64-bit arithmetic for GCC.
threads/build/Makefile:# Kernel-specific library code.
threads/build/Makefile:lib/kernel_SRC += lib/kernel/list.c	# Doubly-linked lists.
threads/build/Makefile:filesys_SRC += filesys/free-map.c	# Free sector bitmap.
threads/build/Makefile:threads/kernel.lds.s: CPPFLAGS += -P
threads/build/Makefile:	$(LD) -T $< -o $@ $(OBJECTS)
threads/build/Makefile:	$(OBJCOPY) -R .note -R .comment -S $< $@
threads/build/Makefile:	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES)
threads/build/Makefile:	$(LD) -N -e 0 -Ttext 0x7c00 --oformat binary -o $@ $<
threads/build/Makefile:	rm -f $(OBJECTS) $(DEPENDS) 
threads/build/Makefile:	rm -f threads/loader.o threads/kernel.lds.s threads/loader.d
threads/build/Makefile:	rm -f kernel.bin.tmp
threads/build/Makefile:	rm -f kernel.o kernel.lds.s
threads/build/Makefile:	rm -f kernel.bin loader.bin
threads/build/Makefile:	rm -f bochsout.txt bochsrc.txt
threads/build/Makefile:	rm -f results grade
threads/build/Makefile:-include $(DEPENDS)
Binary file threads/build/loader.bin matches
Binary file threads/build/kernel.o matches
Binary file threads/build/kernel.bin matches
threads/thread.h:#define TID_ERROR ((tid_t) -1)          /* Error value for tid_t. */
threads/thread.h:        4 kB +---------------------------------+
threads/thread.h:             +---------------------------------+
threads/thread.h:        0 kB +---------------------------------+
threads/thread.h:         structures or arrays as non-static local variables.  Use
threads/thread.h:/* If false (default), use round-robin scheduler.
threads/thread.h:   If true, use multi-level feedback queue scheduler.
threads/thread.h:   Controlled by kernel command-line option "-o mlfqs". */
threads/thread.c:#include "threads/intr-stubs.h"
threads/thread.c:/* If false (default), use round-robin scheduler.
threads/thread.c:   If true, use multi-level feedback queue scheduler.
threads/thread.c:   Controlled by kernel command-line option "-o mlfqs". */
threads/thread.c:	initial_thread->status = THREAD_RUNNING;
threads/thread.c:	initial_thread->tid = allocate_tid ();
threads/thread.c:	else if (t->pagedir != NULL)
threads/thread.c:   Priority scheduling is the goal of Problem 1-3. */
threads/thread.c:	tid = t->tid = allocate_tid ();
threads/thread.c:	kf->eip = NULL;
threads/thread.c:	kf->function = function;
threads/thread.c:	kf->aux = aux;
threads/thread.c:	ef->eip = (void (*) (void)) kernel_thread;
threads/thread.c:	sf->eip = switch_entry;
threads/thread.c:	sf->ebp = 0;
threads/thread.c:	thread_current ()->status = THREAD_BLOCKED;
threads/thread.c:/* Transitions a blocked thread T to the ready-to-run state.
threads/thread.c:	ASSERT (t->status == THREAD_BLOCKED);
threads/thread.c:	list_push_back (&ready_list, &t->elem);
threads/thread.c:	t->status = THREAD_READY;
threads/thread.c:	return thread_current ()->name;
threads/thread.c:	ASSERT (t->status == THREAD_RUNNING);
threads/thread.c:	return thread_current ()->tid;
threads/thread.c:	list_remove (&thread_current()->allelem);
threads/thread.c:	thread_current ()->status = THREAD_DYING;
threads/thread.c:		list_push_back (&ready_list, &cur->elem);
threads/thread.c:	cur->status = THREAD_READY;
threads/thread.c:	thread_current ()->priority = new_priority;
threads/thread.c:	return thread_current ()->priority;
threads/thread.c:		/* Re-enable interrupts and wait for the next one.
threads/thread.c:		   between re-enabling interrupts and waiting for the next
threads/thread.c:		   See [IA32-v2a] "HLT", [IA32-v2b] "STI", and [IA32-v3a]
threads/thread.c:	return t != NULL && t->magic == THREAD_MAGIC;
threads/thread.c:	t->status = THREAD_BLOCKED;
threads/thread.c:	strlcpy (t->name, name, sizeof t->name);
threads/thread.c:	t->stack = (uint8_t *) t + PGSIZE;
threads/thread.c:	t->priority = priority;
threads/thread.c:	t->magic = THREAD_MAGIC;
threads/thread.c:	list_push_back (&all_list, &t->allelem);
threads/thread.c:	for(int i=0; i<128; i++) t->fd[i]=NULL;	//Initialize fd's to NULL
threads/thread.c:	sema_init(&(t->lock_child), 0);
threads/thread.c:	sema_init(&(t->lock_memory), 0);
threads/thread.c:	sema_init(&(t->lock_load), 0);
threads/thread.c:	list_init(&(t->child));
threads/thread.c:	list_push_back (&(running_thread()->child), &(t->childelem));
threads/thread.c:/* Allocates a SIZE-byte frame at the top of thread T's stack and
threads/thread.c:	/* Stack data is always allocated in word-size units. */
threads/thread.c:	t->stack -= size;
threads/thread.c:	return t->stack;
threads/thread.c:	cur->status = THREAD_RUNNING;
threads/thread.c:	if (prev != NULL && prev->status == THREAD_DYING && prev != initial_thread) 
threads/thread.c:	ASSERT (cur->status != THREAD_RUNNING);
userprog/exception.h:#define PF_P 0x1    /* 0: not-present page. 1: access rights violation. */
userprog/gdt.c:   The GDT, an x86-specific structure, defines segments that can
userprog/gdt.c:   their permissions.  There is also a per-process Local
userprog/gdt.c:   Task-State Segment descriptors.  The former two types are
userprog/gdt.c:   [IA32-v3a] 3.2 "Using Segments" through 3.5 "System Descriptor
userprog/gdt.c:   include user-mode selectors or a TSS, but we need both now. */
userprog/gdt.c:  /* Load GDTR, TR.  See [IA32-v3a] 2.4.1 "Global Descriptor
userprog/gdt.c:  gdtr_operand = make_gdtr_operand (sizeof gdt - 1, gdt);
userprog/gdt.c:    GRAN_BYTE = 0,              /* Limit has 1-byte granularity. */
userprog/gdt.c:/* Returns a segment descriptor with the given 32-bit BASE and
userprog/gdt.c:   20-bit LIMIT (whose interpretation depends on GRANULARITY).
userprog/gdt.c:   [IA32-v3a] 4.5 "Privilege Levels" for further discussion. */
userprog/gdt.c:        | (1 << 22)                  /* 32-bit segment. */
userprog/gdt.c:/* Returns a descriptor for an "available" 32-bit Task-State
userprog/gdt.c:   0x67 bytes (the size of a 32-bit TSS), and a DPL of 0.
userprog/gdt.c:   See [IA32-v3a] 6.2.2 "TSS Descriptor". */
userprog/gdt.h:#define SEL_TSS         0x28    /* Task-state segment. */
userprog/Make.vars:# -*- makefile -*-
userprog/Make.vars:kernel.bin: DEFINES = -DUSERPROG -DFILESYS
userprog/Make.vars:TEST_SUBDIRS = tests/userprog tests/userprog/no-vm tests/filesys/base
userprog/Make.vars:SIMULATOR = --qemu
userprog/pagedir.c:   otherwise it is read-only.
userprog/pagedir.c:     new page tables immediately.  See [IA32-v2a] "MOV--Move
userprog/pagedir.c:     to/from Control Registers" and [IA32-v3a] 3.7.5 "Base
userprog/pagedir.c:     See [IA32-v2a] "MOV--Move to/from Control Registers" and
userprog/pagedir.c:     [IA32-v3a] 3.7.5 "Base Address of the Page Directory". */
userprog/pagedir.c:   lookaside buffer (TLB) to become out-of-sync with the page
userprog/pagedir.c:   re-activating it.
userprog/pagedir.c:      /* Re-activating PD clears the TLB.  See [IA32-v3a] 3.12
userprog/tss.c:/* The Task-State Segment (TSS).
userprog/tss.c:   Instances of the TSS, an x86-specific structure, are used to
userprog/tss.c:     - If the code interrupted by the interrupt is in the same
userprog/tss.c:     - If the interrupted code is in a different ring from the
userprog/tss.c:   See [IA32-v3a] 6.2.1 "Task-State Segment (TSS)" for a
userprog/tss.c:   description of the TSS.  See [IA32-v3a] 5.12.1 "Exception- or
userprog/tss.c:   Interrupt-Handler Procedures" for a description of when and
userprog/tss.c:  tss->ss0 = SEL_KDSEG;
userprog/tss.c:  tss->bitmap = 0xdfff;
userprog/tss.c:  tss->esp0 = (uint8_t *) thread_current () + PGSIZE;
userprog/build/Makefile:# -*- makefile -*-
userprog/build/Makefile:kernel.bin: CPPFLAGS += -I$(SRCDIR)/lib/kernel
userprog/build/Makefile:threads_SRC += threads/intr-stubs.S	# Interrupt stubs.
userprog/build/Makefile:devices_SRC += devices/rtc.c		# Real-time clock.
userprog/build/Makefile:lib_SRC += lib/random.c			# Pseudo-random numbers.
userprog/build/Makefile:lib_SRC += lib/arithmetic.c		# 64-bit arithmetic for GCC.
userprog/build/Makefile:# Kernel-specific library code.
userprog/build/Makefile:lib/kernel_SRC += lib/kernel/list.c	# Doubly-linked lists.
userprog/build/Makefile:filesys_SRC += filesys/free-map.c	# Free sector bitmap.
userprog/build/Makefile:threads/kernel.lds.s: CPPFLAGS += -P
userprog/build/Makefile:	$(LD) -T $< -o $@ $(OBJECTS)
userprog/build/Makefile:	$(OBJCOPY) -R .note -R .comment -S $< $@
userprog/build/Makefile:	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES)
userprog/build/Makefile:	$(LD) -N -e 0 -Ttext 0x7c00 --oformat binary -o $@ $<
userprog/build/Makefile:	rm -f $(OBJECTS) $(DEPENDS) 
userprog/build/Makefile:	rm -f threads/loader.o threads/kernel.lds.s threads/loader.d
userprog/build/Makefile:	rm -f kernel.bin.tmp
userprog/build/Makefile:	rm -f kernel.o kernel.lds.s
userprog/build/Makefile:	rm -f kernel.bin loader.bin
userprog/build/Makefile:	rm -f bochsout.txt bochsrc.txt
userprog/build/Makefile:	rm -f results grade
userprog/build/Makefile:-include $(DEPENDS)
userprog/build/results:pass tests/userprog/args-none
userprog/build/results:pass tests/userprog/args-single
userprog/build/results:pass tests/userprog/args-multiple
userprog/build/results:pass tests/userprog/args-many
userprog/build/results:pass tests/userprog/args-dbl-space
userprog/build/results:pass tests/userprog/sc-bad-sp
userprog/build/results:pass tests/userprog/sc-bad-arg
userprog/build/results:pass tests/userprog/sc-boundary
userprog/build/results:pass tests/userprog/sc-boundary-2
userprog/build/results:pass tests/userprog/sc-boundary-3
userprog/build/results:pass tests/userprog/create-normal
userprog/build/results:pass tests/userprog/create-empty
userprog/build/results:pass tests/userprog/create-null
userprog/build/results:pass tests/userprog/create-bad-ptr
userprog/build/results:pass tests/userprog/create-long
userprog/build/results:pass tests/userprog/create-exists
userprog/build/results:pass tests/userprog/create-bound
userprog/build/results:pass tests/userprog/open-normal
userprog/build/results:pass tests/userprog/open-missing
userprog/build/results:pass tests/userprog/open-boundary
userprog/build/results:pass tests/userprog/open-empty
userprog/build/results:pass tests/userprog/open-null
userprog/build/results:pass tests/userprog/open-bad-ptr
userprog/build/results:pass tests/userprog/open-twice
userprog/build/results:pass tests/userprog/close-normal
userprog/build/results:pass tests/userprog/close-twice
userprog/build/results:pass tests/userprog/close-stdin
userprog/build/results:pass tests/userprog/close-stdout
userprog/build/results:pass tests/userprog/close-bad-fd
userprog/build/results:pass tests/userprog/read-normal
userprog/build/results:pass tests/userprog/read-bad-ptr
userprog/build/results:pass tests/userprog/read-boundary
userprog/build/results:pass tests/userprog/read-zero
userprog/build/results:pass tests/userprog/read-stdout
userprog/build/results:pass tests/userprog/read-bad-fd
userprog/build/results:pass tests/userprog/write-normal
userprog/build/results:pass tests/userprog/write-bad-ptr
userprog/build/results:pass tests/userprog/write-boundary
userprog/build/results:pass tests/userprog/write-zero
userprog/build/results:pass tests/userprog/write-stdin
userprog/build/results:pass tests/userprog/write-bad-fd
userprog/build/results:pass tests/userprog/exec-once
userprog/build/results:pass tests/userprog/exec-arg
userprog/build/results:pass tests/userprog/exec-bound
userprog/build/results:pass tests/userprog/exec-bound-2
userprog/build/results:pass tests/userprog/exec-bound-3
userprog/build/results:pass tests/userprog/exec-multiple
userprog/build/results:pass tests/userprog/exec-missing
userprog/build/results:pass tests/userprog/exec-bad-ptr
userprog/build/results:pass tests/userprog/wait-simple
userprog/build/results:pass tests/userprog/wait-twice
userprog/build/results:pass tests/userprog/wait-killed
userprog/build/results:pass tests/userprog/wait-bad-pid
userprog/build/results:pass tests/userprog/multi-recurse
userprog/build/results:pass tests/userprog/multi-child-fd
userprog/build/results:pass tests/userprog/rox-simple
userprog/build/results:pass tests/userprog/rox-child
userprog/build/results:pass tests/userprog/rox-multichild
userprog/build/results:pass tests/userprog/bad-read
userprog/build/results:pass tests/userprog/bad-write
userprog/build/results:pass tests/userprog/bad-read2
userprog/build/results:pass tests/userprog/bad-write2
userprog/build/results:pass tests/userprog/bad-jump
userprog/build/results:pass tests/userprog/bad-jump2
userprog/build/results:FAIL tests/userprog/no-vm/multi-oom
userprog/build/results:pass tests/filesys/base/lg-create
userprog/build/results:pass tests/filesys/base/lg-full
userprog/build/results:pass tests/filesys/base/lg-random
userprog/build/results:pass tests/filesys/base/lg-seq-block
userprog/build/results:pass tests/filesys/base/lg-seq-random
userprog/build/results:pass tests/filesys/base/sm-create
userprog/build/results:pass tests/filesys/base/sm-full
userprog/build/results:pass tests/filesys/base/sm-random
userprog/build/results:pass tests/filesys/base/sm-seq-block
userprog/build/results:pass tests/filesys/base/sm-seq-random
userprog/build/results:pass tests/filesys/base/syn-read
userprog/build/results:pass tests/filesys/base/syn-remove
userprog/build/results:pass tests/filesys/base/syn-write
Binary file userprog/build/devices/block.o matches
Binary file userprog/build/devices/ide.o matches
Binary file userprog/build/devices/input.o matches
Binary file userprog/build/devices/kbd.o matches
Binary file userprog/build/devices/partition.o matches
Binary file userprog/build/devices/pit.o matches
Binary file userprog/build/devices/rtc.o matches
Binary file userprog/build/devices/speaker.o matches
Binary file userprog/build/devices/vga.o matches
Binary file userprog/build/devices/timer.o matches
Binary file userprog/build/devices/serial.o matches
Binary file userprog/build/devices/intq.o matches
Binary file userprog/build/devices/shutdown.o matches
Binary file userprog/build/filesys/directory.o matches
userprog/build/filesys/filesys.d: ../../filesys/file.h ../../filesys/free-map.h ../../devices/block.h \
userprog/build/filesys/free-map.d:filesys/free-map.o: ../../filesys/free-map.c ../../filesys/free-map.h \
userprog/build/filesys/inode.d: ../../lib/string.h ../../filesys/filesys.h ../../filesys/free-map.h \
Binary file userprog/build/filesys/inode.o matches
Binary file userprog/build/filesys/filesys.o matches
Binary file userprog/build/filesys/free-map.o matches
Binary file userprog/build/filesys/file.o matches
Binary file userprog/build/filesys/fsutil.o matches
Binary file userprog/build/lib/arithmetic.o matches
Binary file userprog/build/lib/debug.o matches
Binary file userprog/build/lib/random.o matches
Binary file userprog/build/lib/stdio.o matches
Binary file userprog/build/lib/stdlib.o matches
Binary file userprog/build/lib/string.o matches
Binary file userprog/build/lib/ustar.o matches
Binary file userprog/build/lib/kernel/console.o matches
Binary file userprog/build/lib/kernel/hash.o matches
Binary file userprog/build/lib/kernel/list.o matches
Binary file userprog/build/lib/kernel/bitmap.o matches
Binary file userprog/build/lib/kernel/debug.o matches
userprog/build/lib/user/console.d: ../../lib/string.h ../../lib/user/syscall.h ../../lib/syscall-nr.h
Binary file userprog/build/lib/user/console.o matches
Binary file userprog/build/lib/user/debug.o matches
Binary file userprog/build/lib/user/entry.o matches
userprog/build/lib/user/syscall.d: ../../lib/stdbool.h ../../lib/debug.h ../../lib/user/../syscall-nr.h
Binary file userprog/build/lib/user/syscall.o matches
Binary file userprog/build/tests/lib.o matches
Binary file userprog/build/tests/main.o matches
Binary file userprog/build/tests/filesys/seq-test.o matches
userprog/build/tests/filesys/seq-test.d:tests/filesys/seq-test.o: ../../tests/filesys/seq-test.c \
userprog/build/tests/filesys/seq-test.d: ../../tests/filesys/seq-test.h ../../lib/stddef.h ../../lib/random.h \
userprog/build/tests/filesys/base/child-syn-read.d:tests/filesys/base/child-syn-read.o: \
userprog/build/tests/filesys/base/child-syn-read.d: ../../tests/filesys/base/child-syn-read.c ../../lib/random.h \
userprog/build/tests/filesys/base/child-syn-read.d: ../../tests/lib.h ../../tests/filesys/base/syn-read.h
Binary file userprog/build/tests/filesys/base/child-syn-read.o matches
userprog/build/tests/filesys/base/child-syn-wrt.d:tests/filesys/base/child-syn-wrt.o: \
userprog/build/tests/filesys/base/child-syn-wrt.d: ../../tests/filesys/base/child-syn-wrt.c ../../lib/random.h \
userprog/build/tests/filesys/base/child-syn-wrt.d: ../../tests/filesys/base/syn-write.h
Binary file userprog/build/tests/filesys/base/child-syn-wrt.o matches
userprog/build/tests/filesys/base/lg-create.d:tests/filesys/base/lg-create.o: ../../tests/filesys/base/lg-create.c \
Binary file userprog/build/tests/filesys/base/lg-create.o matches
userprog/build/tests/filesys/base/lg-create.output:Copying tests/filesys/base/lg-create to scratch partition...
userprog/build/tests/filesys/base/lg-create.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/T1S4wDvPCc.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/lg-create.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/lg-create.output:Kernel command line: -q -f extract run lg-create
userprog/build/tests/filesys/base/lg-create.output:Putting 'lg-create' into the file system...
userprog/build/tests/filesys/base/lg-create.output:Executing 'lg-create':
userprog/build/tests/filesys/base/lg-create.output:(lg-create) begin
userprog/build/tests/filesys/base/lg-create.output:(lg-create) create "blargle"
userprog/build/tests/filesys/base/lg-create.output:(lg-create) open "blargle" for verification
userprog/build/tests/filesys/base/lg-create.output:(lg-create) verified contents of "blargle"
userprog/build/tests/filesys/base/lg-create.output:(lg-create) close "blargle"
userprog/build/tests/filesys/base/lg-create.output:(lg-create) end
userprog/build/tests/filesys/base/lg-create.output:lg-create: exit(0)
userprog/build/tests/filesys/base/lg-create.output:Execution of 'lg-create' complete.
userprog/build/tests/filesys/base/lg-full.d:tests/filesys/base/lg-full.o: ../../tests/filesys/base/lg-full.c \
userprog/build/tests/filesys/base/lg-full.d: ../../tests/filesys/base/full.inc ../../tests/filesys/seq-test.h \
Binary file userprog/build/tests/filesys/base/lg-full.o matches
userprog/build/tests/filesys/base/lg-full.output:Copying tests/filesys/base/lg-full to scratch partition...
userprog/build/tests/filesys/base/lg-full.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/Ov2sVcCgkm.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/lg-full.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/lg-full.output:Kernel command line: -q -f extract run lg-full
userprog/build/tests/filesys/base/lg-full.output:Putting 'lg-full' into the file system...
userprog/build/tests/filesys/base/lg-full.output:Executing 'lg-full':
userprog/build/tests/filesys/base/lg-full.output:(lg-full) begin
userprog/build/tests/filesys/base/lg-full.output:(lg-full) create "quux"
userprog/build/tests/filesys/base/lg-full.output:(lg-full) open "quux"
userprog/build/tests/filesys/base/lg-full.output:(lg-full) writing "quux"
userprog/build/tests/filesys/base/lg-full.output:(lg-full) close "quux"
userprog/build/tests/filesys/base/lg-full.output:(lg-full) open "quux" for verification
userprog/build/tests/filesys/base/lg-full.output:(lg-full) verified contents of "quux"
userprog/build/tests/filesys/base/lg-full.output:(lg-full) close "quux"
userprog/build/tests/filesys/base/lg-full.output:(lg-full) end
userprog/build/tests/filesys/base/lg-full.output:lg-full: exit(0)
userprog/build/tests/filesys/base/lg-full.output:Execution of 'lg-full' complete.
userprog/build/tests/filesys/base/lg-random.d:tests/filesys/base/lg-random.o: ../../tests/filesys/base/lg-random.c \
Binary file userprog/build/tests/filesys/base/lg-random.o matches
userprog/build/tests/filesys/base/lg-random.output:Copying tests/filesys/base/lg-random to scratch partition...
userprog/build/tests/filesys/base/lg-random.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/oRzPmMMbTB.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/lg-random.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/lg-random.output:Kernel command line: -q -f extract run lg-random
userprog/build/tests/filesys/base/lg-random.output:Putting 'lg-random' into the file system...
userprog/build/tests/filesys/base/lg-random.output:Executing 'lg-random':
userprog/build/tests/filesys/base/lg-random.output:(lg-random) begin
userprog/build/tests/filesys/base/lg-random.output:(lg-random) create "bazzle"
userprog/build/tests/filesys/base/lg-random.output:(lg-random) open "bazzle"
userprog/build/tests/filesys/base/lg-random.output:(lg-random) write "bazzle" in random order
userprog/build/tests/filesys/base/lg-random.output:(lg-random) read "bazzle" in random order
userprog/build/tests/filesys/base/lg-random.output:(lg-random) close "bazzle"
userprog/build/tests/filesys/base/lg-random.output:(lg-random) end
userprog/build/tests/filesys/base/lg-random.output:lg-random: exit(0)
userprog/build/tests/filesys/base/lg-random.output:Execution of 'lg-random' complete.
userprog/build/tests/filesys/base/lg-seq-block.d:tests/filesys/base/lg-seq-block.o: \
userprog/build/tests/filesys/base/lg-seq-block.d: ../../tests/filesys/base/lg-seq-block.c \
userprog/build/tests/filesys/base/lg-seq-block.d: ../../tests/filesys/base/seq-block.inc ../../tests/filesys/seq-test.h \
Binary file userprog/build/tests/filesys/base/lg-seq-block.o matches
userprog/build/tests/filesys/base/lg-seq-block.output:Copying tests/filesys/base/lg-seq-block to scratch partition...
userprog/build/tests/filesys/base/lg-seq-block.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/tA4idhNDyR.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/lg-seq-block.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/lg-seq-block.output:Kernel command line: -q -f extract run lg-seq-block
userprog/build/tests/filesys/base/lg-seq-block.output:Putting 'lg-seq-block' into the file system...
userprog/build/tests/filesys/base/lg-seq-block.output:Executing 'lg-seq-block':
userprog/build/tests/filesys/base/lg-seq-block.output:(lg-seq-block) begin
userprog/build/tests/filesys/base/lg-seq-block.output:(lg-seq-block) create "noodle"
userprog/build/tests/filesys/base/lg-seq-block.output:(lg-seq-block) open "noodle"
userprog/build/tests/filesys/base/lg-seq-block.output:(lg-seq-block) writing "noodle"
userprog/build/tests/filesys/base/lg-seq-block.output:(lg-seq-block) close "noodle"
userprog/build/tests/filesys/base/lg-seq-block.output:(lg-seq-block) open "noodle" for verification
userprog/build/tests/filesys/base/lg-seq-block.output:(lg-seq-block) verified contents of "noodle"
userprog/build/tests/filesys/base/lg-seq-block.output:(lg-seq-block) close "noodle"
userprog/build/tests/filesys/base/lg-seq-block.output:(lg-seq-block) end
userprog/build/tests/filesys/base/lg-seq-block.output:lg-seq-block: exit(0)
userprog/build/tests/filesys/base/lg-seq-block.output:Execution of 'lg-seq-block' complete.
userprog/build/tests/filesys/base/lg-seq-random.d:tests/filesys/base/lg-seq-random.o: \
userprog/build/tests/filesys/base/lg-seq-random.d: ../../tests/filesys/base/lg-seq-random.c \
userprog/build/tests/filesys/base/lg-seq-random.d: ../../tests/filesys/base/seq-random.inc ../../lib/random.h \
userprog/build/tests/filesys/base/lg-seq-random.d: ../../lib/stddef.h ../../tests/filesys/seq-test.h ../../tests/main.h
Binary file userprog/build/tests/filesys/base/lg-seq-random.o matches
userprog/build/tests/filesys/base/lg-seq-random.output:Copying tests/filesys/base/lg-seq-random to scratch partition...
userprog/build/tests/filesys/base/lg-seq-random.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/zAkve5T_pX.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/lg-seq-random.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/lg-seq-random.output:Kernel command line: -q -f extract run lg-seq-random
userprog/build/tests/filesys/base/lg-seq-random.output:Putting 'lg-seq-random' into the file system...
userprog/build/tests/filesys/base/lg-seq-random.output:Executing 'lg-seq-random':
userprog/build/tests/filesys/base/lg-seq-random.output:(lg-seq-random) begin
userprog/build/tests/filesys/base/lg-seq-random.output:(lg-seq-random) create "nibble"
userprog/build/tests/filesys/base/lg-seq-random.output:(lg-seq-random) open "nibble"
userprog/build/tests/filesys/base/lg-seq-random.output:(lg-seq-random) writing "nibble"
userprog/build/tests/filesys/base/lg-seq-random.output:(lg-seq-random) close "nibble"
userprog/build/tests/filesys/base/lg-seq-random.output:(lg-seq-random) open "nibble" for verification
userprog/build/tests/filesys/base/lg-seq-random.output:(lg-seq-random) verified contents of "nibble"
userprog/build/tests/filesys/base/lg-seq-random.output:(lg-seq-random) close "nibble"
userprog/build/tests/filesys/base/lg-seq-random.output:(lg-seq-random) end
userprog/build/tests/filesys/base/lg-seq-random.output:lg-seq-random: exit(0)
userprog/build/tests/filesys/base/lg-seq-random.output:Execution of 'lg-seq-random' complete.
userprog/build/tests/filesys/base/sm-create.d:tests/filesys/base/sm-create.o: ../../tests/filesys/base/sm-create.c \
Binary file userprog/build/tests/filesys/base/sm-create.o matches
userprog/build/tests/filesys/base/sm-create.output:Copying tests/filesys/base/sm-create to scratch partition...
userprog/build/tests/filesys/base/sm-create.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/ljA2k0PHMF.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/sm-create.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/sm-create.output:Kernel command line: -q -f extract run sm-create
userprog/build/tests/filesys/base/sm-create.output:Putting 'sm-create' into the file system...
userprog/build/tests/filesys/base/sm-create.output:Executing 'sm-create':
userprog/build/tests/filesys/base/sm-create.output:(sm-create) begin
userprog/build/tests/filesys/base/sm-create.output:(sm-create) create "blargle"
userprog/build/tests/filesys/base/sm-create.output:(sm-create) open "blargle" for verification
userprog/build/tests/filesys/base/sm-create.output:(sm-create) verified contents of "blargle"
userprog/build/tests/filesys/base/sm-create.output:(sm-create) close "blargle"
userprog/build/tests/filesys/base/sm-create.output:(sm-create) end
userprog/build/tests/filesys/base/sm-create.output:sm-create: exit(0)
userprog/build/tests/filesys/base/sm-create.output:Execution of 'sm-create' complete.
userprog/build/tests/filesys/base/sm-full.d:tests/filesys/base/sm-full.o: ../../tests/filesys/base/sm-full.c \
userprog/build/tests/filesys/base/sm-full.d: ../../tests/filesys/base/full.inc ../../tests/filesys/seq-test.h \
Binary file userprog/build/tests/filesys/base/sm-full.o matches
userprog/build/tests/filesys/base/sm-full.output:Copying tests/filesys/base/sm-full to scratch partition...
userprog/build/tests/filesys/base/sm-full.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/TySjv8Awen.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/sm-full.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/sm-full.output:Kernel command line: -q -f extract run sm-full
userprog/build/tests/filesys/base/sm-full.output:Putting 'sm-full' into the file system...
userprog/build/tests/filesys/base/sm-full.output:Executing 'sm-full':
userprog/build/tests/filesys/base/sm-full.output:(sm-full) begin
userprog/build/tests/filesys/base/sm-full.output:(sm-full) create "quux"
userprog/build/tests/filesys/base/sm-full.output:(sm-full) open "quux"
userprog/build/tests/filesys/base/sm-full.output:(sm-full) writing "quux"
userprog/build/tests/filesys/base/sm-full.output:(sm-full) close "quux"
userprog/build/tests/filesys/base/sm-full.output:(sm-full) open "quux" for verification
userprog/build/tests/filesys/base/sm-full.output:(sm-full) verified contents of "quux"
userprog/build/tests/filesys/base/sm-full.output:(sm-full) close "quux"
userprog/build/tests/filesys/base/sm-full.output:(sm-full) end
userprog/build/tests/filesys/base/sm-full.output:sm-full: exit(0)
userprog/build/tests/filesys/base/sm-full.output:Execution of 'sm-full' complete.
userprog/build/tests/filesys/base/sm-random.d:tests/filesys/base/sm-random.o: ../../tests/filesys/base/sm-random.c \
Binary file userprog/build/tests/filesys/base/sm-random.o matches
userprog/build/tests/filesys/base/sm-random.output:Copying tests/filesys/base/sm-random to scratch partition...
userprog/build/tests/filesys/base/sm-random.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/bgrSKtZA3d.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/sm-random.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/sm-random.output:Kernel command line: -q -f extract run sm-random
userprog/build/tests/filesys/base/sm-random.output:Putting 'sm-random' into the file system...
userprog/build/tests/filesys/base/sm-random.output:Executing 'sm-random':
userprog/build/tests/filesys/base/sm-random.output:(sm-random) begin
userprog/build/tests/filesys/base/sm-random.output:(sm-random) create "bazzle"
userprog/build/tests/filesys/base/sm-random.output:(sm-random) open "bazzle"
userprog/build/tests/filesys/base/sm-random.output:(sm-random) write "bazzle" in random order
userprog/build/tests/filesys/base/sm-random.output:(sm-random) read "bazzle" in random order
userprog/build/tests/filesys/base/sm-random.output:(sm-random) close "bazzle"
userprog/build/tests/filesys/base/sm-random.output:(sm-random) end
userprog/build/tests/filesys/base/sm-random.output:sm-random: exit(0)
userprog/build/tests/filesys/base/sm-random.output:Execution of 'sm-random' complete.
userprog/build/tests/filesys/base/sm-seq-block.d:tests/filesys/base/sm-seq-block.o: \
userprog/build/tests/filesys/base/sm-seq-block.d: ../../tests/filesys/base/sm-seq-block.c \
userprog/build/tests/filesys/base/sm-seq-block.d: ../../tests/filesys/base/seq-block.inc ../../tests/filesys/seq-test.h \
Binary file userprog/build/tests/filesys/base/sm-seq-block.o matches
userprog/build/tests/filesys/base/sm-seq-block.output:Copying tests/filesys/base/sm-seq-block to scratch partition...
userprog/build/tests/filesys/base/sm-seq-block.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/kkzy4mndC1.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/sm-seq-block.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/sm-seq-block.output:Kernel command line: -q -f extract run sm-seq-block
userprog/build/tests/filesys/base/sm-seq-block.output:Putting 'sm-seq-block' into the file system...
userprog/build/tests/filesys/base/sm-seq-block.output:Executing 'sm-seq-block':
userprog/build/tests/filesys/base/sm-seq-block.output:(sm-seq-block) begin
userprog/build/tests/filesys/base/sm-seq-block.output:(sm-seq-block) create "noodle"
userprog/build/tests/filesys/base/sm-seq-block.output:(sm-seq-block) open "noodle"
userprog/build/tests/filesys/base/sm-seq-block.output:(sm-seq-block) writing "noodle"
userprog/build/tests/filesys/base/sm-seq-block.output:(sm-seq-block) close "noodle"
userprog/build/tests/filesys/base/sm-seq-block.output:(sm-seq-block) open "noodle" for verification
userprog/build/tests/filesys/base/sm-seq-block.output:(sm-seq-block) verified contents of "noodle"
userprog/build/tests/filesys/base/sm-seq-block.output:(sm-seq-block) close "noodle"
userprog/build/tests/filesys/base/sm-seq-block.output:(sm-seq-block) end
userprog/build/tests/filesys/base/sm-seq-block.output:sm-seq-block: exit(0)
userprog/build/tests/filesys/base/sm-seq-block.output:Execution of 'sm-seq-block' complete.
userprog/build/tests/filesys/base/sm-seq-random.d:tests/filesys/base/sm-seq-random.o: \
userprog/build/tests/filesys/base/sm-seq-random.d: ../../tests/filesys/base/sm-seq-random.c \
userprog/build/tests/filesys/base/sm-seq-random.d: ../../tests/filesys/base/seq-random.inc ../../lib/random.h \
userprog/build/tests/filesys/base/sm-seq-random.d: ../../lib/stddef.h ../../tests/filesys/seq-test.h ../../tests/main.h
Binary file userprog/build/tests/filesys/base/sm-seq-random.o matches
userprog/build/tests/filesys/base/sm-seq-random.output:Copying tests/filesys/base/sm-seq-random to scratch partition...
userprog/build/tests/filesys/base/sm-seq-random.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/E2vUwK4BdR.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/sm-seq-random.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/sm-seq-random.output:Kernel command line: -q -f extract run sm-seq-random
userprog/build/tests/filesys/base/sm-seq-random.output:Putting 'sm-seq-random' into the file system...
userprog/build/tests/filesys/base/sm-seq-random.output:Executing 'sm-seq-random':
userprog/build/tests/filesys/base/sm-seq-random.output:(sm-seq-random) begin
userprog/build/tests/filesys/base/sm-seq-random.output:(sm-seq-random) create "nibble"
userprog/build/tests/filesys/base/sm-seq-random.output:(sm-seq-random) open "nibble"
userprog/build/tests/filesys/base/sm-seq-random.output:(sm-seq-random) writing "nibble"
userprog/build/tests/filesys/base/sm-seq-random.output:(sm-seq-random) close "nibble"
userprog/build/tests/filesys/base/sm-seq-random.output:(sm-seq-random) open "nibble" for verification
userprog/build/tests/filesys/base/sm-seq-random.output:(sm-seq-random) verified contents of "nibble"
userprog/build/tests/filesys/base/sm-seq-random.output:(sm-seq-random) close "nibble"
userprog/build/tests/filesys/base/sm-seq-random.output:(sm-seq-random) end
userprog/build/tests/filesys/base/sm-seq-random.output:sm-seq-random: exit(0)
userprog/build/tests/filesys/base/sm-seq-random.output:Execution of 'sm-seq-random' complete.
userprog/build/tests/filesys/base/syn-read.d:tests/filesys/base/syn-read.o: ../../tests/filesys/base/syn-read.c \
userprog/build/tests/filesys/base/syn-read.d: ../../tests/lib.h ../../tests/main.h ../../tests/filesys/base/syn-read.h
Binary file userprog/build/tests/filesys/base/syn-read.o matches
userprog/build/tests/filesys/base/syn-read.output:Copying tests/filesys/base/syn-read to scratch partition...
userprog/build/tests/filesys/base/syn-read.output:Copying tests/filesys/base/child-syn-read to scratch partition...
userprog/build/tests/filesys/base/syn-read.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/cQLZieGFyk.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/syn-read.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/syn-read.output:Kernel command line: -q -f extract run syn-read
userprog/build/tests/filesys/base/syn-read.output:Putting 'syn-read' into the file system...
userprog/build/tests/filesys/base/syn-read.output:Putting 'child-syn-read' into the file system...
userprog/build/tests/filesys/base/syn-read.output:Executing 'syn-read':
userprog/build/tests/filesys/base/syn-read.output:(syn-read) begin
userprog/build/tests/filesys/base/syn-read.output:(syn-read) create "data"
userprog/build/tests/filesys/base/syn-read.output:(syn-read) open "data"
userprog/build/tests/filesys/base/syn-read.output:(syn-read) write "data"
userprog/build/tests/filesys/base/syn-read.output:(syn-read) close "data"
userprog/build/tests/filesys/base/syn-read.output:(syn-read) exec child 1 of 10: "child-syn-read 0"
userprog/build/tests/filesys/base/syn-read.output:child-syn-read: exit(0)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) exec child 2 of 10: "child-syn-read 1"
userprog/build/tests/filesys/base/syn-read.output:child-syn-read: exit(1)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) exec child 3 of 10: "child-syn-read 2"
userprog/build/tests/filesys/base/syn-read.output:child-syn-read: exit(2)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) exec child 4 of 10: "child-syn-read 3"
userprog/build/tests/filesys/base/syn-read.output:child-syn-read: exit(3)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) exec child 5 of 10: "child-syn-read 4"
userprog/build/tests/filesys/base/syn-read.output:child-syn-read: exit(4)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) exec child 6 of 10: "child-syn-read 5"
userprog/build/tests/filesys/base/syn-read.output:child-syn-read: exit(5)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) exec child 7 of 10: "child-syn-read 6"
userprog/build/tests/filesys/base/syn-read.output:child-syn-read: exit(6)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) exec child 8 of 10: "child-syn-read 7"
userprog/build/tests/filesys/base/syn-read.output:child-syn-read: exit(7)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) exec child 9 of 10: "child-syn-read 8"
userprog/build/tests/filesys/base/syn-read.output:child-syn-read: exit(8)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) exec child 10 of 10: "child-syn-read 9"
userprog/build/tests/filesys/base/syn-read.output:child-syn-read: exit(9)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) wait for child 1 of 10 returned 0 (expected 0)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) wait for child 2 of 10 returned 1 (expected 1)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) wait for child 3 of 10 returned 2 (expected 2)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) wait for child 4 of 10 returned 3 (expected 3)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) wait for child 5 of 10 returned 4 (expected 4)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) wait for child 6 of 10 returned 5 (expected 5)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) wait for child 7 of 10 returned 6 (expected 6)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) wait for child 8 of 10 returned 7 (expected 7)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) wait for child 9 of 10 returned 8 (expected 8)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) wait for child 10 of 10 returned 9 (expected 9)
userprog/build/tests/filesys/base/syn-read.output:(syn-read) end
userprog/build/tests/filesys/base/syn-read.output:syn-read: exit(0)
userprog/build/tests/filesys/base/syn-read.output:Execution of 'syn-read' complete.
userprog/build/tests/filesys/base/syn-remove.d:tests/filesys/base/syn-remove.o: ../../tests/filesys/base/syn-remove.c \
Binary file userprog/build/tests/filesys/base/syn-remove.o matches
userprog/build/tests/filesys/base/syn-remove.output:Copying tests/filesys/base/syn-remove to scratch partition...
userprog/build/tests/filesys/base/syn-remove.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/Xb_WKSRVM_.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/syn-remove.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/syn-remove.output:Kernel command line: -q -f extract run syn-remove
userprog/build/tests/filesys/base/syn-remove.output:Putting 'syn-remove' into the file system...
userprog/build/tests/filesys/base/syn-remove.output:Executing 'syn-remove':
userprog/build/tests/filesys/base/syn-remove.output:(syn-remove) begin
userprog/build/tests/filesys/base/syn-remove.output:(syn-remove) create "deleteme"
userprog/build/tests/filesys/base/syn-remove.output:(syn-remove) open "deleteme"
userprog/build/tests/filesys/base/syn-remove.output:(syn-remove) remove "deleteme"
userprog/build/tests/filesys/base/syn-remove.output:(syn-remove) write "deleteme"
userprog/build/tests/filesys/base/syn-remove.output:(syn-remove) seek "deleteme" to 0
userprog/build/tests/filesys/base/syn-remove.output:(syn-remove) read "deleteme"
userprog/build/tests/filesys/base/syn-remove.output:(syn-remove) close "deleteme"
userprog/build/tests/filesys/base/syn-remove.output:(syn-remove) end
userprog/build/tests/filesys/base/syn-remove.output:syn-remove: exit(0)
userprog/build/tests/filesys/base/syn-remove.output:Execution of 'syn-remove' complete.
userprog/build/tests/filesys/base/syn-write.d:tests/filesys/base/syn-write.o: ../../tests/filesys/base/syn-write.c \
userprog/build/tests/filesys/base/syn-write.d: ../../lib/user/syscall.h ../../tests/filesys/base/syn-write.h \
Binary file userprog/build/tests/filesys/base/syn-write.o matches
userprog/build/tests/filesys/base/syn-write.output:Copying tests/filesys/base/syn-write to scratch partition...
userprog/build/tests/filesys/base/syn-write.output:Copying tests/filesys/base/child-syn-wrt to scratch partition...
userprog/build/tests/filesys/base/syn-write.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/yX95QsEhyW.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/filesys/base/syn-write.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/filesys/base/syn-write.output:Kernel command line: -q -f extract run syn-write
userprog/build/tests/filesys/base/syn-write.output:Putting 'syn-write' into the file system...
userprog/build/tests/filesys/base/syn-write.output:Putting 'child-syn-wrt' into the file system...
userprog/build/tests/filesys/base/syn-write.output:Executing 'syn-write':
userprog/build/tests/filesys/base/syn-write.output:(syn-write) begin
userprog/build/tests/filesys/base/syn-write.output:(syn-write) create "stuff"
userprog/build/tests/filesys/base/syn-write.output:(syn-write) exec child 1 of 10: "child-syn-wrt 0"
userprog/build/tests/filesys/base/syn-write.output:child-syn-wrt: exit(0)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) exec child 2 of 10: "child-syn-wrt 1"
userprog/build/tests/filesys/base/syn-write.output:child-syn-wrt: exit(1)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) exec child 3 of 10: "child-syn-wrt 2"
userprog/build/tests/filesys/base/syn-write.output:child-syn-wrt: exit(2)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) exec child 4 of 10: "child-syn-wrt 3"
userprog/build/tests/filesys/base/syn-write.output:child-syn-wrt: exit(3)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) exec child 5 of 10: "child-syn-wrt 4"
userprog/build/tests/filesys/base/syn-write.output:child-syn-wrt: exit(4)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) exec child 6 of 10: "child-syn-wrt 5"
userprog/build/tests/filesys/base/syn-write.output:child-syn-wrt: exit(5)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) exec child 7 of 10: "child-syn-wrt 6"
userprog/build/tests/filesys/base/syn-write.output:child-syn-wrt: exit(6)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) exec child 8 of 10: "child-syn-wrt 7"
userprog/build/tests/filesys/base/syn-write.output:child-syn-wrt: exit(7)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) exec child 9 of 10: "child-syn-wrt 8"
userprog/build/tests/filesys/base/syn-write.output:child-syn-wrt: exit(8)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) exec child 10 of 10: "child-syn-wrt 9"
userprog/build/tests/filesys/base/syn-write.output:child-syn-wrt: exit(9)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) wait for child 1 of 10 returned 0 (expected 0)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) wait for child 2 of 10 returned 1 (expected 1)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) wait for child 3 of 10 returned 2 (expected 2)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) wait for child 4 of 10 returned 3 (expected 3)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) wait for child 5 of 10 returned 4 (expected 4)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) wait for child 6 of 10 returned 5 (expected 5)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) wait for child 7 of 10 returned 6 (expected 6)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) wait for child 8 of 10 returned 7 (expected 7)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) wait for child 9 of 10 returned 8 (expected 8)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) wait for child 10 of 10 returned 9 (expected 9)
userprog/build/tests/filesys/base/syn-write.output:(syn-write) open "stuff"
userprog/build/tests/filesys/base/syn-write.output:(syn-write) read "stuff"
userprog/build/tests/filesys/base/syn-write.output:(syn-write) end
userprog/build/tests/filesys/base/syn-write.output:syn-write: exit(0)
userprog/build/tests/filesys/base/syn-write.output:Execution of 'syn-write' complete.
Binary file userprog/build/tests/filesys/base/lg-create matches
Binary file userprog/build/tests/filesys/base/lg-full matches
Binary file userprog/build/tests/filesys/base/lg-random matches
Binary file userprog/build/tests/filesys/base/lg-seq-block matches
Binary file userprog/build/tests/filesys/base/lg-seq-random matches
Binary file userprog/build/tests/filesys/base/sm-create matches
Binary file userprog/build/tests/filesys/base/sm-full matches
Binary file userprog/build/tests/filesys/base/sm-random matches
Binary file userprog/build/tests/filesys/base/sm-seq-block matches
Binary file userprog/build/tests/filesys/base/sm-seq-random matches
Binary file userprog/build/tests/filesys/base/syn-read matches
Binary file userprog/build/tests/filesys/base/syn-remove matches
Binary file userprog/build/tests/filesys/base/syn-write matches
Binary file userprog/build/tests/filesys/base/child-syn-read matches
Binary file userprog/build/tests/filesys/base/child-syn-wrt matches
Binary file userprog/build/tests/userprog/args-dbl-space matches
userprog/build/tests/userprog/args-dbl-space.output:Copying tests/userprog/args-dbl-space to scratch partition...
userprog/build/tests/userprog/args-dbl-space.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/ZfSMvpHGQu.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/args-dbl-space.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/args-dbl-space.output:Kernel command line: -q -f extract run 'args-dbl-space two  spaces!'
userprog/build/tests/userprog/args-dbl-space.output:Putting 'args-dbl-space' into the file system...
userprog/build/tests/userprog/args-dbl-space.output:Executing 'args-dbl-space two  spaces!':
userprog/build/tests/userprog/args-dbl-space.output:(args) argv[0] = 'args-dbl-space'
userprog/build/tests/userprog/args-dbl-space.output:args-dbl-space: exit(0)
userprog/build/tests/userprog/args-dbl-space.output:Execution of 'args-dbl-space two  spaces!' complete.
Binary file userprog/build/tests/userprog/args-many matches
userprog/build/tests/userprog/args-many.output:Copying tests/userprog/args-many to scratch partition...
userprog/build/tests/userprog/args-many.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/0vbeejuOjs.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/args-many.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/args-many.output:Kernel command line: -q -f extract run 'args-many a b c d e f g h i j k l m n o p q r s t u v'
userprog/build/tests/userprog/args-many.output:Putting 'args-many' into the file system...
userprog/build/tests/userprog/args-many.output:Executing 'args-many a b c d e f g h i j k l m n o p q r s t u v':
userprog/build/tests/userprog/args-many.output:(args) argv[0] = 'args-many'
userprog/build/tests/userprog/args-many.output:args-many: exit(0)
userprog/build/tests/userprog/args-many.output:Execution of 'args-many a b c d e f g h i j k l m n o p q r s t u v' complete.
Binary file userprog/build/tests/userprog/args-multiple matches
userprog/build/tests/userprog/args-multiple.output:Copying tests/userprog/args-multiple to scratch partition...
userprog/build/tests/userprog/args-multiple.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/tT65GcsTim.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/args-multiple.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/args-multiple.output:Kernel command line: -q -f extract run 'args-multiple some arguments for you!'
userprog/build/tests/userprog/args-multiple.output:Putting 'args-multiple' into the file system...
userprog/build/tests/userprog/args-multiple.output:Executing 'args-multiple some arguments for you!':
userprog/build/tests/userprog/args-multiple.output:(args) argv[0] = 'args-multiple'
userprog/build/tests/userprog/args-multiple.output:args-multiple: exit(0)
userprog/build/tests/userprog/args-multiple.output:Execution of 'args-multiple some arguments for you!' complete.
Binary file userprog/build/tests/userprog/args-none matches
userprog/build/tests/userprog/args-none.output:Copying tests/userprog/args-none to scratch partition...
userprog/build/tests/userprog/args-none.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/704lCCgCRx.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/args-none.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/args-none.output:Kernel command line: -q -f extract run args-none
userprog/build/tests/userprog/args-none.output:Putting 'args-none' into the file system...
userprog/build/tests/userprog/args-none.output:Executing 'args-none':
userprog/build/tests/userprog/args-none.output:(args) argv[0] = 'args-none'
userprog/build/tests/userprog/args-none.output:args-none: exit(0)
userprog/build/tests/userprog/args-none.output:Execution of 'args-none' complete.
Binary file userprog/build/tests/userprog/args-single matches
userprog/build/tests/userprog/args-single.output:Copying tests/userprog/args-single to scratch partition...
userprog/build/tests/userprog/args-single.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/nanhkXVA85.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/args-single.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/args-single.output:Kernel command line: -q -f extract run 'args-single onearg'
userprog/build/tests/userprog/args-single.output:Putting 'args-single' into the file system...
userprog/build/tests/userprog/args-single.output:Executing 'args-single onearg':
userprog/build/tests/userprog/args-single.output:(args) argv[0] = 'args-single'
userprog/build/tests/userprog/args-single.output:args-single: exit(0)
userprog/build/tests/userprog/args-single.output:Execution of 'args-single onearg' complete.
Binary file userprog/build/tests/userprog/args.o matches
Binary file userprog/build/tests/userprog/bad-jump matches
userprog/build/tests/userprog/bad-jump.d:tests/userprog/bad-jump.o: ../../tests/userprog/bad-jump.c \
Binary file userprog/build/tests/userprog/bad-jump.o matches
userprog/build/tests/userprog/bad-jump.output:Copying tests/userprog/bad-jump to scratch partition...
userprog/build/tests/userprog/bad-jump.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/H9clwEKGrr.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/bad-jump.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/bad-jump.output:Kernel command line: -q -f extract run bad-jump
userprog/build/tests/userprog/bad-jump.output:Putting 'bad-jump' into the file system...
userprog/build/tests/userprog/bad-jump.output:Executing 'bad-jump':
userprog/build/tests/userprog/bad-jump.output:(bad-jump) begin
userprog/build/tests/userprog/bad-jump.output:bad-jump: exit(-1)
userprog/build/tests/userprog/bad-jump.output:Execution of 'bad-jump' complete.
Binary file userprog/build/tests/userprog/bad-jump2 matches
userprog/build/tests/userprog/bad-jump2.d:tests/userprog/bad-jump2.o: ../../tests/userprog/bad-jump2.c \
Binary file userprog/build/tests/userprog/bad-jump2.o matches
userprog/build/tests/userprog/bad-jump2.output:Copying tests/userprog/bad-jump2 to scratch partition...
userprog/build/tests/userprog/bad-jump2.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/FmY0rsUGV7.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/bad-jump2.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/bad-jump2.output:Kernel command line: -q -f extract run bad-jump2
userprog/build/tests/userprog/bad-jump2.output:Putting 'bad-jump2' into the file system...
userprog/build/tests/userprog/bad-jump2.output:Executing 'bad-jump2':
userprog/build/tests/userprog/bad-jump2.output:(bad-jump2) begin
userprog/build/tests/userprog/bad-jump2.output:bad-jump2: exit(-1)
userprog/build/tests/userprog/bad-jump2.output:Execution of 'bad-jump2' complete.
Binary file userprog/build/tests/userprog/bad-read matches
userprog/build/tests/userprog/bad-read.d:tests/userprog/bad-read.o: ../../tests/userprog/bad-read.c \
Binary file userprog/build/tests/userprog/bad-read.o matches
userprog/build/tests/userprog/bad-read.output:Copying tests/userprog/bad-read to scratch partition...
userprog/build/tests/userprog/bad-read.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/oKcKYjS0uD.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/bad-read.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/bad-read.output:Kernel command line: -q -f extract run bad-read
userprog/build/tests/userprog/bad-read.output:Putting 'bad-read' into the file system...
userprog/build/tests/userprog/bad-read.output:Executing 'bad-read':
userprog/build/tests/userprog/bad-read.output:(bad-read) begin
userprog/build/tests/userprog/bad-read.output:bad-read: exit(-1)
userprog/build/tests/userprog/bad-read.output:Execution of 'bad-read' complete.
Binary file userprog/build/tests/userprog/bad-read2 matches
userprog/build/tests/userprog/bad-read2.d:tests/userprog/bad-read2.o: ../../tests/userprog/bad-read2.c \
Binary file userprog/build/tests/userprog/bad-read2.o matches
userprog/build/tests/userprog/bad-read2.output:Copying tests/userprog/bad-read2 to scratch partition...
userprog/build/tests/userprog/bad-read2.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/4oKrRpoJ3n.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/bad-read2.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/bad-read2.output:Kernel command line: -q -f extract run bad-read2
userprog/build/tests/userprog/bad-read2.output:Putting 'bad-read2' into the file system...
userprog/build/tests/userprog/bad-read2.output:Executing 'bad-read2':
userprog/build/tests/userprog/bad-read2.output:(bad-read2) begin
userprog/build/tests/userprog/bad-read2.output:bad-read2: exit(-1)
userprog/build/tests/userprog/bad-read2.output:Execution of 'bad-read2' complete.
Binary file userprog/build/tests/userprog/bad-write matches
userprog/build/tests/userprog/bad-write.d:tests/userprog/bad-write.o: ../../tests/userprog/bad-write.c \
Binary file userprog/build/tests/userprog/bad-write.o matches
userprog/build/tests/userprog/bad-write.output:Copying tests/userprog/bad-write to scratch partition...
userprog/build/tests/userprog/bad-write.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/btVqtVO8A0.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/bad-write.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/bad-write.output:Kernel command line: -q -f extract run bad-write
userprog/build/tests/userprog/bad-write.output:Putting 'bad-write' into the file system...
userprog/build/tests/userprog/bad-write.output:Executing 'bad-write':
userprog/build/tests/userprog/bad-write.output:(bad-write) begin
userprog/build/tests/userprog/bad-write.output:bad-write: exit(-1)
userprog/build/tests/userprog/bad-write.output:Execution of 'bad-write' complete.
Binary file userprog/build/tests/userprog/bad-write2 matches
userprog/build/tests/userprog/bad-write2.d:tests/userprog/bad-write2.o: ../../tests/userprog/bad-write2.c \
Binary file userprog/build/tests/userprog/bad-write2.o matches
userprog/build/tests/userprog/bad-write2.output:Copying tests/userprog/bad-write2 to scratch partition...
userprog/build/tests/userprog/bad-write2.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/NAZ7reE4ul.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/bad-write2.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/bad-write2.output:Kernel command line: -q -f extract run bad-write2
userprog/build/tests/userprog/bad-write2.output:Putting 'bad-write2' into the file system...
userprog/build/tests/userprog/bad-write2.output:Executing 'bad-write2':
userprog/build/tests/userprog/bad-write2.output:(bad-write2) begin
userprog/build/tests/userprog/bad-write2.output:bad-write2: exit(-1)
userprog/build/tests/userprog/bad-write2.output:Execution of 'bad-write2' complete.
Binary file userprog/build/tests/userprog/boundary.o matches
Binary file userprog/build/tests/userprog/child-args matches
Binary file userprog/build/tests/userprog/child-bad matches
userprog/build/tests/userprog/child-bad.d:tests/userprog/child-bad.o: ../../tests/userprog/child-bad.c \
Binary file userprog/build/tests/userprog/child-bad.o matches
Binary file userprog/build/tests/userprog/child-close matches
userprog/build/tests/userprog/child-close.d:tests/userprog/child-close.o: ../../tests/userprog/child-close.c \
Binary file userprog/build/tests/userprog/child-close.o matches
Binary file userprog/build/tests/userprog/child-rox matches
userprog/build/tests/userprog/child-rox.d:tests/userprog/child-rox.o: ../../tests/userprog/child-rox.c \
Binary file userprog/build/tests/userprog/child-rox.o matches
Binary file userprog/build/tests/userprog/child-simple matches
userprog/build/tests/userprog/child-simple.d:tests/userprog/child-simple.o: ../../tests/userprog/child-simple.c \
Binary file userprog/build/tests/userprog/child-simple.o matches
Binary file userprog/build/tests/userprog/close-bad-fd matches
userprog/build/tests/userprog/close-bad-fd.d:tests/userprog/close-bad-fd.o: ../../tests/userprog/close-bad-fd.c \
Binary file userprog/build/tests/userprog/close-bad-fd.o matches
userprog/build/tests/userprog/close-bad-fd.output:Copying tests/userprog/close-bad-fd to scratch partition...
userprog/build/tests/userprog/close-bad-fd.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/MRO8jMwm7z.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/close-bad-fd.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/close-bad-fd.output:Kernel command line: -q -f extract run close-bad-fd
userprog/build/tests/userprog/close-bad-fd.output:Putting 'close-bad-fd' into the file system...
userprog/build/tests/userprog/close-bad-fd.output:Executing 'close-bad-fd':
userprog/build/tests/userprog/close-bad-fd.output:(close-bad-fd) begin
userprog/build/tests/userprog/close-bad-fd.output:close-bad-fd: exit(-1)
userprog/build/tests/userprog/close-bad-fd.output:Execution of 'close-bad-fd' complete.
Binary file userprog/build/tests/userprog/close-normal matches
userprog/build/tests/userprog/close-normal.d:tests/userprog/close-normal.o: ../../tests/userprog/close-normal.c \
Binary file userprog/build/tests/userprog/close-normal.o matches
userprog/build/tests/userprog/close-normal.output:Copying tests/userprog/close-normal to scratch partition...
userprog/build/tests/userprog/close-normal.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/uYfQ3OVb7d.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/close-normal.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/close-normal.output:Kernel command line: -q -f extract run close-normal
userprog/build/tests/userprog/close-normal.output:Putting 'close-normal' into the file system...
userprog/build/tests/userprog/close-normal.output:Executing 'close-normal':
userprog/build/tests/userprog/close-normal.output:(close-normal) begin
userprog/build/tests/userprog/close-normal.output:(close-normal) open "sample.txt"
userprog/build/tests/userprog/close-normal.output:(close-normal) close "sample.txt"
userprog/build/tests/userprog/close-normal.output:(close-normal) end
userprog/build/tests/userprog/close-normal.output:close-normal: exit(0)
userprog/build/tests/userprog/close-normal.output:Execution of 'close-normal' complete.
Binary file userprog/build/tests/userprog/close-stdin matches
userprog/build/tests/userprog/close-stdin.d:tests/userprog/close-stdin.o: ../../tests/userprog/close-stdin.c \
Binary file userprog/build/tests/userprog/close-stdin.o matches
userprog/build/tests/userprog/close-stdin.output:Copying tests/userprog/close-stdin to scratch partition...
userprog/build/tests/userprog/close-stdin.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/rC_yoouCiZ.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/close-stdin.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/close-stdin.output:Kernel command line: -q -f extract run close-stdin
userprog/build/tests/userprog/close-stdin.output:Putting 'close-stdin' into the file system...
userprog/build/tests/userprog/close-stdin.output:Executing 'close-stdin':
userprog/build/tests/userprog/close-stdin.output:(close-stdin) begin
userprog/build/tests/userprog/close-stdin.output:close-stdin: exit(-1)
userprog/build/tests/userprog/close-stdin.output:Execution of 'close-stdin' complete.
Binary file userprog/build/tests/userprog/close-stdout matches
userprog/build/tests/userprog/close-stdout.d:tests/userprog/close-stdout.o: ../../tests/userprog/close-stdout.c \
Binary file userprog/build/tests/userprog/close-stdout.o matches
userprog/build/tests/userprog/close-stdout.output:Copying tests/userprog/close-stdout to scratch partition...
userprog/build/tests/userprog/close-stdout.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/TNLeuZCH2x.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/close-stdout.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/close-stdout.output:Kernel command line: -q -f extract run close-stdout
userprog/build/tests/userprog/close-stdout.output:Putting 'close-stdout' into the file system...
userprog/build/tests/userprog/close-stdout.output:Executing 'close-stdout':
userprog/build/tests/userprog/close-stdout.output:(close-stdout) begin
userprog/build/tests/userprog/close-stdout.output:close-stdout: exit(-1)
userprog/build/tests/userprog/close-stdout.output:Execution of 'close-stdout' complete.
Binary file userprog/build/tests/userprog/close-twice matches
userprog/build/tests/userprog/close-twice.d:tests/userprog/close-twice.o: ../../tests/userprog/close-twice.c \
Binary file userprog/build/tests/userprog/close-twice.o matches
userprog/build/tests/userprog/close-twice.output:Copying tests/userprog/close-twice to scratch partition...
userprog/build/tests/userprog/close-twice.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/vamdkGhB1O.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/close-twice.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/close-twice.output:Kernel command line: -q -f extract run close-twice
userprog/build/tests/userprog/close-twice.output:Putting 'close-twice' into the file system...
userprog/build/tests/userprog/close-twice.output:Executing 'close-twice':
userprog/build/tests/userprog/close-twice.output:(close-twice) begin
userprog/build/tests/userprog/close-twice.output:(close-twice) open "sample.txt"
userprog/build/tests/userprog/close-twice.output:(close-twice) close "sample.txt"
userprog/build/tests/userprog/close-twice.output:(close-twice) close "sample.txt" again
userprog/build/tests/userprog/close-twice.output:close-twice: exit(-1)
userprog/build/tests/userprog/close-twice.output:Execution of 'close-twice' complete.
Binary file userprog/build/tests/userprog/create-bad-ptr matches
userprog/build/tests/userprog/create-bad-ptr.d:tests/userprog/create-bad-ptr.o: ../../tests/userprog/create-bad-ptr.c \
Binary file userprog/build/tests/userprog/create-bad-ptr.o matches
userprog/build/tests/userprog/create-bad-ptr.output:Copying tests/userprog/create-bad-ptr to scratch partition...
userprog/build/tests/userprog/create-bad-ptr.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/XqpUGdxuRi.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/create-bad-ptr.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/create-bad-ptr.output:Kernel command line: -q -f extract run create-bad-ptr
userprog/build/tests/userprog/create-bad-ptr.output:Putting 'create-bad-ptr' into the file system...
userprog/build/tests/userprog/create-bad-ptr.output:Executing 'create-bad-ptr':
userprog/build/tests/userprog/create-bad-ptr.output:(create-bad-ptr) begin
userprog/build/tests/userprog/create-bad-ptr.output:create-bad-ptr: exit(-1)
userprog/build/tests/userprog/create-bad-ptr.output:Execution of 'create-bad-ptr' complete.
Binary file userprog/build/tests/userprog/create-bound matches
userprog/build/tests/userprog/create-bound.d:tests/userprog/create-bound.o: ../../tests/userprog/create-bound.c \
Binary file userprog/build/tests/userprog/create-bound.o matches
userprog/build/tests/userprog/create-bound.output:Copying tests/userprog/create-bound to scratch partition...
userprog/build/tests/userprog/create-bound.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/Z7XOr5seeJ.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/create-bound.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/create-bound.output:Kernel command line: -q -f extract run create-bound
userprog/build/tests/userprog/create-bound.output:Putting 'create-bound' into the file system...
userprog/build/tests/userprog/create-bound.output:Executing 'create-bound':
userprog/build/tests/userprog/create-bound.output:(create-bound) begin
userprog/build/tests/userprog/create-bound.output:(create-bound) create("quux.dat"): 1
userprog/build/tests/userprog/create-bound.output:(create-bound) end
userprog/build/tests/userprog/create-bound.output:create-bound: exit(0)
userprog/build/tests/userprog/create-bound.output:Execution of 'create-bound' complete.
Binary file userprog/build/tests/userprog/create-empty matches
userprog/build/tests/userprog/create-empty.d:tests/userprog/create-empty.o: ../../tests/userprog/create-empty.c \
Binary file userprog/build/tests/userprog/create-empty.o matches
userprog/build/tests/userprog/create-empty.output:Copying tests/userprog/create-empty to scratch partition...
userprog/build/tests/userprog/create-empty.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/v_Sa34AAGL.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/create-empty.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/create-empty.output:Kernel command line: -q -f extract run create-empty
userprog/build/tests/userprog/create-empty.output:Putting 'create-empty' into the file system...
userprog/build/tests/userprog/create-empty.output:Executing 'create-empty':
userprog/build/tests/userprog/create-empty.output:(create-empty) begin
userprog/build/tests/userprog/create-empty.output:(create-empty) create(""): 0
userprog/build/tests/userprog/create-empty.output:(create-empty) end
userprog/build/tests/userprog/create-empty.output:create-empty: exit(0)
userprog/build/tests/userprog/create-empty.output:Execution of 'create-empty' complete.
Binary file userprog/build/tests/userprog/create-exists matches
userprog/build/tests/userprog/create-exists.d:tests/userprog/create-exists.o: ../../tests/userprog/create-exists.c \
Binary file userprog/build/tests/userprog/create-exists.o matches
userprog/build/tests/userprog/create-exists.output:Copying tests/userprog/create-exists to scratch partition...
userprog/build/tests/userprog/create-exists.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/DJpJkcdIoj.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/create-exists.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/create-exists.output:Kernel command line: -q -f extract run create-exists
userprog/build/tests/userprog/create-exists.output:Putting 'create-exists' into the file system...
userprog/build/tests/userprog/create-exists.output:Executing 'create-exists':
userprog/build/tests/userprog/create-exists.output:(create-exists) begin
userprog/build/tests/userprog/create-exists.output:(create-exists) create quux.dat
userprog/build/tests/userprog/create-exists.output:(create-exists) create warble.dat
userprog/build/tests/userprog/create-exists.output:(create-exists) try to re-create quux.dat
userprog/build/tests/userprog/create-exists.output:(create-exists) create baffle.dat
userprog/build/tests/userprog/create-exists.output:(create-exists) try to re-create quux.dat
userprog/build/tests/userprog/create-exists.output:(create-exists) end
userprog/build/tests/userprog/create-exists.output:create-exists: exit(0)
userprog/build/tests/userprog/create-exists.output:Execution of 'create-exists' complete.
Binary file userprog/build/tests/userprog/create-long matches
userprog/build/tests/userprog/create-long.d:tests/userprog/create-long.o: ../../tests/userprog/create-long.c \
Binary file userprog/build/tests/userprog/create-long.o matches
userprog/build/tests/userprog/create-long.output:Copying tests/userprog/create-long to scratch partition...
userprog/build/tests/userprog/create-long.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/Z8rjJWyGm7.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/create-long.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/create-long.output:Kernel command line: -q -f extract run create-long
userprog/build/tests/userprog/create-long.output:Putting 'create-long' into the file system...
userprog/build/tests/userprog/create-long.output:Executing 'create-long':
userprog/build/tests/userprog/create-long.output:(create-long) begin
userprog/build/tests/userprog/create-long.output:(create-long) create("x..."): 0
userprog/build/tests/userprog/create-long.output:(create-long) end
userprog/build/tests/userprog/create-long.output:create-long: exit(0)
userprog/build/tests/userprog/create-long.output:Execution of 'create-long' complete.
Binary file userprog/build/tests/userprog/create-normal matches
userprog/build/tests/userprog/create-normal.d:tests/userprog/create-normal.o: ../../tests/userprog/create-normal.c \
Binary file userprog/build/tests/userprog/create-normal.o matches
userprog/build/tests/userprog/create-normal.output:Copying tests/userprog/create-normal to scratch partition...
userprog/build/tests/userprog/create-normal.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/Sy1LWyjI_b.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/create-normal.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/create-normal.output:Kernel command line: -q -f extract run create-normal
userprog/build/tests/userprog/create-normal.output:Putting 'create-normal' into the file system...
userprog/build/tests/userprog/create-normal.output:Executing 'create-normal':
userprog/build/tests/userprog/create-normal.output:(create-normal) begin
userprog/build/tests/userprog/create-normal.output:(create-normal) create quux.dat
userprog/build/tests/userprog/create-normal.output:(create-normal) end
userprog/build/tests/userprog/create-normal.output:create-normal: exit(0)
userprog/build/tests/userprog/create-normal.output:Execution of 'create-normal' complete.
Binary file userprog/build/tests/userprog/create-null matches
userprog/build/tests/userprog/create-null.d:tests/userprog/create-null.o: ../../tests/userprog/create-null.c \
Binary file userprog/build/tests/userprog/create-null.o matches
userprog/build/tests/userprog/create-null.output:Copying tests/userprog/create-null to scratch partition...
userprog/build/tests/userprog/create-null.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/0dGKibrd85.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/create-null.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/create-null.output:Kernel command line: -q -f extract run create-null
userprog/build/tests/userprog/create-null.output:Putting 'create-null' into the file system...
userprog/build/tests/userprog/create-null.output:Executing 'create-null':
userprog/build/tests/userprog/create-null.output:(create-null) begin
userprog/build/tests/userprog/create-null.output:create-null: exit(-1)
userprog/build/tests/userprog/create-null.output:Execution of 'create-null' complete.
Binary file userprog/build/tests/userprog/exec-arg matches
userprog/build/tests/userprog/exec-arg.d:tests/userprog/exec-arg.o: ../../tests/userprog/exec-arg.c \
Binary file userprog/build/tests/userprog/exec-arg.o matches
userprog/build/tests/userprog/exec-arg.output:Copying tests/userprog/exec-arg to scratch partition...
userprog/build/tests/userprog/exec-arg.output:Copying tests/userprog/child-args to scratch partition...
userprog/build/tests/userprog/exec-arg.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/GNraHeP3PG.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/exec-arg.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/exec-arg.output:Kernel command line: -q -f extract run exec-arg
userprog/build/tests/userprog/exec-arg.output:Putting 'exec-arg' into the file system...
userprog/build/tests/userprog/exec-arg.output:Putting 'child-args' into the file system...
userprog/build/tests/userprog/exec-arg.output:Executing 'exec-arg':
userprog/build/tests/userprog/exec-arg.output:(exec-arg) begin
userprog/build/tests/userprog/exec-arg.output:(args) argv[0] = 'child-args'
userprog/build/tests/userprog/exec-arg.output:child-args: exit(0)
userprog/build/tests/userprog/exec-arg.output:(exec-arg) end
userprog/build/tests/userprog/exec-arg.output:exec-arg: exit(0)
userprog/build/tests/userprog/exec-arg.output:Execution of 'exec-arg' complete.
Binary file userprog/build/tests/userprog/exec-bad-ptr matches
userprog/build/tests/userprog/exec-bad-ptr.d:tests/userprog/exec-bad-ptr.o: ../../tests/userprog/exec-bad-ptr.c \
Binary file userprog/build/tests/userprog/exec-bad-ptr.o matches
userprog/build/tests/userprog/exec-bad-ptr.output:Copying tests/userprog/exec-bad-ptr to scratch partition...
userprog/build/tests/userprog/exec-bad-ptr.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/c2XJ0Zjhzv.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/exec-bad-ptr.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/exec-bad-ptr.output:Kernel command line: -q -f extract run exec-bad-ptr
userprog/build/tests/userprog/exec-bad-ptr.output:Putting 'exec-bad-ptr' into the file system...
userprog/build/tests/userprog/exec-bad-ptr.output:Executing 'exec-bad-ptr':
userprog/build/tests/userprog/exec-bad-ptr.output:(exec-bad-ptr) begin
userprog/build/tests/userprog/exec-bad-ptr.output:exec-bad-ptr: exit(-1)
userprog/build/tests/userprog/exec-bad-ptr.output:Execution of 'exec-bad-ptr' complete.
Binary file userprog/build/tests/userprog/exec-bound matches
Binary file userprog/build/tests/userprog/exec-bound-2 matches
userprog/build/tests/userprog/exec-bound-2.d:tests/userprog/exec-bound-2.o: ../../tests/userprog/exec-bound-2.c \
userprog/build/tests/userprog/exec-bound-2.d: ../../lib/syscall-nr.h ../../tests/userprog/boundary.h ../../tests/lib.h \
Binary file userprog/build/tests/userprog/exec-bound-2.o matches
userprog/build/tests/userprog/exec-bound-2.output:Copying tests/userprog/exec-bound-2 to scratch partition...
userprog/build/tests/userprog/exec-bound-2.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/VeBVLZaI86.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/exec-bound-2.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/exec-bound-2.output:Kernel command line: -q -f extract run exec-bound-2
userprog/build/tests/userprog/exec-bound-2.output:Putting 'exec-bound-2' into the file system...
userprog/build/tests/userprog/exec-bound-2.output:Executing 'exec-bound-2':
userprog/build/tests/userprog/exec-bound-2.output:(exec-bound-2) begin
userprog/build/tests/userprog/exec-bound-2.output:exec-bound-2: exit(-1)
userprog/build/tests/userprog/exec-bound-2.output:Execution of 'exec-bound-2' complete.
Binary file userprog/build/tests/userprog/exec-bound-3 matches
userprog/build/tests/userprog/exec-bound-3.d:tests/userprog/exec-bound-3.o: ../../tests/userprog/exec-bound-3.c \
userprog/build/tests/userprog/exec-bound-3.d: ../../lib/syscall-nr.h ../../tests/userprog/boundary.h ../../tests/lib.h \
Binary file userprog/build/tests/userprog/exec-bound-3.o matches
userprog/build/tests/userprog/exec-bound-3.output:Copying tests/userprog/exec-bound-3 to scratch partition...
userprog/build/tests/userprog/exec-bound-3.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/siWU1ngspK.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/exec-bound-3.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/exec-bound-3.output:Kernel command line: -q -f extract run exec-bound-3
userprog/build/tests/userprog/exec-bound-3.output:Putting 'exec-bound-3' into the file system...
userprog/build/tests/userprog/exec-bound-3.output:Executing 'exec-bound-3':
userprog/build/tests/userprog/exec-bound-3.output:(exec-bound-3) begin
userprog/build/tests/userprog/exec-bound-3.output:exec-bound-3: exit(-1)
userprog/build/tests/userprog/exec-bound-3.output:Execution of 'exec-bound-3' complete.
userprog/build/tests/userprog/exec-bound.d:tests/userprog/exec-bound.o: ../../tests/userprog/exec-bound.c \
Binary file userprog/build/tests/userprog/exec-bound.o matches
userprog/build/tests/userprog/exec-bound.output:Copying tests/userprog/exec-bound to scratch partition...
userprog/build/tests/userprog/exec-bound.output:Copying tests/userprog/child-args to scratch partition...
userprog/build/tests/userprog/exec-bound.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/JOmePWn_Dz.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/exec-bound.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/exec-bound.output:Kernel command line: -q -f extract run exec-bound
userprog/build/tests/userprog/exec-bound.output:Putting 'exec-bound' into the file system...
userprog/build/tests/userprog/exec-bound.output:Putting 'child-args' into the file system...
userprog/build/tests/userprog/exec-bound.output:Executing 'exec-bound':
userprog/build/tests/userprog/exec-bound.output:(exec-bound) begin
userprog/build/tests/userprog/exec-bound.output:(args) argv[0] = 'child-args'
userprog/build/tests/userprog/exec-bound.output:child-args: exit(0)
userprog/build/tests/userprog/exec-bound.output:(exec-bound) end
userprog/build/tests/userprog/exec-bound.output:exec-bound: exit(0)
userprog/build/tests/userprog/exec-bound.output:Execution of 'exec-bound' complete.
Binary file userprog/build/tests/userprog/exec-missing matches
userprog/build/tests/userprog/exec-missing.d:tests/userprog/exec-missing.o: ../../tests/userprog/exec-missing.c \
Binary file userprog/build/tests/userprog/exec-missing.o matches
userprog/build/tests/userprog/exec-missing.output:Copying tests/userprog/exec-missing to scratch partition...
userprog/build/tests/userprog/exec-missing.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/hawDu6E99I.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/exec-missing.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/exec-missing.output:Kernel command line: -q -f extract run exec-missing
userprog/build/tests/userprog/exec-missing.output:Putting 'exec-missing' into the file system...
userprog/build/tests/userprog/exec-missing.output:Executing 'exec-missing':
userprog/build/tests/userprog/exec-missing.output:(exec-missing) begin
userprog/build/tests/userprog/exec-missing.output:(exec-missing) exec("no-such-file"): -1
userprog/build/tests/userprog/exec-missing.output:(exec-missing) end
userprog/build/tests/userprog/exec-missing.output:exec-missing: exit(0)
userprog/build/tests/userprog/exec-missing.output:Execution of 'exec-missing' complete.
Binary file userprog/build/tests/userprog/exec-multiple matches
userprog/build/tests/userprog/exec-multiple.d:tests/userprog/exec-multiple.o: ../../tests/userprog/exec-multiple.c \
Binary file userprog/build/tests/userprog/exec-multiple.o matches
userprog/build/tests/userprog/exec-multiple.output:Copying tests/userprog/exec-multiple to scratch partition...
userprog/build/tests/userprog/exec-multiple.output:Copying tests/userprog/child-simple to scratch partition...
userprog/build/tests/userprog/exec-multiple.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/UHHgmUndfp.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/exec-multiple.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/exec-multiple.output:Kernel command line: -q -f extract run exec-multiple
userprog/build/tests/userprog/exec-multiple.output:Putting 'exec-multiple' into the file system...
userprog/build/tests/userprog/exec-multiple.output:Putting 'child-simple' into the file system...
userprog/build/tests/userprog/exec-multiple.output:Executing 'exec-multiple':
userprog/build/tests/userprog/exec-multiple.output:(exec-multiple) begin
userprog/build/tests/userprog/exec-multiple.output:(child-simple) run
userprog/build/tests/userprog/exec-multiple.output:child-simple: exit(81)
userprog/build/tests/userprog/exec-multiple.output:(child-simple) run
userprog/build/tests/userprog/exec-multiple.output:child-simple: exit(81)
userprog/build/tests/userprog/exec-multiple.output:(child-simple) run
userprog/build/tests/userprog/exec-multiple.output:child-simple: exit(81)
userprog/build/tests/userprog/exec-multiple.output:(child-simple) run
userprog/build/tests/userprog/exec-multiple.output:child-simple: exit(81)
userprog/build/tests/userprog/exec-multiple.output:(exec-multiple) end
userprog/build/tests/userprog/exec-multiple.output:exec-multiple: exit(0)
userprog/build/tests/userprog/exec-multiple.output:Execution of 'exec-multiple' complete.
Binary file userprog/build/tests/userprog/exec-once matches
userprog/build/tests/userprog/exec-once.d:tests/userprog/exec-once.o: ../../tests/userprog/exec-once.c \
Binary file userprog/build/tests/userprog/exec-once.o matches
userprog/build/tests/userprog/exec-once.output:Copying tests/userprog/exec-once to scratch partition...
userprog/build/tests/userprog/exec-once.output:Copying tests/userprog/child-simple to scratch partition...
userprog/build/tests/userprog/exec-once.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/ZCLvM7g4wV.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/exec-once.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/exec-once.output:Kernel command line: -q -f extract run exec-once
userprog/build/tests/userprog/exec-once.output:Putting 'exec-once' into the file system...
userprog/build/tests/userprog/exec-once.output:Putting 'child-simple' into the file system...
userprog/build/tests/userprog/exec-once.output:Executing 'exec-once':
userprog/build/tests/userprog/exec-once.output:(exec-once) begin
userprog/build/tests/userprog/exec-once.output:(child-simple) run
userprog/build/tests/userprog/exec-once.output:child-simple: exit(81)
userprog/build/tests/userprog/exec-once.output:(exec-once) end
userprog/build/tests/userprog/exec-once.output:exec-once: exit(0)
userprog/build/tests/userprog/exec-once.output:Execution of 'exec-once' complete.
Binary file userprog/build/tests/userprog/exit matches
Binary file userprog/build/tests/userprog/exit.o matches
userprog/build/tests/userprog/exit.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/f3kj5kkLaz.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/exit.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/exit.output:Kernel command line: -q -f extract run exit
Binary file userprog/build/tests/userprog/halt matches
Binary file userprog/build/tests/userprog/halt.o matches
userprog/build/tests/userprog/halt.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/BCSu87vobf.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/halt.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/halt.output:Kernel command line: -q -f extract run halt
Binary file userprog/build/tests/userprog/multi-child-fd matches
userprog/build/tests/userprog/multi-child-fd.d:tests/userprog/multi-child-fd.o: ../../tests/userprog/multi-child-fd.c \
Binary file userprog/build/tests/userprog/multi-child-fd.o matches
userprog/build/tests/userprog/multi-child-fd.output:Copying tests/userprog/multi-child-fd to scratch partition...
userprog/build/tests/userprog/multi-child-fd.output:Copying tests/userprog/child-close to scratch partition...
userprog/build/tests/userprog/multi-child-fd.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/Tmt9tgP807.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/multi-child-fd.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/multi-child-fd.output:Kernel command line: -q -f extract run multi-child-fd
userprog/build/tests/userprog/multi-child-fd.output:Putting 'multi-child-fd' into the file system...
userprog/build/tests/userprog/multi-child-fd.output:Putting 'child-close' into the file system...
userprog/build/tests/userprog/multi-child-fd.output:Executing 'multi-child-fd':
userprog/build/tests/userprog/multi-child-fd.output:(multi-child-fd) begin
userprog/build/tests/userprog/multi-child-fd.output:(multi-child-fd) open "sample.txt"
userprog/build/tests/userprog/multi-child-fd.output:(child-close) begin
userprog/build/tests/userprog/multi-child-fd.output:child-close: exit(-1)
userprog/build/tests/userprog/multi-child-fd.output:(multi-child-fd) wait(exec()) = -1
userprog/build/tests/userprog/multi-child-fd.output:(multi-child-fd) verified contents of "sample.txt"
userprog/build/tests/userprog/multi-child-fd.output:(multi-child-fd) end
userprog/build/tests/userprog/multi-child-fd.output:multi-child-fd: exit(0)
userprog/build/tests/userprog/multi-child-fd.output:Execution of 'multi-child-fd' complete.
Binary file userprog/build/tests/userprog/multi-recurse matches
userprog/build/tests/userprog/multi-recurse.d:tests/userprog/multi-recurse.o: ../../tests/userprog/multi-recurse.c \
Binary file userprog/build/tests/userprog/multi-recurse.o matches
userprog/build/tests/userprog/multi-recurse.output:Copying tests/userprog/multi-recurse to scratch partition...
userprog/build/tests/userprog/multi-recurse.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/iVaYpeNcKo.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/multi-recurse.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/multi-recurse.output:Kernel command line: -q -f extract run 'multi-recurse 15'
userprog/build/tests/userprog/multi-recurse.output:Putting 'multi-recurse' into the file system...
userprog/build/tests/userprog/multi-recurse.output:Executing 'multi-recurse 15':
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 15
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 14")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 14
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 13")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 13
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 12")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 12
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 11")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 11
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 10")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 10
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 9")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 9
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 8")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 8
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 7")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 7
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 6")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 6
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 5")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 5
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 4")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 4
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 3")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 3
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 2")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 2
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 1")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 1
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) exec("multi-recurse 0")
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) begin 0
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 0
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(0)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 1
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(1)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 2
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(2)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 3
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(3)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 4
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(4)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 5
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(5)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 6
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(6)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 7
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(7)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 8
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(8)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 9
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(9)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 10
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(10)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 11
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(11)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 12
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(12)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 13
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(13)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 14
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(14)
userprog/build/tests/userprog/multi-recurse.output:(multi-recurse) end 15
userprog/build/tests/userprog/multi-recurse.output:multi-recurse: exit(15)
userprog/build/tests/userprog/multi-recurse.output:Execution of 'multi-recurse 15' complete.
Binary file userprog/build/tests/userprog/open-bad-ptr matches
userprog/build/tests/userprog/open-bad-ptr.d:tests/userprog/open-bad-ptr.o: ../../tests/userprog/open-bad-ptr.c \
Binary file userprog/build/tests/userprog/open-bad-ptr.o matches
userprog/build/tests/userprog/open-bad-ptr.output:Copying tests/userprog/open-bad-ptr to scratch partition...
userprog/build/tests/userprog/open-bad-ptr.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/ulKaWI0te3.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/open-bad-ptr.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/open-bad-ptr.output:Kernel command line: -q -f extract run open-bad-ptr
userprog/build/tests/userprog/open-bad-ptr.output:Putting 'open-bad-ptr' into the file system...
userprog/build/tests/userprog/open-bad-ptr.output:Executing 'open-bad-ptr':
userprog/build/tests/userprog/open-bad-ptr.output:(open-bad-ptr) begin
userprog/build/tests/userprog/open-bad-ptr.output:open-bad-ptr: exit(-1)
userprog/build/tests/userprog/open-bad-ptr.output:Execution of 'open-bad-ptr' complete.
Binary file userprog/build/tests/userprog/open-boundary matches
userprog/build/tests/userprog/open-boundary.d:tests/userprog/open-boundary.o: ../../tests/userprog/open-boundary.c \
Binary file userprog/build/tests/userprog/open-boundary.o matches
userprog/build/tests/userprog/open-boundary.output:Copying tests/userprog/open-boundary to scratch partition...
userprog/build/tests/userprog/open-boundary.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/KXUdMTwLTJ.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/open-boundary.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/open-boundary.output:Kernel command line: -q -f extract run open-boundary
userprog/build/tests/userprog/open-boundary.output:Putting 'open-boundary' into the file system...
userprog/build/tests/userprog/open-boundary.output:Executing 'open-boundary':
userprog/build/tests/userprog/open-boundary.output:(open-boundary) begin
userprog/build/tests/userprog/open-boundary.output:(open-boundary) open "sample.txt"
userprog/build/tests/userprog/open-boundary.output:(open-boundary) end
userprog/build/tests/userprog/open-boundary.output:open-boundary: exit(0)
userprog/build/tests/userprog/open-boundary.output:Execution of 'open-boundary' complete.
Binary file userprog/build/tests/userprog/open-empty matches
userprog/build/tests/userprog/open-empty.d:tests/userprog/open-empty.o: ../../tests/userprog/open-empty.c \
Binary file userprog/build/tests/userprog/open-empty.o matches
userprog/build/tests/userprog/open-empty.output:Copying tests/userprog/open-empty to scratch partition...
userprog/build/tests/userprog/open-empty.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/QBlt0tMmDm.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/open-empty.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/open-empty.output:Kernel command line: -q -f extract run open-empty
userprog/build/tests/userprog/open-empty.output:Putting 'open-empty' into the file system...
userprog/build/tests/userprog/open-empty.output:Executing 'open-empty':
userprog/build/tests/userprog/open-empty.output:(open-empty) begin
userprog/build/tests/userprog/open-empty.output:(open-empty) end
userprog/build/tests/userprog/open-empty.output:open-empty: exit(0)
userprog/build/tests/userprog/open-empty.output:Execution of 'open-empty' complete.
Binary file userprog/build/tests/userprog/open-missing matches
userprog/build/tests/userprog/open-missing.d:tests/userprog/open-missing.o: ../../tests/userprog/open-missing.c \
Binary file userprog/build/tests/userprog/open-missing.o matches
userprog/build/tests/userprog/open-missing.output:Copying tests/userprog/open-missing to scratch partition...
userprog/build/tests/userprog/open-missing.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/jFxgHzFZyh.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/open-missing.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/open-missing.output:Kernel command line: -q -f extract run open-missing
userprog/build/tests/userprog/open-missing.output:Putting 'open-missing' into the file system...
userprog/build/tests/userprog/open-missing.output:Executing 'open-missing':
userprog/build/tests/userprog/open-missing.output:(open-missing) begin
userprog/build/tests/userprog/open-missing.output:(open-missing) end
userprog/build/tests/userprog/open-missing.output:open-missing: exit(0)
userprog/build/tests/userprog/open-missing.output:Execution of 'open-missing' complete.
Binary file userprog/build/tests/userprog/open-normal matches
userprog/build/tests/userprog/open-normal.d:tests/userprog/open-normal.o: ../../tests/userprog/open-normal.c \
Binary file userprog/build/tests/userprog/open-normal.o matches
userprog/build/tests/userprog/open-normal.output:Copying tests/userprog/open-normal to scratch partition...
userprog/build/tests/userprog/open-normal.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/wH16HybOha.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/open-normal.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/open-normal.output:Kernel command line: -q -f extract run open-normal
userprog/build/tests/userprog/open-normal.output:Putting 'open-normal' into the file system...
userprog/build/tests/userprog/open-normal.output:Executing 'open-normal':
userprog/build/tests/userprog/open-normal.output:(open-normal) begin
userprog/build/tests/userprog/open-normal.output:(open-normal) end
userprog/build/tests/userprog/open-normal.output:open-normal: exit(0)
userprog/build/tests/userprog/open-normal.output:Execution of 'open-normal' complete.
Binary file userprog/build/tests/userprog/open-null matches
userprog/build/tests/userprog/open-null.d:tests/userprog/open-null.o: ../../tests/userprog/open-null.c \
Binary file userprog/build/tests/userprog/open-null.o matches
userprog/build/tests/userprog/open-null.output:Copying tests/userprog/open-null to scratch partition...
userprog/build/tests/userprog/open-null.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/RpEAMeagez.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/open-null.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/open-null.output:Kernel command line: -q -f extract run open-null
userprog/build/tests/userprog/open-null.output:Putting 'open-null' into the file system...
userprog/build/tests/userprog/open-null.output:Executing 'open-null':
userprog/build/tests/userprog/open-null.output:(open-null) begin
userprog/build/tests/userprog/open-null.output:open-null: exit(-1)
userprog/build/tests/userprog/open-null.output:Execution of 'open-null' complete.
Binary file userprog/build/tests/userprog/open-twice matches
userprog/build/tests/userprog/open-twice.d:tests/userprog/open-twice.o: ../../tests/userprog/open-twice.c \
Binary file userprog/build/tests/userprog/open-twice.o matches
userprog/build/tests/userprog/open-twice.output:Copying tests/userprog/open-twice to scratch partition...
userprog/build/tests/userprog/open-twice.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/zhBD9C8Cfe.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/open-twice.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/open-twice.output:Kernel command line: -q -f extract run open-twice
userprog/build/tests/userprog/open-twice.output:Putting 'open-twice' into the file system...
userprog/build/tests/userprog/open-twice.output:Executing 'open-twice':
userprog/build/tests/userprog/open-twice.output:(open-twice) begin
userprog/build/tests/userprog/open-twice.output:(open-twice) open "sample.txt" once
userprog/build/tests/userprog/open-twice.output:(open-twice) open "sample.txt" again
userprog/build/tests/userprog/open-twice.output:(open-twice) end
userprog/build/tests/userprog/open-twice.output:open-twice: exit(0)
userprog/build/tests/userprog/open-twice.output:Execution of 'open-twice' complete.
Binary file userprog/build/tests/userprog/read-bad-fd matches
userprog/build/tests/userprog/read-bad-fd.d:tests/userprog/read-bad-fd.o: ../../tests/userprog/read-bad-fd.c \
Binary file userprog/build/tests/userprog/read-bad-fd.o matches
userprog/build/tests/userprog/read-bad-fd.output:Copying tests/userprog/read-bad-fd to scratch partition...
userprog/build/tests/userprog/read-bad-fd.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/_Ky1W0xYBD.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/read-bad-fd.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/read-bad-fd.output:Kernel command line: -q -f extract run read-bad-fd
userprog/build/tests/userprog/read-bad-fd.output:Putting 'read-bad-fd' into the file system...
userprog/build/tests/userprog/read-bad-fd.output:Executing 'read-bad-fd':
userprog/build/tests/userprog/read-bad-fd.output:(read-bad-fd) begin
userprog/build/tests/userprog/read-bad-fd.output:read-bad-fd: exit(-1)
userprog/build/tests/userprog/read-bad-fd.output:Execution of 'read-bad-fd' complete.
Binary file userprog/build/tests/userprog/read-bad-ptr matches
userprog/build/tests/userprog/read-bad-ptr.d:tests/userprog/read-bad-ptr.o: ../../tests/userprog/read-bad-ptr.c \
Binary file userprog/build/tests/userprog/read-bad-ptr.o matches
Binary file userprog/build/tests/userprog/read-normal matches
userprog/build/tests/userprog/read-bad-ptr.output:Copying tests/userprog/read-bad-ptr to scratch partition...
userprog/build/tests/userprog/read-bad-ptr.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/EHepA158hC.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/read-bad-ptr.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/read-bad-ptr.output:Kernel command line: -q -f extract run read-bad-ptr
userprog/build/tests/userprog/read-bad-ptr.output:Putting 'read-bad-ptr' into the file system...
userprog/build/tests/userprog/read-bad-ptr.output:Executing 'read-bad-ptr':
userprog/build/tests/userprog/read-bad-ptr.output:(read-bad-ptr) begin
userprog/build/tests/userprog/read-bad-ptr.output:(read-bad-ptr) open "sample.txt"
userprog/build/tests/userprog/read-bad-ptr.output:read-bad-ptr: exit(-1)
userprog/build/tests/userprog/read-bad-ptr.output:Execution of 'read-bad-ptr' complete.
Binary file userprog/build/tests/userprog/read-boundary matches
userprog/build/tests/userprog/read-boundary.d:tests/userprog/read-boundary.o: ../../tests/userprog/read-boundary.c \
Binary file userprog/build/tests/userprog/read-boundary.o matches
userprog/build/tests/userprog/read-boundary.output:Copying tests/userprog/read-boundary to scratch partition...
userprog/build/tests/userprog/read-boundary.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/G262KxAxeP.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/read-boundary.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/read-boundary.output:Kernel command line: -q -f extract run read-boundary
userprog/build/tests/userprog/read-boundary.output:Putting 'read-boundary' into the file system...
userprog/build/tests/userprog/read-boundary.output:Executing 'read-boundary':
userprog/build/tests/userprog/read-boundary.output:(read-boundary) begin
userprog/build/tests/userprog/read-boundary.output:(read-boundary) open "sample.txt"
userprog/build/tests/userprog/read-boundary.output:(read-boundary) end
userprog/build/tests/userprog/read-boundary.output:read-boundary: exit(0)
userprog/build/tests/userprog/read-boundary.output:Execution of 'read-boundary' complete.
userprog/build/tests/userprog/read-normal.d:tests/userprog/read-normal.o: ../../tests/userprog/read-normal.c \
Binary file userprog/build/tests/userprog/read-normal.o matches
userprog/build/tests/userprog/read-normal.output:Copying tests/userprog/read-normal to scratch partition...
userprog/build/tests/userprog/read-normal.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/CoQ0B1SVwf.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/read-normal.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/read-normal.output:Kernel command line: -q -f extract run read-normal
userprog/build/tests/userprog/read-normal.output:Putting 'read-normal' into the file system...
userprog/build/tests/userprog/read-normal.output:Executing 'read-normal':
userprog/build/tests/userprog/read-normal.output:(read-normal) begin
userprog/build/tests/userprog/read-normal.output:(read-normal) open "sample.txt" for verification
userprog/build/tests/userprog/read-normal.output:(read-normal) verified contents of "sample.txt"
userprog/build/tests/userprog/read-normal.output:(read-normal) close "sample.txt"
userprog/build/tests/userprog/read-normal.output:(read-normal) end
userprog/build/tests/userprog/read-normal.output:read-normal: exit(0)
userprog/build/tests/userprog/read-normal.output:Execution of 'read-normal' complete.
Binary file userprog/build/tests/userprog/read-stdout matches
userprog/build/tests/userprog/read-stdout.d:tests/userprog/read-stdout.o: ../../tests/userprog/read-stdout.c \
Binary file userprog/build/tests/userprog/read-stdout.o matches
userprog/build/tests/userprog/read-stdout.output:Copying tests/userprog/read-stdout to scratch partition...
userprog/build/tests/userprog/read-stdout.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/eYQiEJaBcU.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/read-stdout.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/read-stdout.output:Kernel command line: -q -f extract run read-stdout
userprog/build/tests/userprog/read-stdout.output:Putting 'read-stdout' into the file system...
userprog/build/tests/userprog/read-stdout.output:Executing 'read-stdout':
userprog/build/tests/userprog/read-stdout.output:(read-stdout) begin
userprog/build/tests/userprog/read-stdout.output:(read-stdout) end
userprog/build/tests/userprog/read-stdout.output:read-stdout: exit(0)
userprog/build/tests/userprog/read-stdout.output:Execution of 'read-stdout' complete.
Binary file userprog/build/tests/userprog/read-zero matches
userprog/build/tests/userprog/read-zero.d:tests/userprog/read-zero.o: ../../tests/userprog/read-zero.c \
Binary file userprog/build/tests/userprog/read-zero.o matches
userprog/build/tests/userprog/read-zero.output:Copying tests/userprog/read-zero to scratch partition...
userprog/build/tests/userprog/read-zero.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/WYMVxVp_f1.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/read-zero.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/read-zero.output:Kernel command line: -q -f extract run read-zero
userprog/build/tests/userprog/read-zero.output:Putting 'read-zero' into the file system...
userprog/build/tests/userprog/read-zero.output:Executing 'read-zero':
userprog/build/tests/userprog/read-zero.output:(read-zero) begin
userprog/build/tests/userprog/read-zero.output:(read-zero) open "sample.txt"
userprog/build/tests/userprog/read-zero.output:(read-zero) end
userprog/build/tests/userprog/read-zero.output:read-zero: exit(0)
userprog/build/tests/userprog/read-zero.output:Execution of 'read-zero' complete.
Binary file userprog/build/tests/userprog/rox-child matches
userprog/build/tests/userprog/rox-child.d:tests/userprog/rox-child.o: ../../tests/userprog/rox-child.c \
userprog/build/tests/userprog/rox-child.d: ../../tests/userprog/rox-child.inc ../../lib/user/syscall.h \
Binary file userprog/build/tests/userprog/rox-child.o matches
userprog/build/tests/userprog/rox-child.output:Copying tests/userprog/rox-child to scratch partition...
userprog/build/tests/userprog/rox-child.output:Copying tests/userprog/child-rox to scratch partition...
userprog/build/tests/userprog/rox-child.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/1ARU3ZysLr.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/rox-child.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/rox-child.output:Kernel command line: -q -f extract run rox-child
userprog/build/tests/userprog/rox-child.output:Putting 'rox-child' into the file system...
userprog/build/tests/userprog/rox-child.output:Putting 'child-rox' into the file system...
userprog/build/tests/userprog/rox-child.output:Executing 'rox-child':
userprog/build/tests/userprog/rox-child.output:(rox-child) begin
userprog/build/tests/userprog/rox-child.output:(rox-child) open "child-rox"
userprog/build/tests/userprog/rox-child.output:(rox-child) read "child-rox"
userprog/build/tests/userprog/rox-child.output:(rox-child) write "child-rox"
userprog/build/tests/userprog/rox-child.output:(rox-child) exec "child-rox 1"
userprog/build/tests/userprog/rox-child.output:(child-rox) begin
userprog/build/tests/userprog/rox-child.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-child.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-child.output:(child-rox) end
userprog/build/tests/userprog/rox-child.output:child-rox: exit(12)
userprog/build/tests/userprog/rox-child.output:(rox-child) write "child-rox"
userprog/build/tests/userprog/rox-child.output:(rox-child) end
userprog/build/tests/userprog/rox-child.output:rox-child: exit(0)
userprog/build/tests/userprog/rox-child.output:Execution of 'rox-child' complete.
Binary file userprog/build/tests/userprog/rox-multichild matches
userprog/build/tests/userprog/rox-multichild.d:tests/userprog/rox-multichild.o: ../../tests/userprog/rox-multichild.c \
userprog/build/tests/userprog/rox-multichild.d: ../../tests/userprog/rox-child.inc ../../lib/user/syscall.h \
Binary file userprog/build/tests/userprog/rox-multichild.o matches
userprog/build/tests/userprog/rox-multichild.output:Copying tests/userprog/rox-multichild to scratch partition...
userprog/build/tests/userprog/rox-multichild.output:Copying tests/userprog/child-rox to scratch partition...
userprog/build/tests/userprog/rox-multichild.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/cqI1TIVTj3.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/rox-multichild.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/rox-multichild.output:Kernel command line: -q -f extract run rox-multichild
userprog/build/tests/userprog/rox-multichild.output:Putting 'rox-multichild' into the file system...
userprog/build/tests/userprog/rox-multichild.output:Putting 'child-rox' into the file system...
userprog/build/tests/userprog/rox-multichild.output:Executing 'rox-multichild':
userprog/build/tests/userprog/rox-multichild.output:(rox-multichild) begin
userprog/build/tests/userprog/rox-multichild.output:(rox-multichild) open "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(rox-multichild) read "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(rox-multichild) write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(rox-multichild) exec "child-rox 5"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) begin
userprog/build/tests/userprog/rox-multichild.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) exec "child-rox 4"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) begin
userprog/build/tests/userprog/rox-multichild.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) exec "child-rox 3"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) begin
userprog/build/tests/userprog/rox-multichild.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) exec "child-rox 2"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) begin
userprog/build/tests/userprog/rox-multichild.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) exec "child-rox 1"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) begin
userprog/build/tests/userprog/rox-multichild.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) end
userprog/build/tests/userprog/rox-multichild.output:child-rox: exit(12)
userprog/build/tests/userprog/rox-multichild.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) end
userprog/build/tests/userprog/rox-multichild.output:child-rox: exit(12)
userprog/build/tests/userprog/rox-multichild.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) end
userprog/build/tests/userprog/rox-multichild.output:child-rox: exit(12)
userprog/build/tests/userprog/rox-multichild.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) end
userprog/build/tests/userprog/rox-multichild.output:child-rox: exit(12)
userprog/build/tests/userprog/rox-multichild.output:(child-rox) try to write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(child-rox) end
userprog/build/tests/userprog/rox-multichild.output:child-rox: exit(12)
userprog/build/tests/userprog/rox-multichild.output:(rox-multichild) write "child-rox"
userprog/build/tests/userprog/rox-multichild.output:(rox-multichild) end
userprog/build/tests/userprog/rox-multichild.output:rox-multichild: exit(0)
userprog/build/tests/userprog/rox-multichild.output:Execution of 'rox-multichild' complete.
Binary file userprog/build/tests/userprog/rox-simple matches
userprog/build/tests/userprog/rox-simple.d:tests/userprog/rox-simple.o: ../../tests/userprog/rox-simple.c \
Binary file userprog/build/tests/userprog/rox-simple.o matches
userprog/build/tests/userprog/rox-simple.output:Copying tests/userprog/rox-simple to scratch partition...
userprog/build/tests/userprog/rox-simple.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/lKz202mIni.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/rox-simple.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/rox-simple.output:Kernel command line: -q -f extract run rox-simple
userprog/build/tests/userprog/rox-simple.output:Putting 'rox-simple' into the file system...
userprog/build/tests/userprog/rox-simple.output:Executing 'rox-simple':
userprog/build/tests/userprog/rox-simple.output:(rox-simple) begin
userprog/build/tests/userprog/rox-simple.output:(rox-simple) open "rox-simple"
userprog/build/tests/userprog/rox-simple.output:(rox-simple) read "rox-simple"
userprog/build/tests/userprog/rox-simple.output:(rox-simple) try to write "rox-simple"
userprog/build/tests/userprog/rox-simple.output:(rox-simple) end
userprog/build/tests/userprog/rox-simple.output:rox-simple: exit(0)
userprog/build/tests/userprog/rox-simple.output:Execution of 'rox-simple' complete.
Binary file userprog/build/tests/userprog/sc-bad-arg matches
userprog/build/tests/userprog/sc-bad-arg.d:tests/userprog/sc-bad-arg.o: ../../tests/userprog/sc-bad-arg.c \
userprog/build/tests/userprog/sc-bad-arg.d: ../../lib/syscall-nr.h ../../tests/lib.h ../../lib/debug.h \
Binary file userprog/build/tests/userprog/sc-bad-arg.o matches
userprog/build/tests/userprog/sc-bad-arg.output:Copying tests/userprog/sc-bad-arg to scratch partition...
userprog/build/tests/userprog/sc-bad-arg.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/_CKsWLvJZn.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/sc-bad-arg.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/sc-bad-arg.output:Kernel command line: -q -f extract run sc-bad-arg
userprog/build/tests/userprog/sc-bad-arg.output:Putting 'sc-bad-arg' into the file system...
userprog/build/tests/userprog/sc-bad-arg.output:Executing 'sc-bad-arg':
userprog/build/tests/userprog/sc-bad-arg.output:(sc-bad-arg) begin
userprog/build/tests/userprog/sc-bad-arg.output:sc-bad-arg: exit(-1)
userprog/build/tests/userprog/sc-bad-arg.output:Execution of 'sc-bad-arg' complete.
Binary file userprog/build/tests/userprog/sc-bad-sp matches
userprog/build/tests/userprog/sc-bad-sp.d:tests/userprog/sc-bad-sp.o: ../../tests/userprog/sc-bad-sp.c \
Binary file userprog/build/tests/userprog/sc-bad-sp.o matches
userprog/build/tests/userprog/sc-bad-sp.output:Copying tests/userprog/sc-bad-sp to scratch partition...
userprog/build/tests/userprog/sc-bad-sp.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/9T5KznjHb8.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/sc-bad-sp.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/sc-bad-sp.output:Kernel command line: -q -f extract run sc-bad-sp
userprog/build/tests/userprog/sc-bad-sp.output:Putting 'sc-bad-sp' into the file system...
userprog/build/tests/userprog/sc-bad-sp.output:Executing 'sc-bad-sp':
userprog/build/tests/userprog/sc-bad-sp.output:(sc-bad-sp) begin
userprog/build/tests/userprog/sc-bad-sp.output:sc-bad-sp: exit(-1)
userprog/build/tests/userprog/sc-bad-sp.output:Execution of 'sc-bad-sp' complete.
Binary file userprog/build/tests/userprog/sc-boundary matches
Binary file userprog/build/tests/userprog/sc-boundary-2 matches
userprog/build/tests/userprog/sc-boundary-2.d:tests/userprog/sc-boundary-2.o: ../../tests/userprog/sc-boundary-2.c \
userprog/build/tests/userprog/sc-boundary-2.d: ../../lib/syscall-nr.h ../../tests/userprog/boundary.h ../../tests/lib.h \
Binary file userprog/build/tests/userprog/sc-boundary-2.o matches
userprog/build/tests/userprog/sc-boundary-2.output:Copying tests/userprog/sc-boundary-2 to scratch partition...
userprog/build/tests/userprog/sc-boundary-2.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/HMcbeAK02H.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/sc-boundary-2.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/sc-boundary-2.output:Kernel command line: -q -f extract run sc-boundary-2
userprog/build/tests/userprog/sc-boundary-2.output:Putting 'sc-boundary-2' into the file system...
userprog/build/tests/userprog/sc-boundary-2.output:Executing 'sc-boundary-2':
userprog/build/tests/userprog/sc-boundary-2.output:(sc-boundary-2) begin
userprog/build/tests/userprog/sc-boundary-2.output:sc-boundary-2: exit(67)
userprog/build/tests/userprog/sc-boundary-2.output:Execution of 'sc-boundary-2' complete.
Binary file userprog/build/tests/userprog/sc-boundary-3 matches
userprog/build/tests/userprog/sc-boundary-3.d:tests/userprog/sc-boundary-3.o: ../../tests/userprog/sc-boundary-3.c \
userprog/build/tests/userprog/sc-boundary-3.d: ../../lib/syscall-nr.h ../../tests/userprog/boundary.h ../../tests/lib.h \
Binary file userprog/build/tests/userprog/sc-boundary-3.o matches
userprog/build/tests/userprog/sc-boundary-3.output:Copying tests/userprog/sc-boundary-3 to scratch partition...
userprog/build/tests/userprog/sc-boundary-3.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/ir8d2pswWC.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/sc-boundary-3.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/sc-boundary-3.output:Kernel command line: -q -f extract run sc-boundary-3
userprog/build/tests/userprog/sc-boundary-3.output:Putting 'sc-boundary-3' into the file system...
userprog/build/tests/userprog/sc-boundary-3.output:Executing 'sc-boundary-3':
userprog/build/tests/userprog/sc-boundary-3.output:(sc-boundary-3) begin
userprog/build/tests/userprog/sc-boundary-3.output:sc-boundary-3: exit(-1)
userprog/build/tests/userprog/sc-boundary-3.output:Execution of 'sc-boundary-3' complete.
userprog/build/tests/userprog/sc-boundary.d:tests/userprog/sc-boundary.o: ../../tests/userprog/sc-boundary.c \
userprog/build/tests/userprog/sc-boundary.d: ../../lib/syscall-nr.h ../../tests/userprog/boundary.h ../../tests/lib.h \
Binary file userprog/build/tests/userprog/sc-boundary.o matches
userprog/build/tests/userprog/sc-boundary.output:Copying tests/userprog/sc-boundary to scratch partition...
userprog/build/tests/userprog/sc-boundary.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/Ohkid65JYQ.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/sc-boundary.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/sc-boundary.output:Kernel command line: -q -f extract run sc-boundary
userprog/build/tests/userprog/sc-boundary.output:Putting 'sc-boundary' into the file system...
userprog/build/tests/userprog/sc-boundary.output:Executing 'sc-boundary':
userprog/build/tests/userprog/sc-boundary.output:(sc-boundary) begin
userprog/build/tests/userprog/sc-boundary.output:sc-boundary: exit(42)
userprog/build/tests/userprog/sc-boundary.output:Execution of 'sc-boundary' complete.
Binary file userprog/build/tests/userprog/wait-bad-pid matches
userprog/build/tests/userprog/wait-bad-pid.d:tests/userprog/wait-bad-pid.o: ../../tests/userprog/wait-bad-pid.c \
Binary file userprog/build/tests/userprog/wait-bad-pid.o matches
userprog/build/tests/userprog/wait-bad-pid.output:Copying tests/userprog/wait-bad-pid to scratch partition...
userprog/build/tests/userprog/wait-bad-pid.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/gueNetQsIE.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/wait-bad-pid.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/wait-bad-pid.output:Kernel command line: -q -f extract run wait-bad-pid
userprog/build/tests/userprog/wait-bad-pid.output:Putting 'wait-bad-pid' into the file system...
userprog/build/tests/userprog/wait-bad-pid.output:Executing 'wait-bad-pid':
userprog/build/tests/userprog/wait-bad-pid.output:(wait-bad-pid) begin
userprog/build/tests/userprog/wait-bad-pid.output:(wait-bad-pid) end
userprog/build/tests/userprog/wait-bad-pid.output:wait-bad-pid: exit(0)
userprog/build/tests/userprog/wait-bad-pid.output:Execution of 'wait-bad-pid' complete.
Binary file userprog/build/tests/userprog/wait-killed matches
userprog/build/tests/userprog/wait-killed.d:tests/userprog/wait-killed.o: ../../tests/userprog/wait-killed.c \
Binary file userprog/build/tests/userprog/wait-killed.o matches
userprog/build/tests/userprog/wait-killed.output:Copying tests/userprog/wait-killed to scratch partition...
userprog/build/tests/userprog/wait-killed.output:Copying tests/userprog/child-bad to scratch partition...
userprog/build/tests/userprog/wait-killed.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/cjp7uWx71n.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/wait-killed.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/wait-killed.output:Kernel command line: -q -f extract run wait-killed
userprog/build/tests/userprog/wait-killed.output:Putting 'wait-killed' into the file system...
userprog/build/tests/userprog/wait-killed.output:Putting 'child-bad' into the file system...
userprog/build/tests/userprog/wait-killed.output:Executing 'wait-killed':
userprog/build/tests/userprog/wait-killed.output:(wait-killed) begin
userprog/build/tests/userprog/wait-killed.output:(child-bad) begin
userprog/build/tests/userprog/wait-killed.output:child-bad: exit(-1)
userprog/build/tests/userprog/wait-killed.output:(wait-killed) wait(exec()) = -1
userprog/build/tests/userprog/wait-killed.output:(wait-killed) end
userprog/build/tests/userprog/wait-killed.output:wait-killed: exit(0)
userprog/build/tests/userprog/wait-killed.output:Execution of 'wait-killed' complete.
Binary file userprog/build/tests/userprog/wait-simple matches
userprog/build/tests/userprog/wait-simple.d:tests/userprog/wait-simple.o: ../../tests/userprog/wait-simple.c \
Binary file userprog/build/tests/userprog/wait-simple.o matches
userprog/build/tests/userprog/wait-simple.output:Copying tests/userprog/wait-simple to scratch partition...
userprog/build/tests/userprog/wait-simple.output:Copying tests/userprog/child-simple to scratch partition...
userprog/build/tests/userprog/wait-simple.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/2ptD7TVMmr.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/wait-simple.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/wait-simple.output:Kernel command line: -q -f extract run wait-simple
userprog/build/tests/userprog/wait-simple.output:Putting 'wait-simple' into the file system...
userprog/build/tests/userprog/wait-simple.output:Putting 'child-simple' into the file system...
userprog/build/tests/userprog/wait-simple.output:Executing 'wait-simple':
userprog/build/tests/userprog/wait-simple.output:(wait-simple) begin
userprog/build/tests/userprog/wait-simple.output:(child-simple) run
userprog/build/tests/userprog/wait-simple.output:child-simple: exit(81)
userprog/build/tests/userprog/wait-simple.output:(wait-simple) wait(exec()) = 81
userprog/build/tests/userprog/wait-simple.output:(wait-simple) end
userprog/build/tests/userprog/wait-simple.output:wait-simple: exit(0)
userprog/build/tests/userprog/wait-simple.output:Execution of 'wait-simple' complete.
Binary file userprog/build/tests/userprog/wait-twice matches
userprog/build/tests/userprog/wait-twice.d:tests/userprog/wait-twice.o: ../../tests/userprog/wait-twice.c \
Binary file userprog/build/tests/userprog/wait-twice.o matches
userprog/build/tests/userprog/wait-twice.output:Copying tests/userprog/wait-twice to scratch partition...
userprog/build/tests/userprog/wait-twice.output:Copying tests/userprog/child-simple to scratch partition...
userprog/build/tests/userprog/wait-twice.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/4n3x2Ar64S.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/wait-twice.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/wait-twice.output:Kernel command line: -q -f extract run wait-twice
userprog/build/tests/userprog/wait-twice.output:Putting 'wait-twice' into the file system...
userprog/build/tests/userprog/wait-twice.output:Putting 'child-simple' into the file system...
userprog/build/tests/userprog/wait-twice.output:Executing 'wait-twice':
userprog/build/tests/userprog/wait-twice.output:(wait-twice) begin
userprog/build/tests/userprog/wait-twice.output:(child-simple) run
userprog/build/tests/userprog/wait-twice.output:child-simple: exit(81)
userprog/build/tests/userprog/wait-twice.output:(wait-twice) wait(exec()) = 81
userprog/build/tests/userprog/wait-twice.output:(wait-twice) wait(exec()) = -1
userprog/build/tests/userprog/wait-twice.output:(wait-twice) end
userprog/build/tests/userprog/wait-twice.output:wait-twice: exit(0)
userprog/build/tests/userprog/wait-twice.output:Execution of 'wait-twice' complete.
Binary file userprog/build/tests/userprog/write-bad-fd matches
userprog/build/tests/userprog/write-bad-fd.d:tests/userprog/write-bad-fd.o: ../../tests/userprog/write-bad-fd.c \
Binary file userprog/build/tests/userprog/write-bad-fd.o matches
userprog/build/tests/userprog/write-bad-fd.output:Copying tests/userprog/write-bad-fd to scratch partition...
userprog/build/tests/userprog/write-bad-fd.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/6338YIXIGA.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/write-bad-fd.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/write-bad-fd.output:Kernel command line: -q -f extract run write-bad-fd
userprog/build/tests/userprog/write-bad-fd.output:Putting 'write-bad-fd' into the file system...
userprog/build/tests/userprog/write-bad-fd.output:Executing 'write-bad-fd':
userprog/build/tests/userprog/write-bad-fd.output:(write-bad-fd) begin
userprog/build/tests/userprog/write-bad-fd.output:write-bad-fd: exit(-1)
userprog/build/tests/userprog/write-bad-fd.output:Execution of 'write-bad-fd' complete.
Binary file userprog/build/tests/userprog/write-bad-ptr matches
userprog/build/tests/userprog/write-bad-ptr.d:tests/userprog/write-bad-ptr.o: ../../tests/userprog/write-bad-ptr.c \
Binary file userprog/build/tests/userprog/write-bad-ptr.o matches
userprog/build/tests/userprog/write-bad-ptr.output:Copying tests/userprog/write-bad-ptr to scratch partition...
userprog/build/tests/userprog/write-bad-ptr.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/CQ6SazFv4b.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/write-bad-ptr.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/write-bad-ptr.output:Kernel command line: -q -f extract run write-bad-ptr
userprog/build/tests/userprog/write-bad-ptr.output:Putting 'write-bad-ptr' into the file system...
userprog/build/tests/userprog/write-bad-ptr.output:Executing 'write-bad-ptr':
userprog/build/tests/userprog/write-bad-ptr.output:(write-bad-ptr) begin
userprog/build/tests/userprog/write-bad-ptr.output:(write-bad-ptr) open "sample.txt"
userprog/build/tests/userprog/write-bad-ptr.output:write-bad-ptr: exit(-1)
userprog/build/tests/userprog/write-bad-ptr.output:Execution of 'write-bad-ptr' complete.
Binary file userprog/build/tests/userprog/write-boundary matches
userprog/build/tests/userprog/write-boundary.d:tests/userprog/write-boundary.o: ../../tests/userprog/write-boundary.c \
Binary file userprog/build/tests/userprog/write-boundary.o matches
userprog/build/tests/userprog/write-boundary.output:Copying tests/userprog/write-boundary to scratch partition...
userprog/build/tests/userprog/write-boundary.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/Qeo7qZ7tZQ.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/write-boundary.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/write-boundary.output:Kernel command line: -q -f extract run write-boundary
userprog/build/tests/userprog/write-boundary.output:Putting 'write-boundary' into the file system...
userprog/build/tests/userprog/write-boundary.output:Executing 'write-boundary':
userprog/build/tests/userprog/write-boundary.output:(write-boundary) begin
userprog/build/tests/userprog/write-boundary.output:(write-boundary) open "sample.txt"
userprog/build/tests/userprog/write-boundary.output:(write-boundary) end
userprog/build/tests/userprog/write-boundary.output:write-boundary: exit(0)
userprog/build/tests/userprog/write-boundary.output:Execution of 'write-boundary' complete.
Binary file userprog/build/tests/userprog/write-normal matches
userprog/build/tests/userprog/write-normal.d:tests/userprog/write-normal.o: ../../tests/userprog/write-normal.c \
Binary file userprog/build/tests/userprog/write-normal.o matches
userprog/build/tests/userprog/write-normal.output:Copying tests/userprog/write-normal to scratch partition...
userprog/build/tests/userprog/write-normal.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/7F92ykj6LB.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/write-normal.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/write-normal.output:Kernel command line: -q -f extract run write-normal
userprog/build/tests/userprog/write-normal.output:Putting 'write-normal' into the file system...
userprog/build/tests/userprog/write-normal.output:Executing 'write-normal':
userprog/build/tests/userprog/write-normal.output:(write-normal) begin
userprog/build/tests/userprog/write-normal.output:(write-normal) create "test.txt"
userprog/build/tests/userprog/write-normal.output:(write-normal) open "test.txt"
userprog/build/tests/userprog/write-normal.output:(write-normal) end
userprog/build/tests/userprog/write-normal.output:write-normal: exit(0)
userprog/build/tests/userprog/write-normal.output:Execution of 'write-normal' complete.
Binary file userprog/build/tests/userprog/write-stdin matches
userprog/build/tests/userprog/write-stdin.d:tests/userprog/write-stdin.o: ../../tests/userprog/write-stdin.c \
Binary file userprog/build/tests/userprog/write-stdin.o matches
userprog/build/tests/userprog/write-stdin.output:Copying tests/userprog/write-stdin to scratch partition...
userprog/build/tests/userprog/write-stdin.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/vyr6seLaKT.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/write-stdin.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/write-stdin.output:Kernel command line: -q -f extract run write-stdin
userprog/build/tests/userprog/write-stdin.output:Putting 'write-stdin' into the file system...
userprog/build/tests/userprog/write-stdin.output:Executing 'write-stdin':
userprog/build/tests/userprog/write-stdin.output:(write-stdin) begin
userprog/build/tests/userprog/write-stdin.output:(write-stdin) end
userprog/build/tests/userprog/write-stdin.output:write-stdin: exit(0)
userprog/build/tests/userprog/write-stdin.output:Execution of 'write-stdin' complete.
Binary file userprog/build/tests/userprog/write-zero matches
userprog/build/tests/userprog/write-zero.d:tests/userprog/write-zero.o: ../../tests/userprog/write-zero.c \
Binary file userprog/build/tests/userprog/write-zero.o matches
userprog/build/tests/userprog/no-vm/multi-oom.d:tests/userprog/no-vm/multi-oom.o: ../../tests/userprog/no-vm/multi-oom.c \
Binary file userprog/build/tests/userprog/no-vm/multi-oom.o matches
Binary file userprog/build/tests/userprog/no-vm/multi-oom matches
userprog/build/tests/userprog/no-vm/multi-oom.output:Copying tests/userprog/no-vm/multi-oom to scratch partition...
userprog/build/tests/userprog/no-vm/multi-oom.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/ML_MqXCgmP.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/no-vm/multi-oom.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/no-vm/multi-oom.output:Kernel command line: -q -f extract run multi-oom
userprog/build/tests/userprog/no-vm/multi-oom.output:Putting 'multi-oom' into the file system...
userprog/build/tests/userprog/no-vm/multi-oom.output:Executing 'multi-oom':
userprog/build/tests/userprog/no-vm/multi-oom.output:(multi-oom) begin
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(51)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(-1)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(42)
userprog/build/tests/userprog/no-vm/multi-oom.output:(multi-oom) after run 4/10, expected depth 51, actual depth 42.: FAILED
userprog/build/tests/userprog/no-vm/multi-oom.output:multi-oom: exit(1)
userprog/build/tests/userprog/no-vm/multi-oom.output:Execution of 'multi-oom' complete.
userprog/build/tests/userprog/write-zero.output:Copying tests/userprog/write-zero to scratch partition...
userprog/build/tests/userprog/write-zero.output:qemu-system-i386 -device isa-debug-exit -hda /tmp/_BKy4QvnLh.dsk -m 4 -net none -nographic -monitor null
userprog/build/tests/userprog/write-zero.output:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/tests/userprog/write-zero.output:Kernel command line: -q -f extract run write-zero
userprog/build/tests/userprog/write-zero.output:Putting 'write-zero' into the file system...
userprog/build/tests/userprog/write-zero.output:Executing 'write-zero':
userprog/build/tests/userprog/write-zero.output:(write-zero) begin
userprog/build/tests/userprog/write-zero.output:(write-zero) open "sample.txt"
userprog/build/tests/userprog/write-zero.output:(write-zero) end
userprog/build/tests/userprog/write-zero.output:write-zero: exit(0)
userprog/build/tests/userprog/write-zero.output:Execution of 'write-zero' complete.
userprog/build/threads/interrupt.d: ../../threads/intr-stubs.h ../../threads/io.h ../../threads/thread.h \
userprog/build/threads/intr-stubs.d:threads/intr-stubs.o: ../../threads/intr-stubs.S ../../threads/loader.h
Binary file userprog/build/threads/intr-stubs.o matches
userprog/build/threads/kernel.lds.s:OUTPUT_FORMAT("elf32-i386")
userprog/build/threads/kernel.lds.s:  ASSERT (_end - _start <= 512K, "Kernel image is too big.")
Binary file userprog/build/threads/loader.o matches
Binary file userprog/build/threads/malloc.o matches
Binary file userprog/build/threads/palloc.o matches
Binary file userprog/build/threads/start.o matches
Binary file userprog/build/threads/switch.o matches
userprog/build/threads/thread.d: ../../threads/interrupt.h ../../threads/intr-stubs.h \
Binary file userprog/build/threads/init.o matches
Binary file userprog/build/threads/thread.o matches
Binary file userprog/build/threads/interrupt.o matches
Binary file userprog/build/threads/synch.o matches
Binary file userprog/build/userprog/gdt.o matches
Binary file userprog/build/userprog/pagedir.o matches
userprog/build/userprog/syscall.d: ../../lib/kernel/stdio.h ../../lib/syscall-nr.h \
Binary file userprog/build/userprog/exception.o matches
Binary file userprog/build/userprog/syscall.o matches
Binary file userprog/build/userprog/tss.o matches
Binary file userprog/build/userprog/process.o matches
Binary file userprog/build/loader.bin matches
Binary file userprog/build/libc.a matches
userprog/build/grade:warning: test tests/userprog/exec-bound doesn't count for grading
userprog/build/grade:warning: test tests/userprog/exec-bound-3 doesn't count for grading
userprog/build/grade:warning: test tests/userprog/sc-boundary-3 doesn't count for grading
userprog/build/grade:warning: test tests/userprog/exec-bound-2 doesn't count for grading
userprog/build/grade:- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
userprog/build/grade:--------------------------------------------- --- --- ------ ------
userprog/build/grade:tests/userprog/no-vm/Rubric                     0/  1   0.0%/ 10.0%
userprog/build/grade:--------------------------------------------- --- --- ------ ------
userprog/build/grade:- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
userprog/build/grade:	- Test argument passing on Pintos command line.
userprog/build/grade:	     3/ 3 tests/userprog/args-none
userprog/build/grade:	     3/ 3 tests/userprog/args-single
userprog/build/grade:	     3/ 3 tests/userprog/args-multiple
userprog/build/grade:	     3/ 3 tests/userprog/args-many
userprog/build/grade:	     3/ 3 tests/userprog/args-dbl-space
userprog/build/grade:	- Test "create" system call.
userprog/build/grade:	     3/ 3 tests/userprog/create-empty
userprog/build/grade:	     3/ 3 tests/userprog/create-long
userprog/build/grade:	     3/ 3 tests/userprog/create-normal
userprog/build/grade:	     3/ 3 tests/userprog/create-exists
userprog/build/grade:	- Test "open" system call.
userprog/build/grade:	     3/ 3 tests/userprog/open-missing
userprog/build/grade:	     3/ 3 tests/userprog/open-normal
userprog/build/grade:	     3/ 3 tests/userprog/open-twice
userprog/build/grade:	- Test "read" system call.
userprog/build/grade:	     3/ 3 tests/userprog/read-normal
userprog/build/grade:	     3/ 3 tests/userprog/read-zero
userprog/build/grade:	- Test "write" system call.
userprog/build/grade:	     3/ 3 tests/userprog/write-normal
userprog/build/grade:	     3/ 3 tests/userprog/write-zero
userprog/build/grade:	- Test "close" system call.
userprog/build/grade:	     3/ 3 tests/userprog/close-normal
userprog/build/grade:	- Test "exec" system call.
userprog/build/grade:	     5/ 5 tests/userprog/exec-once
userprog/build/grade:	     5/ 5 tests/userprog/exec-multiple
userprog/build/grade:	     5/ 5 tests/userprog/exec-arg
userprog/build/grade:	- Test "wait" system call.
userprog/build/grade:	     5/ 5 tests/userprog/wait-simple
userprog/build/grade:	     5/ 5 tests/userprog/wait-twice
userprog/build/grade:	- Test "exit" system call.
userprog/build/grade:	- Test "halt" system call.
userprog/build/grade:	- Test recursive execution of user programs.
userprog/build/grade:	    15/15 tests/userprog/multi-recurse
userprog/build/grade:	- Test read-only executable feature.
userprog/build/grade:	     3/ 3 tests/userprog/rox-simple
userprog/build/grade:	     3/ 3 tests/userprog/rox-child
userprog/build/grade:	     3/ 3 tests/userprog/rox-multichild
userprog/build/grade:	- Section summary.
userprog/build/grade:	- Test robustness of file descriptor handling.
userprog/build/grade:	     2/ 2 tests/userprog/close-stdin
userprog/build/grade:	     2/ 2 tests/userprog/close-stdout
userprog/build/grade:	     2/ 2 tests/userprog/close-bad-fd
userprog/build/grade:	     2/ 2 tests/userprog/close-twice
userprog/build/grade:	     2/ 2 tests/userprog/read-bad-fd
userprog/build/grade:	     2/ 2 tests/userprog/read-stdout
userprog/build/grade:	     2/ 2 tests/userprog/write-bad-fd
userprog/build/grade:	     2/ 2 tests/userprog/write-stdin
userprog/build/grade:	     2/ 2 tests/userprog/multi-child-fd
userprog/build/grade:	- Test robustness of pointer handling.
userprog/build/grade:	     3/ 3 tests/userprog/create-bad-ptr
userprog/build/grade:	     3/ 3 tests/userprog/exec-bad-ptr
userprog/build/grade:	     3/ 3 tests/userprog/open-bad-ptr
userprog/build/grade:	     3/ 3 tests/userprog/read-bad-ptr
userprog/build/grade:	     3/ 3 tests/userprog/write-bad-ptr
userprog/build/grade:	- Test robustness of buffer copying across page boundaries.
userprog/build/grade:	     3/ 3 tests/userprog/create-bound
userprog/build/grade:	     3/ 3 tests/userprog/open-boundary
userprog/build/grade:	     3/ 3 tests/userprog/read-boundary
userprog/build/grade:	     3/ 3 tests/userprog/write-boundary
userprog/build/grade:	- Test handling of null pointer and empty strings.
userprog/build/grade:	     2/ 2 tests/userprog/create-null
userprog/build/grade:	     2/ 2 tests/userprog/open-null
userprog/build/grade:	     2/ 2 tests/userprog/open-empty
userprog/build/grade:	- Test robustness of system call implementation.
userprog/build/grade:	     3/ 3 tests/userprog/sc-bad-arg
userprog/build/grade:	     3/ 3 tests/userprog/sc-bad-sp
userprog/build/grade:	     5/ 5 tests/userprog/sc-boundary
userprog/build/grade:	     5/ 5 tests/userprog/sc-boundary-2
userprog/build/grade:	- Test robustness of "exec" and "wait" system calls.
userprog/build/grade:	     5/ 5 tests/userprog/exec-missing
userprog/build/grade:	     5/ 5 tests/userprog/wait-bad-pid
userprog/build/grade:	     5/ 5 tests/userprog/wait-killed
userprog/build/grade:	- Test robustness of exception handling.
userprog/build/grade:	     1/ 1 tests/userprog/bad-read
userprog/build/grade:	     1/ 1 tests/userprog/bad-write
userprog/build/grade:	     1/ 1 tests/userprog/bad-jump
userprog/build/grade:	     1/ 1 tests/userprog/bad-read2
userprog/build/grade:	     1/ 1 tests/userprog/bad-write2
userprog/build/grade:	     1/ 1 tests/userprog/bad-jump2
userprog/build/grade:	- Section summary.
userprog/build/grade:Functionality of features that VM might break (tests/userprog/no-vm/Rubric):
userprog/build/grade:	  ** 0/ 1 tests/userprog/no-vm/multi-oom
userprog/build/grade:	- Section summary.
userprog/build/grade:	- Test basic support for small files.
userprog/build/grade:	     1/ 1 tests/filesys/base/sm-create
userprog/build/grade:	     2/ 2 tests/filesys/base/sm-full
userprog/build/grade:	     2/ 2 tests/filesys/base/sm-random
userprog/build/grade:	     2/ 2 tests/filesys/base/sm-seq-block
userprog/build/grade:	     3/ 3 tests/filesys/base/sm-seq-random
userprog/build/grade:	- Test basic support for large files.
userprog/build/grade:	     1/ 1 tests/filesys/base/lg-create
userprog/build/grade:	     2/ 2 tests/filesys/base/lg-full
userprog/build/grade:	     2/ 2 tests/filesys/base/lg-random
userprog/build/grade:	     2/ 2 tests/filesys/base/lg-seq-block
userprog/build/grade:	     3/ 3 tests/filesys/base/lg-seq-random
userprog/build/grade:	- Test synchronized multiprogram access to files.
userprog/build/grade:	     4/ 4 tests/filesys/base/syn-read
userprog/build/grade:	     4/ 4 tests/filesys/base/syn-write
userprog/build/grade:	     2/ 2 tests/filesys/base/syn-remove
userprog/build/grade:	- Section summary.
userprog/build/grade:- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
userprog/build/grade:DETAILS OF tests/userprog/no-vm/multi-oom FAILURE:
userprog/build/grade:OUTPUT FROM tests/userprog/no-vm/multi-oom:
userprog/build/grade:Copying tests/userprog/no-vm/multi-oom to scratch partition...
userprog/build/grade:qemu-system-i386 -device isa-debug-exit -hda /tmp/M642R8HWYx.dsk -m 4 -net none -nographic -monitor null
userprog/build/grade:c[?7l[2J[0mSeaBIOS (version 1.13.0-1ubuntu1.1)
userprog/build/grade:Kernel command line: -q -f extract run multi-oom
userprog/build/grade:Putting 'multi-oom' into the file system...
userprog/build/grade:Executing 'multi-oom':
userprog/build/grade:(multi-oom) begin
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(51)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(-1)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:multi-oom: exit(42)
userprog/build/grade:(multi-oom) after run 4/10, expected depth 51, actual depth 42.: FAILED
userprog/build/grade:multi-oom: exit(1)
userprog/build/grade:Execution of 'multi-oom' complete.
Binary file userprog/build/kernel.o matches
Binary file userprog/build/kernel.bin matches
userprog/exception.c:   In a real Unix-like OS, most of these interrupts would be
userprog/exception.c:   described in [SV-386] 3-24 and 3-25, but we don't implement
userprog/exception.c:   Refer to [IA32-v3a] section 5.15 "Exception and Interrupt
userprog/exception.c:  intr_register_int (16, 0, INTR_ON, kill, "#MF x87 FPU Floating-Point Error");
userprog/exception.c:                     "#XF SIMD Floating-Point Exception");
userprog/exception.c:  intr_register_int (14, 0, INTR_OFF, page_fault, "#PF Page-Fault Exception");
userprog/exception.c:     the kernel.  Real Unix-like operating systems pass most
userprog/exception.c:  switch (f->cs)
userprog/exception.c:              thread_name (), f->vec_no, intr_name (f->vec_no));
userprog/exception.c:         may cause kernel exceptions--but they shouldn't arrive
userprog/exception.c:      PANIC ("Kernel bug - unexpected interrupt in kernel"); 
userprog/exception.c:             f->vec_no, intr_name (f->vec_no), f->cs);
userprog/exception.c:   description of "Interrupt 14--Page Fault Exception (#PF)" in
userprog/exception.c:   [IA32-v3a] section 5.15 "Exception and Interrupt Reference". */
userprog/exception.c:  bool not_present;  /* True: not-present page, false: writing r/o page. */
userprog/exception.c:     that caused the fault (that's f->eip).
userprog/exception.c:     See [IA32-v2a] "MOV--Move to/from Control Registers" and
userprog/exception.c:     [IA32-v3a] 5.15 "Interrupt 14--Page Fault Exception
userprog/exception.c:  not_present = (f->error_code & PF_P) == 0;
userprog/exception.c:  write = (f->error_code & PF_W) != 0;
userprog/exception.c:  user = (f->error_code & PF_U) != 0;
userprog/exception.c:	  exit(-1);
userprog/syscall.c:#include <syscall-nr.h>
userprog/syscall.c:		exit(-1);
userprog/syscall.c:	  |--------------|
userprog/syscall.c:	  |--------------|
userprog/syscall.c:	  |--------------|  <<----esp
userprog/syscall.c://	printf("syscall : %d\n", *(uint32_t *)(f->esp));
userprog/syscall.c:	int *syscall_no = f->esp;
userprog/syscall.c:			exit(*(uint32_t *)(f->esp+4));
userprog/syscall.c:			f->eax = exec((const char *)*(uint32_t *)(f->esp+4));
userprog/syscall.c:			f->eax = wait((pid_t)*(uint32_t *)(f->esp+4));
userprog/syscall.c:			f->eax = create((const char *)*(uint32_t *)(f->esp+4), (unsigned)*(uint32_t *)(f->esp+8));
userprog/syscall.c:			f->eax = remove((const char *)*(uint32_t *)(f->esp+4));
userprog/syscall.c:			f->eax = open((const char *)*(uint32_t *)(f->esp+4));
userprog/syscall.c:			f->eax = filesize((int)*(uint32_t *)(f->esp+4));
userprog/syscall.c:			f->eax = (uint32_t)read(syscall_no[1], (void*)syscall_no[2], (unsigned)syscall_no[3]);
userprog/syscall.c:			f->eax = (uint32_t)write(syscall_no[1], (void*)syscall_no[2], (unsigned)syscall_no[3]);
userprog/syscall.c:			seek((int)*(uint32_t *)(f->esp+4), (unsigned)*(uint32_t *)(f->esp+8));
userprog/syscall.c:			f->eax = tell((int)*(uint32_t *)(f->esp+4));
userprog/syscall.c:			close((int)*(uint32_t *)(f->esp+4));
userprog/syscall.c:			f->eax = (uint32_t)fibonacci(syscall_no[1]);
userprog/syscall.c:			f->eax = (uint32_t)max_of_four_int(syscall_no[1], syscall_no[2], syscall_no[3], syscall_no[4]);
userprog/syscall.c:	thread_current()->exit_status = status;
userprog/syscall.c:		if(thread_current()->fd[i] != NULL) close(i);
userprog/syscall.c:	int final=-1;
userprog/syscall.c:		if(thread_current()->fd[fd]==NULL){
userprog/syscall.c:			exit(-1);
userprog/syscall.c:		if(thread_current()->fd[fd]->deny_write)
userprog/syscall.c:			file_deny_write(thread_current()->fd[fd]);
userprog/syscall.c:		final = file_write(thread_current()->fd[fd], buffer, length);
userprog/syscall.c:	if(file == NULL) return -1;
userprog/syscall.c:	int final=-1;
userprog/syscall.c:	if(!is_user_vaddr(buffer)) exit(-1);
userprog/syscall.c:		if(thread_current()->fd[fd]==NULL){
userprog/syscall.c:			exit(-1);
userprog/syscall.c:		final = file_read(thread_current()->fd[fd], buffer, length);
userprog/syscall.c:	if(file==NULL) exit(-1);
userprog/syscall.c:	if(file==NULL) exit(-1);
userprog/syscall.c:	int final = -1;
userprog/syscall.c:	if(file==NULL) exit(-1);
userprog/syscall.c:		final=-1;
userprog/syscall.c:			if(thread_current()->fd[i] == NULL){
userprog/syscall.c:				if(strcmp(thread_current()->name, file)==0)
userprog/syscall.c:				thread_current()->fd[i] = f;
userprog/syscall.c:	if(thread_current()->fd[fd] == NULL) exit(-1);
userprog/syscall.c:	return file_length(thread_current()->fd[fd]); 
userprog/syscall.c:	if(thread_current()->fd[fd]==NULL) exit(-1);
userprog/syscall.c:	return file_seek(thread_current()->fd[fd], position);
userprog/syscall.c:	if(thread_current()->fd[fd]==NULL) exit(-1);
userprog/syscall.c:	return file_tell(thread_current()->fd[fd]);
userprog/syscall.c:	if(thread_current()->fd[fd]==NULL) exit(-1);
userprog/syscall.c:	tmp = thread_current()->fd[fd];
userprog/syscall.c:	thread_current()->fd[fd]=NULL;
userprog/process.c:	if(filesys_open(name_command) == NULL) return -1;
userprog/process.c:	for (elem = list_begin(&thread_current()->child); elem != list_end(&thread_current()->child); elem = list_next(elem)) {
userprog/process.c:		if(t->tid == tid){
userprog/process.c:	sema_down(&child->lock_load);
userprog/process.c:	if(child->exit_status == -1)
userprog/process.c:	sema_up(&thread_current()->lock_load);
userprog/process.c:		exit(-1);
userprog/process.c:	   threads/intr-stubs.S).  Because intr_exit takes all of its
userprog/process.c:   exception), returns -1.  If TID is invalid or if it was not a
userprog/process.c:   been successfully called for the given TID, returns -1
userprog/process.c:   This function will be implemented in problem 2-2.  For now, it
userprog/process.c:	for(elem = list_begin(&(curr->child)); elem != list_end(&(curr->child)); elem = list_next(elem)){
userprog/process.c:		if(child_tid == temp->tid){
userprog/process.c:	if(found == NULL) return -1;
userprog/process.c:	if(found->status == THREAD_DYING) return -1;
userprog/process.c:		sema_down(&(found->lock_child));
userprog/process.c:		exit_status = found->exit_status;
userprog/process.c:		list_remove(&(found->childelem));
userprog/process.c:		sema_up(&(found->lock_memory));
userprog/process.c:	return -1;
userprog/process.c:	  to the kernel-only page directory */
userprog/process.c:	pd = cur->pagedir;
userprog/process.c:		cur->pagedir = NULL;
userprog/process.c:	sema_up(&(cur->lock_child));
userprog/process.c:	sema_down(&(cur->lock_memory));
userprog/process.c:	pagedir_activate (t->pagedir);
userprog/process.c:   from the ELF specification, [ELF1], more-or-less verbatim.  */
userprog/process.c:/* ELF types.  See [ELF1] 1-2. */
userprog/process.c:/* Executable header.  See [ELF1] 1-4 to 1-8.
userprog/process.c:/* Program header.  See [ELF1] 2-2 to 2-4.
userprog/process.c:   (see [ELF1] 1-6). */
userprog/process.c:/* Values for p_type.  See [ELF1] 2-3. */
userprog/process.c:/* Flags for p_flags.  See [ELF3] 2-3 and 2-4. */
userprog/process.c:	t->pagedir = pagedir_create ();
userprog/process.c:	if (t->pagedir == NULL) 
userprog/process.c:	strlcpy(t->name, argv[0], strlen(t->name)+1);
userprog/process.c:	file = filesys_open (t->name);
userprog/process.c:								- read_bytes);
userprog/process.c:	for(i=argc-1;i>=0;i--){
userprog/process.c:		(*esp) -= strlen(argv[i])+1;
userprog/process.c:	for(i=(4-align)%4;i;i--){
userprog/process.c:		(*esp)--;
userprog/process.c:	(*esp) -= sizeof(char *);
userprog/process.c:	for(i=argc-1;i>=0;i--){
userprog/process.c:		(*esp) -= sizeof(void *);
userprog/process.c:	(*esp) -= sizeof(void*);
userprog/process.c:	(*esp) -= sizeof(int);
userprog/process.c:	(*esp) -= sizeof(void*);
userprog/process.c:	if ((phdr->p_offset & PGMASK) != (phdr->p_vaddr & PGMASK)) 
userprog/process.c:	if (phdr->p_offset > (Elf32_Off) file_length (file)) 
userprog/process.c:	if (phdr->p_memsz < phdr->p_filesz) 
userprog/process.c:	if (phdr->p_memsz == 0)
userprog/process.c:	if (!is_user_vaddr ((void *) phdr->p_vaddr))
userprog/process.c:	if (!is_user_vaddr ((void *) (phdr->p_vaddr + phdr->p_memsz)))
userprog/process.c:	if (phdr->p_vaddr + phdr->p_memsz < phdr->p_vaddr)
userprog/process.c:	if (phdr->p_vaddr < PGSIZE)
userprog/process.c:   - READ_BYTES bytes at UPAGE must be read from FILE
userprog/process.c:   - ZERO_BYTES bytes at UPAGE + READ_BYTES must be zeroed.
userprog/process.c:   user process if WRITABLE is true, read-only otherwise.
userprog/process.c:		size_t page_zero_bytes = PGSIZE - page_read_bytes;
userprog/process.c:		read_bytes -= page_read_bytes;
userprog/process.c:		zero_bytes -= page_zero_bytes;
userprog/process.c:		success = install_page (((uint8_t *) PHYS_BASE) - PGSIZE, kpage, true);
userprog/process.c:   otherwise, it is read-only.
userprog/process.c:	return (pagedir_get_page (t->pagedir, upage) == NULL
userprog/process.c:			&& pagedir_set_page (t->pagedir, upage, kpage, writable));
utils/backtrace:#! /usr/bin/perl -w
utils/backtrace:if (grep ($_ eq '-h' || $_ eq '--help', @ARGV)) {
utils/backtrace:die "backtrace: at least one argument required (use --help for help)\n"
utils/backtrace:@ARGV = grep (!/^(call|stack:?|[-+])$/i, @ARGV);
utils/backtrace:    die "backtrace: $bin: not found (use --help for help)\n" if ! -e $bin;
utils/backtrace:    if (-e 'kernel.o') {
utils/backtrace:    } elsif (-e 'build/kernel.o') {
utils/backtrace:	die "backtrace: no binary specified and neither \"kernel.o\" nor \"build/kernel.o\" exists (use --help for help)\n";
utils/backtrace:my ($a2l) = search_path ("i386-elf-addr2line") || search_path ("addr2line");
utils/backtrace:    die "backtrace: neither `i386-elf-addr2line' nor `addr2line' in PATH\n";
utils/backtrace:	return $file if -e $file;
utils/backtrace:    open (A2L, "$a2l -fe $bin " . join (' ', map ($_->{ADDR}, @locs)) . "|");
utils/backtrace:    if (defined ($loc->{BINARY})
utils/backtrace:	&& (!defined ($cur_binary) || $loc->{BINARY} ne $cur_binary)) {
utils/backtrace:	$cur_binary = $loc->{BINARY};
utils/backtrace:    my ($addr) = $loc->{ADDR};
utils/backtrace:    $addr = sprintf ("0x%08x", hex ($addr)) if $addr =~ /^0x[0-9a-f]+$/i;
utils/backtrace:    if (defined ($loc->{BINARY})) {
utils/backtrace:	my ($function) = $loc->{FUNCTION};
utils/backtrace:	my ($line) = $loc->{LINE};
utils/backtrace:	$line = "..." . substr ($line, -25) if length ($line) > 28;
utils/.gitignore:setitimer-helper
utils/.gitignore:squish-pty
utils/.gitignore:squish-unix
utils/pintos:#! /usr/bin/perl -w
utils/pintos:# Command-line options.
utils/pintos:    usage (0) if @ARGV == 0 || (@ARGV == 1 && $ARGV[0] eq '--help');
utils/pintos:    if (grep ($_ eq '--', @kernel_args)) {
utils/pintos:	while ((my $arg = shift (@kernel_args)) ne '--') {
utils/pintos:		    "no-debug" => sub { set_debug ("none") },
utils/pintos:		    "k|kill-on-failure" => \$kill_on_failure,
utils/pintos:		    "v|no-vga" => sub { set_vga ('none'); },
utils/pintos:		    "s|no-serial" => sub { $serial = 0; },
utils/pintos:		    "p|put-file=s" => sub { add_file (\@puts, $_[1]); },
utils/pintos:		    "g|get-file=s" => sub { add_file (\@gets, $_[1]); },
utils/pintos:		    "filesys-size=s" => \&set_part,
utils/pintos:		    "scratch-size=s" => \&set_part,
utils/pintos:		    "swap-size=s" => \&set_part,
utils/pintos:		    "kernel-from=s" => \&set_part,
utils/pintos:		    "filesys-from=s" => \&set_part,
utils/pintos:		    "swap-from=s" => \&set_part,
utils/pintos:		    "make-disk=s" => sub { $make_disk = $_[1];
utils/pintos:    undef $timeout, print "warning: disabling timeout with --$debug\n"
utils/pintos:    print "warning: enabling serial port for -k or --kill-on-failure\n"
utils/pintos:      print STDERR "warning: setting --align=bochs for Bochs support\n"
utils/pintos:Usage: pintos [OPTION...] -- [ARGUMENT...]
utils/pintos:  --bochs                  (default) Use Bochs as simulator
utils/pintos:  --qemu                   Use QEMU as simulator
utils/pintos:  --player                 Use VMware Player as simulator
utils/pintos:  --no-debug               (default) No debugger
utils/pintos:  --monitor                Debug with simulator's monitor
utils/pintos:  --gdb                    Debug with gdb
utils/pintos:  -v, --no-vga             No VGA display or keyboard
utils/pintos:  -s, --no-serial          No serial input or output
utils/pintos:  -t, --terminal           Display VGA in terminal (Bochs only)
utils/pintos:  -j SEED                  Randomize timer interrupts
utils/pintos:  -r, --realtime           Use realistic, not reproducible, timings
utils/pintos:  -T, --timeout=N          Kill Pintos after N seconds CPU time or N*load_avg
utils/pintos:                           seconds wall-clock time (whichever comes first)
utils/pintos:  -k, --kill-on-failure    Kill Pintos a few seconds after a kernel or user
utils/pintos:  -m, --mem=N              Give Pintos N MB physical RAM (default: 4)
utils/pintos:  -p, --put-file=HOSTFN    Copy HOSTFN into VM, by default under same name
utils/pintos:  -g, --get-file=GUESTFN   Copy GUESTFN out of VM, by default under same name
utils/pintos:  -a, --as=FILENAME        Specifies guest (for -p) or host (for -g) file name
utils/pintos:  --PARTITION=FILE         Use a copy of FILE for the given PARTITION
utils/pintos:  --PARTITION-size=SIZE    Create an empty PARTITION of the given SIZE in MB
utils/pintos:  --PARTITION-from=DISK    Use of a copy of the given PARTITION in DISK
utils/pintos:  (There is no --kernel-size, --scratch, or --scratch-from option.)
utils/pintos:  --make-disk=DISK         Name the new DISK and don't delete it after the run
utils/pintos:  --disk=DISK              Also use existing DISK (may be used multiple times)
utils/pintos:  --loader=FILE            Use FILE as bootstrap loader (default: loader.bin)
utils/pintos:  --geometry=H,S           Use H head, S sector geometry (default: 16,63)
utils/pintos:  --geometry=zip           Use 64 head, 32 sector geometry for USB-ZIP boot
utils/pintos:  --align=bochs            Pad out disk to cylinder to support Bochs (default)
utils/pintos:  --align=full             Align partition boundaries to cylinder boundary to
utils/pintos:  --align=none             Don't align partitions at all, to save space
utils/pintos:  -h, --help               Display this help message.
utils/pintos:    die "--$new_sim conflicts with --$sim\n"
utils/pintos:    die "--$new_debug conflicts with --$debug\n"
utils/pintos:    die "--realtime conflicts with --jitter\n" if defined $realtime;
utils/pintos:    die "different --jitter already defined\n"
utils/pintos:# Sets real-time timer interrupts.
utils/pintos:    die "--realtime conflicts with --jitter\n" if defined $jitter;
utils/pintos:    die "-a (or --as) is only allowed after -p or -g\n" if !defined $as_ref;
utils/pintos:    die "Only one -a (or --as) is allowed after -p or -g\n"
utils/pintos:      if defined $as_ref->[1];
utils/pintos:    $as_ref->[1] = $as;
utils/pintos:	die "$make_disk: already exists\n" if -e $make_disk;
utils/pintos:      while @kernel_args && $kernel_args[0] =~ /^-/;
utils/pintos:    push (@args, 'append', $_->[0]) foreach @gets;
utils/pintos:	next if exists $p->{DISK};
utils/pintos:    # then write an end-of-archive marker.
utils/pintos:    put_scratch_file ($_->[0], defined $_->[1] ? $_->[1] : $_->[0],
utils/pintos:    my ($size) = round_up (max (@gets * 1024 * 1024, $p->{BYTES} || 0), 512);
utils/pintos:    if (exists $p->{DISK}) {
utils/pintos:	die "$p->{DISK}: scratch partition too small\n"
utils/pintos:	  if $p->{SECTORS} * 512 < $size;
utils/pintos:	open ($disk_handle, '+<', $p->{DISK}) or die "$p->{DISK}: open: $!\n";
utils/pintos:	my ($start) = $p->{START} * 512;
utils/pintos:	  or die "$p->{DISK}: seek: $!\n";
utils/pintos:	copy_file ($part_handle, $part_fn, $disk_handle, $p->{DISK}, $size);
utils/pintos:	close ($disk_handle) or die "$p->{DISK}: close: $!\n";
utils/pintos:    my ($part_fn) = $p->{DISK};
utils/pintos:    sysseek ($part_handle, $p->{START} * 512, SEEK_SET) == $p->{START} * 512
utils/pintos:    my ($part_end) = ($p->{START} + $p->{SECTORS}) * 512;
utils/pintos:	my ($name) = defined ($get->[1]) ? $get->[1] : $get->[0];
utils/pintos:# Returns $number in a $size-byte numeric field in the format used by
utils/pintos:    my ($len) = $size - 1;
utils/pintos:    die "$number: too large for $size-byte octal ustar field\n"
utils/pintos:# Calculates and returns the ustar checksum of 512-byte ustar archive
utils/pintos:    my ($size) = -s _;
utils/pintos:      if $size != -s $put_handle;
utils/pintos:    write_fully ($disk_handle, $disk_file_name, "\0" x (512 - $size % 512))
utils/pintos:    read_fully ($disk_handle, $disk_file_name, 512 - $size % 512)
utils/pintos:    my ($bin) = $debug eq 'monitor' ? 'bochs-dbg' : 'bochs';
utils/pintos:	$squish_pty = find_in_path ("squish-pty");
utils/pintos:	print "warning: can't find squish-pty, so terminal input will fail\n"
utils/pintos:romimage: file=\$BXSHARE/BIOS-bochs-latest
utils/pintos:vgaromimage: file=\$BXSHARE/VGABIOS-lgpl-latest
utils/pintos:    print_bochs_disk_line ("ata0-master", $disks[0]);
utils/pintos:    print_bochs_disk_line ("ata0-slave", $disks[1]);
utils/pintos:    print_bochs_disk_line ("ata1-master", $disks[2]);
utils/pintos:    print_bochs_disk_line ("ata1-slave", $disks[3]);
utils/pintos:    my (@cmd) = ($bin, '-q');
utils/pintos:    push (@cmd, '-j', $jitter) if defined $jitter;
utils/pintos:    print "warning: qemu doesn't support --terminal\n"
utils/pintos:    my (@cmd) = ('qemu-system-i386');
utils/pintos:    push (@cmd, '-device', 'isa-debug-exit');
utils/pintos:    push (@cmd, '-hda', $disks[0]) if defined $disks[0];
utils/pintos:    push (@cmd, '-hdb', $disks[1]) if defined $disks[1];
utils/pintos:    push (@cmd, '-hdc', $disks[2]) if defined $disks[2];
utils/pintos:    push (@cmd, '-hdd', $disks[3]) if defined $disks[3];
utils/pintos:    push (@cmd, '-m', $mem);
utils/pintos:    push (@cmd, '-net', 'none');
utils/pintos:    push (@cmd, '-nographic') if $vga eq 'none';
utils/pintos:    push (@cmd, '-serial', 'stdio') if $serial && $vga ne 'none';
utils/pintos:    push (@cmd, '-S') if $debug eq 'monitor';
utils/pintos:    push (@cmd, '-s', '-S') if $debug eq 'gdb';
utils/pintos:    push (@cmd, '-monitor', 'null') if $vga eq 'none' && $debug eq 'none';
utils/pintos:    player_unsup ("--$debug") if $debug ne 'none';
utils/pintos:    player_unsup ("--no-vga") if $vga eq 'none';
utils/pintos:    player_unsup ("--terminal") if $vga eq 'terminal';
utils/pintos:    player_unsup ("--jitter") if defined $jitter;
utils/pintos:    player_unsup ("--timeout"), undef $timeout if defined $timeout;
utils/pintos:    player_unsup ("--kill-on-failure"), undef $kill_on_failure
utils/pintos:#! /usr/bin/vmware -G
utils/pintos:	$squish_unix = find_in_path ("squish-unix");
utils/pintos:	print "warning: can't find squish-unix, so terminal input ",
utils/pintos:    if (-s ($handle) < $size) {
utils/pintos:	sysseek ($handle, $size - 1, 0) == $size - 1
utils/pintos:    my ($size) = -s $file;
utils/pintos:	my $termios = POSIX::Termios->new;
utils/pintos:	$termios->getattr (0);
utils/pintos:	$cleanup = sub { $termios->setattr (0, &POSIX::TCSANOW); }
utils/pintos:        # Kind of a gross hack, because qemu's isa-debug-exit device
utils/pintos:        # only allows odd-numbered exit values, so we can't exit
utils/pintos:	print "\nTIMEOUT after ", time () - $start_time,
utils/pintos:	  " seconds of wall-clock time";
utils/pintos:	print  " - $load_avg" if defined $load_avg;
utils/pintos:	    { exec ("setitimer-helper", $timeout, @_); };
utils/pintos:	    print STDERR "warning: setitimer-helper is not installed, so ",
utils/pintos:    -x "$_/$program" and return $program foreach split (':', $ENV{PATH});
utils/Makefile:all: setitimer-helper squish-pty squish-unix
utils/Makefile:CFLAGS = -Wall -W
utils/Makefile:LOADLIBES = -lm
utils/Makefile:setitimer-helper: setitimer-helper.o
utils/Makefile:squish-pty: squish-pty.o
utils/Makefile:squish-unix: squish-unix.o
utils/Makefile:	rm -f *.o setitimer-helper squish-pty squish-unix
utils/pintos-gdb:GDBMACROS=/usr/class/cs140/pintos/pintos/src/misc/gdb-macros
utils/pintos-gdb:if command -v i386-elf-gdb >/dev/null 2>&1; then
utils/pintos-gdb:	GDB=i386-elf-gdb
utils/pintos-gdb:if test -f "$GDBMACROS"; then
utils/pintos-gdb:	exec $GDB -x "$GDBMACROS" "$@"
utils/pintos-mkdisk:if (grep ($_ eq '--', @ARGV)) {
utils/pintos-mkdisk:    while ((my $arg = shift (@kernel_args)) ne '--') {
utils/pintos-mkdisk:	    "filesys-size=s" => \&set_part,
utils/pintos-mkdisk:	    "scratch-size=s" => \&set_part,
utils/pintos-mkdisk:	    "swap-size=s" => \&set_part,
utils/pintos-mkdisk:	    "kernel-from=s" => \&set_part,
utils/pintos-mkdisk:	    "filesys-from=s" => \&set_part,
utils/pintos-mkdisk:	    "scratch-from=s" => \&set_part,
utils/pintos-mkdisk:	    "swap-from=s" => \&set_part,
utils/pintos-mkdisk:	    "no-loader" => \&set_no_loader,
utils/pintos-mkdisk:die "$disk_fn: already exists\n" if -e $disk_fn;
utils/pintos-mkdisk:    die "can't specify both --loader and --no-loader\n"
utils/pintos-mkdisk:    die "can't specify both --loader and --no-loader\n"
utils/pintos-mkdisk:die "can't write command-line arguments without --loader or --kernel\n"
utils/pintos-mkdisk:print STDERR "warning: --loader only makes sense without --kernel "
utils/pintos-mkdisk:pintos-mkdisk, a utility for creating Pintos virtual disks
utils/pintos-mkdisk:Usage: pintos-mkdisk [OPTIONS] DISK [-- ARGUMENT...]
utils/pintos-mkdisk:  --PARTITION=FILE         Use a copy of FILE for the given PARTITION
utils/pintos-mkdisk:  --PARTITION-size=SIZE    Create an empty PARTITION of the given SIZE in MB
utils/pintos-mkdisk:  --PARTITION-from=DISK    Use of a copy of the given PARTITION in DISK
utils/pintos-mkdisk:  (There is no --kernel-size option.)
utils/pintos-mkdisk:  --format=partitioned     Write partition table to output (default)
utils/pintos-mkdisk:  --format=raw             Do not write partition table to output
utils/pintos-mkdisk:  --loader[=FILE]          Get bootstrap loader from FILE (default: loader.bin
utils/pintos-mkdisk:                           if --kernel option is specified, empty otherwise)
utils/pintos-mkdisk:  --no-loader              Do not include a bootstrap loader
utils/pintos-mkdisk:  --geometry=H,S           Use H head, S sector geometry (default: 16, 63)
utils/pintos-mkdisk:  --geometry=zip           Use 64 head, 32 sector geometry for USB-ZIP boot
utils/pintos-mkdisk:  --align=bochs            Round size to cylinder for Bochs support (default)
utils/pintos-mkdisk:  --align=full             Align partition boundaries to cylinder boundary to
utils/pintos-mkdisk:  --align=none             Don't align partitions at all, to save space
utils/pintos-mkdisk:  -h, --help               Display this help message.
utils/pintos-set-cmdline:#! /usr/bin/perl -w
utils/pintos-set-cmdline:# Get command-line arguments.
utils/pintos-set-cmdline:usage (0) if @ARGV == 1 && $ARGV[0] eq '--help';
utils/pintos-set-cmdline:usage (1) if @ARGV < 2 || $ARGV[1] ne '--';
utils/pintos-set-cmdline:pintos-set-cmdline, a utility for changing the command line in Pintos disks
utils/pintos-set-cmdline:Usage: pintos-set-cmdline DISK -- [ARGUMENT...]
utils/Pintos.pm:# Kernel command-line arguments follow the loader.
utils/Pintos.pm:# file-based partition has been copied into a new virtual disk:
utils/Pintos.pm:    my ($role, $source) = $opt =~ /^([a-z]+)(?:-([a-z]+))?/ or die;
utils/Pintos.pm:	    print STDERR "(did you want --$role-from=$arg or --disk=$arg?)\n"
utils/Pintos.pm:	$p->{FILE} = $arg;
utils/Pintos.pm:	$p->{OFFSET} = 0;
utils/Pintos.pm:	$p->{BYTES} = -s $arg;
utils/Pintos.pm:	$p->{FILE} = $arg;
utils/Pintos.pm:	$p->{OFFSET} = $sp->{START} * 512;
utils/Pintos.pm:	$p->{BYTES} = $sp->{SECTORS} * 512;
utils/Pintos.pm:	$p->{FILE} = "/dev/zero";
utils/Pintos.pm:	$p->{OFFSET} = 0;
utils/Pintos.pm:	$p->{BYTES} = ceil ($arg * 1024 * 1024);
utils/Pintos.pm:#   LOADER => $LOADER_SIZE-byte string containing the loader binary
utils/Pintos.pm:	die if $p->{DISK};
utils/Pintos.pm:	my ($bytes) = $p->{BYTES};
utils/Pintos.pm:	$p->{DISK} = $args{DISK};
utils/Pintos.pm:	$p->{START} = $start;
utils/Pintos.pm:	$p->{SECTORS} = $end - $start;
utils/Pintos.pm:	write_zeros ($disk, $disk_fn, 512 * ($geometry{S} - 1)) if $align;
utils/Pintos.pm:	my ($fn) = $p->{FILE};
utils/Pintos.pm:	if ($p->{OFFSET}) {
utils/Pintos.pm:	    sysseek ($source, $p->{OFFSET}, 0) == $p->{OFFSET}
utils/Pintos.pm:	copy_file ($source, $fn, $disk, $disk_fn, $p->{BYTES});
utils/Pintos.pm:	write_zeros ($disk, $disk_fn, $p->{SECTORS} * 512 - $p->{BYTES});
utils/Pintos.pm:	write_zeros ($disk, $disk_fn, ($pad_sectors - $total_sectors) * 512);
utils/Pintos.pm:	defined (my $p = $partitions->{$role}) or next;
utils/Pintos.pm:	my $end = $p->{START} + $p->{SECTORS} - 1;
utils/Pintos.pm:	$table .= pack_chs ($p->{START}, $geometry);  # CHS of partition start
utils/Pintos.pm:	$table .= pack ("V", $p->{START});            # LBA of partition start
utils/Pintos.pm:	$table .= pack ("V", $p->{SECTORS});          # Length in sectors
utils/Pintos.pm:	$size -= $chunk_size;
utils/Pintos.pm:	$size -= $chunk_size;
utils/Pintos.pm:    return int ((ceil ($x) + $y - 1) / $y);
utils/Pintos.pm:    -s $handle == $LOADER_SIZE || -s $handle == 512
utils/Pintos.pm:# Converts logical sector $lba to a 3-byte packed geometrical sector
utils/Pintos.pm:# returns the geometrical sector as a 3-byte string.
utils/Pintos.pm:    my ($hpc) = $geometry->{H};
utils/Pintos.pm:    my ($spt) = $geometry->{S};
utils/Pintos.pm:# Tries to read an MBR from $file.  Returns the 512-byte MBR if
utils/Pintos.pm:    if (-s FILE == 0) {
utils/Pintos.pm:    } elsif (-s FILE >= 512) {
utils/Pintos.pm:# Parses the partition-table in the specified 512-byte $mbr and
utils/Pintos.pm:	(printf STDERR "warning: non-Pintos partition type 0x%02x in %s\n",
utils/Pintos.pm:    -e && return $_ foreach $base_name, "build/$base_name";
utils/setitimer-helper.c:               "setitimer-helper: runs a program with a virtual CPU limit\n"
utils/setitimer-helper.c:      it.it_value.tv_usec = (timeout - floor (timeout)) * 1000000;
utils/squish-pty.c:/* Make FD non-blocking if NONBLOCKING is true,
utils/squish-pty.c:   is true, that returned end-of-file or error indication RETVAL.
utils/squish-pty.c:   Sets *FD to -1 if the fd is no longer readable or writable. */
utils/squish-pty.c:              *fd = -1;
utils/squish-pty.c:          *fd = -1;
utils/squish-pty.c:  /* Make PTY, stdin, and stdout non-blocking. */
utils/squish-pty.c:     waiting for end-of-line.  We want to minimize context
utils/squish-pty.c:  while (pipes[1].in != -1)
utils/squish-pty.c:          /* Don't do anything with the stdin->pty pipe until we
utils/squish-pty.c:             have some data for the pty->stdout pipe.  If we get
utils/squish-pty.c:          if (p->in != -1 && p->size + p->ofs < sizeof p->buf)
utils/squish-pty.c:            FD_SET (p->in, &read_fds);
utils/squish-pty.c:          if (p->out != -1 && p->size > 0)
utils/squish-pty.c:            FD_SET (p->out, &write_fds); 
utils/squish-pty.c:          if (p->in != -1 && FD_ISSET (p->in, &read_fds))
utils/squish-pty.c:              ssize_t n = read (p->in, p->buf + p->ofs + p->size,
utils/squish-pty.c:                                sizeof p->buf - p->ofs - p->size);
utils/squish-pty.c:                  p->active = true;
utils/squish-pty.c:                  p->size += n;
utils/squish-pty.c:                  if (p->size == BUFSIZ && p->ofs != 0)
utils/squish-pty.c:                      memmove (p->buf, p->buf + p->ofs, p->size);
utils/squish-pty.c:                      p->ofs = 0;
utils/squish-pty.c:                handle_error (n, &p->in, p->in == pty, "read");
utils/squish-pty.c:          if (p->out != -1 && FD_ISSET (p->out, &write_fds)) 
utils/squish-pty.c:              ssize_t n = write (p->out, p->buf + p->ofs, p->size);
utils/squish-pty.c:                  p->ofs += n;
utils/squish-pty.c:                  p->size -= n;
utils/squish-pty.c:                  if (p->size == 0)
utils/squish-pty.c:                    p->ofs = 0;
utils/squish-pty.c:                handle_error (n, &p->out, p->out == pty, "write");
utils/squish-pty.c:    if (pipes[1].out == -1)
utils/squish-pty.c:        while (p->size > 0) 
utils/squish-pty.c:            n = write (p->out, p->buf + p->ofs, p->size);
utils/squish-pty.c:              fail_io ("zero-length write");
utils/squish-pty.c:            p->ofs += n;
utils/squish-pty.c:            p->size -= n;
utils/squish-pty.c:        p->ofs = 0;
utils/squish-pty.c:        p->size = n = read (p->in, p->buf, sizeof p->buf);
utils/squish-pty.c:               "usage: squish-pty COMMAND [ARG]...\n"
utils/squish-unix.c:/* Make FD non-blocking if NONBLOCKING is true,
utils/squish-unix.c:   FD_IS_SOCK is true, that returned end-of-file or error
utils/squish-unix.c:          *fd = -1;
utils/squish-unix.c:  /* Make SOCK, stdin, and stdout non-blocking. */
utils/squish-unix.c:     end-of-line. */
utils/squish-unix.c:  while (pipes[0].in != -1 || pipes[1].in != -1
utils/squish-unix.c:         || (pipes[1].size && pipes[1].out != -1))
utils/squish-unix.c:          /* Don't do anything with the stdin->sock pipe until we
utils/squish-unix.c:             have some data for the sock->stdout pipe.  If we get
utils/squish-unix.c:          if (p->in != -1 && p->size + p->ofs < sizeof p->buf)
utils/squish-unix.c:            FD_SET (p->in, &read_fds);
utils/squish-unix.c:          if (p->out != -1 && p->size > 0)
utils/squish-unix.c:            FD_SET (p->out, &write_fds); 
utils/squish-unix.c:              if (p->out == -1)
utils/squish-unix.c:                  while (p->size > 0) 
utils/squish-unix.c:                      n = write (p->out, p->buf + p->ofs, p->size);
utils/squish-unix.c:                        fail_io ("zero-length write");
utils/squish-unix.c:                      p->ofs += n;
utils/squish-unix.c:                      p->size -= n;
utils/squish-unix.c:                  p->ofs = 0;
utils/squish-unix.c:                  p->size = n = read (p->in, p->buf, sizeof p->buf);
utils/squish-unix.c:          if (p->in != -1 && FD_ISSET (p->in, &read_fds))
utils/squish-unix.c:              ssize_t n = read (p->in, p->buf + p->ofs + p->size,
utils/squish-unix.c:                                sizeof p->buf - p->ofs - p->size);
utils/squish-unix.c:                  p->active = true;
utils/squish-unix.c:                  p->size += n;
utils/squish-unix.c:                  if (p->size == BUFSIZ && p->ofs != 0)
utils/squish-unix.c:                      memmove (p->buf, p->buf + p->ofs, p->size);
utils/squish-unix.c:                      p->ofs = 0;
utils/squish-unix.c:              else if (!handle_error (n, &p->in, p->in == sock, "read"))
utils/squish-unix.c:          if (p->out != -1 && FD_ISSET (p->out, &write_fds)) 
utils/squish-unix.c:              ssize_t n = write (p->out, p->buf + p->ofs, p->size);
utils/squish-unix.c:                  p->ofs += n;
utils/squish-unix.c:                  p->size -= n;
utils/squish-unix.c:                  if (p->size == 0)
utils/squish-unix.c:                    p->ofs = 0;
utils/squish-unix.c:              else if (!handle_error (n, &p->out, p->out == sock, "write"))
utils/squish-unix.c:               "usage: squish-unix SOCKET COMMAND [ARG]...\n"
utils/squish-unix.c:  sun.sun_path[sizeof sun.sun_path - 1] = '\0';
vm/Make.vars:# -*- makefile -*-
vm/Make.vars:kernel.bin: DEFINES = -DUSERPROG -DFILESYS -DVM
vm/Make.vars:SIMULATOR = --qemu
